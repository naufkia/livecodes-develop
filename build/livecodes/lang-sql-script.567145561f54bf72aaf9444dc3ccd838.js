"use strict";(()=>{var v="https://cdn.jsdelivr.net/npm/sql-formatter@4.0.2/dist/sql-formatter.min.js",x="https://cdn.jsdelivr.net/npm/sql.js@1.6.2/dist/";var a="application/json",g={name:"sql",title:"SQL",formatter:{factory:()=>(importScripts(v),async t=>({formatted:await self.sqlFormatter.format(t,{linesBetweenQueries:2}),cursorOffset:0}))},compiler:{url:x+"sql-wasm.min.js",factory:(t,s)=>(self.importScripts(s+"lang-sql-compiler.7a6736b65b9bfe968279cd988facfcaf.js"),self.createSqlCompiler()),scripts:({baseUrl:t})=>[t+"lang-sql-script.567145561f54bf72aaf9444dc3ccd838.js"],scriptType:a,compiledCodeLanguage:"json"},extensions:["sql","sqlite","sqlite3"],editor:"script"};window.livecodes={...window.livecodes,sql:{getResult:()=>new Promise((t,s)=>{window.addEventListener("load",()=>{let n=document.querySelector(`script[type="${a}"]`);if(n)try{let e=JSON.parse(n.innerHTML);e.data&&t(e),s(e.error||"Error compiling SQL")}catch{s("Error compiling SQL")}else s("Error compiling SQL")})}),getResultAsObjects:()=>new Promise(async(t,s)=>{try{let e=(await livecodes.sql.getResult()).data.map(i=>{let c=i.columns;return i.values.reduce((l,d)=>[...l,d.reduce((o,p,j)=>({...o,[c[j]]:p}),{})],[])});t(e)}catch(n){s(n)}}),render:t=>new Promise((s,n)=>{livecodes.sql.getResult().then(e=>{e.data.forEach(c=>{let l=c.columns,d=c.values,o=document.createElement("table"),p=document.createElement("tr");o.append(p),l.forEach(m=>{let r=document.createElement("th");r.innerHTML=m,p.append(r)}),d.forEach(m=>{let r=document.createElement("tr");o.append(r),m.forEach(u=>{let h=document.createElement("td");h.innerHTML=u,r.append(h)})}),(typeof t=="string"?document.querySelector(t):t instanceof Element||t instanceof HTMLDocument?t:document.body).append(o),s()})}).catch(n)})}};})();
//# sourceMappingURL=lang-sql-script.js.map
