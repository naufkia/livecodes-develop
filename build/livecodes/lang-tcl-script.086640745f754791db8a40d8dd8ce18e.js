"use strict";(()=>{var d=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(n,e)=>(typeof require<"u"?require:n)[e]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});var m="https://cdn.jsdelivr.net/npm/@live-codes/browser-compilers@0.5.13/dist/";var x=m+"wacl/";livecodes.tcl=livecodes.tcl||{};livecodes.tcl.run=livecodes.tcl.run||(t=>new Promise(async n=>{livecodes.tcl.input=t,livecodes.tcl.output=null;let e=async(r,j,c)=>{let h=window.prompt;window.prompt=()=>j;let o=null,p=null;c.stdout=i=>{o=(o??"")+i+`
`},c.stderr=i=>{p=(p??"")+i+`
`};let v=c.Eval(r);return o=(o??"")+v,window.prompt=h,{output:o,error:p}},l="";document.querySelectorAll('script[type="text/tcl"]').forEach(r=>l+=r.innerHTML+`
`);let a=await livecodes.tcl.loaded,s=await e(l,t,a);s.error!=null?console.error(s.error):s.output!=null&&console.log(s.output),livecodes.tcl.input=t,livecodes.tcl.output=s.output,livecodes.tcl.error=s.error,livecodes.tcl.ready=!0,n(s)}));livecodes.tcl.loaded=new Promise(t=>{requirejs.config({baseUrl:x}),d(["tcl/wacl"],n=>{n.onReady(e=>{t(e)})})});window.addEventListener("load",async()=>{parent.postMessage({type:"loading",payload:!0},"*"),livecodes.tcl.ready=!1,await livecodes.tcl.run(livecodes.tcl.input),parent.postMessage({type:"loading",payload:!1},"*")});})();
//# sourceMappingURL=lang-tcl-script.js.map
