{
  "version": 3,
  "sources": ["../../src/livecodes/templates/starter/angular-starter.ts", "../../src/livecodes/templates/starter/assemblyscript-starter.ts", "../../src/livecodes/templates/starter/astro-starter.ts", "../../src/livecodes/templates/starter/backbone-starter.ts", "../../src/livecodes/templates/starter/blank.ts", "../../src/livecodes/templates/starter/blockly-starter.ts", "../../src/livecodes/templates/starter/bootstrap-starter.ts", "../../src/livecodes/templates/starter/coffeescript-starter.ts", "../../src/livecodes/templates/starter/go-starter.ts", "../../src/livecodes/templates/starter/jquery-starter.ts", "../../src/livecodes/templates/starter/knockout-starter.ts", "../../src/livecodes/templates/starter/livescript-starter.ts", "../../src/livecodes/templates/starter/lua-starter.ts", "../../src/livecodes/templates/starter/mdx-starter.ts", "../../src/livecodes/templates/starter/perl-starter.ts", "../../src/livecodes/templates/starter/php-starter.ts", "../../src/livecodes/templates/starter/preact-starter.ts", "../../src/livecodes/templates/starter/pyodide-starter.ts", "../../src/livecodes/templates/starter/python-starter.ts", "../../src/livecodes/templates/starter/react-native-starter.ts", "../../src/livecodes/templates/starter/react-starter.ts", "../../src/livecodes/templates/starter/markdown-starter.ts", "../../src/livecodes/templates/starter/rescript-starter.ts", "../../src/livecodes/templates/starter/reason-starter.ts", "../../src/livecodes/templates/starter/ocaml-starter.ts", "../../src/livecodes/templates/starter/riot-starter.ts", "../../src/livecodes/templates/starter/ruby-starter.ts", "../../src/livecodes/templates/starter/scheme-starter.ts", "../../src/livecodes/templates/starter/solid-starter.ts", "../../src/livecodes/templates/starter/sql-starter.ts", "../../src/livecodes/templates/starter/stencil-starter.ts", "../../src/livecodes/templates/starter/svelte-starter.ts", "../../src/livecodes/templates/starter/tailwindcss-starter.ts", "../../src/livecodes/templates/starter/typescript-starter.ts", "../../src/livecodes/templates/starter/vue-sfc-starter.ts", "../../src/livecodes/templates/starter/vue-starter.ts", "../../src/livecodes/templates/starter/wat-starter.ts", "../../src/livecodes/templates/starter/malina-starter.ts", "../../src/livecodes/templates/starter/commonlisp-starter.ts", "../../src/livecodes/templates/starter/cpp-starter.ts", "../../src/livecodes/templates/starter/julia-starter.ts", "../../src/livecodes/templates/starter/clang-starter.ts", "../../src/livecodes/templates/starter/tcl-starter.ts", "../../src/livecodes/templates/starter/prolog-starter.ts", "../../src/livecodes/templates/starter/clio-starter.ts", "../../src/livecodes/templates/starter/diagrams-starter.ts", "../../src/livecodes/templates/starter/imba-starter.ts", "../../src/livecodes/templates/starter/jest-starter.ts", "../../src/livecodes/templates/starter/jest-react-starter.ts", "../../src/livecodes/templates/starter/javascript-starter.ts", "../../src/livecodes/templates/starter/index.ts"],
  "sourcesContent": ["import { Template } from '../../models';\n\nexport const angularStarter: Template = {\n  name: 'angular',\n  title: 'Angular Starter',\n  thumbnail: 'assets/templates/angular.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<app>Loading...</app>\\n',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'typescript',\n    content: `\nimport { Component, Input, NgModule, enableProdMode } from '@angular/core@12.2.13';\nimport { CommonModule } from '@angular/common@12.2.13';\nimport { BrowserModule } from '@angular/platform-browser@12.2.13';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic@12.2.13';\nimport 'zone.js/dist/zone';\n\n// app.component.ts\n@Component({\n  selector: \"app\",\n  styles: [\n    \\`\n  .container,\n  .container button {\n    text-align: center;\n    font: 1em sans-serif;\n  }\n  .logo {\n    width: 150px;\n  }\n  \\`,\n  ],\n  template: \\`\n    <div class=\"container\">\n      <heading name=\"{{name}}\"></heading>\n      <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/angular.svg\" />\n      <p>You clicked {{count}} times.</p>\n      <button type=\"button\" (click)=\"increment()\">Click me</button>\n    </div>\n  \\`,\n})\nclass AppComponent {\n  count = 0;\n  name = \"Angular\";\n\n  constructor() {}\n\n  increment() {\n    this.count += 1;\n  }\n}\n\n// heading.component.ts\n@Component({\n  selector: \"heading\",\n  template: \"<h1>{{title}}</h1>\",\n})\nclass HeadingComponent {\n  @Input() name: string;\n  title: string;\n\n  ngOnInit() {\n    this.title = \\`Hello, \\${this.name}!\\`;\n  }\n}\n\n// app.module.ts\n@NgModule({\n  imports: [BrowserModule, CommonModule],\n  declarations: [AppComponent, HeadingComponent],\n  bootstrap: [AppComponent],\n  providers: [],\n})\nclass AppModule {}\n\n// main.ts\n// enableProdMode();\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err: Error) => console.error(err));\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {\n    'zone.js/dist/zone': '',\n  },\n};\n", "import { Template } from '../../models';\n\nexport const assemblyscriptStarter: Template = {\n  name: 'assemblyscript',\n  title: 'AssemblyScript Starter',\n  thumbnail: 'assets/templates/assemblyscript.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/assemblyscript.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\" disabled>loading...</button>\n</div>\n\n<script>\n  (async() => {\n    // The \\`loadWasm\\` method of \\`livecodes\\` global object\n    // optionally takes an import object and\n    // returns a promise which resolves to an object\n    // exposing the compiled wasm module, wasm text and wasm binary\n    const { wasmModule, text, binary } = await livecodes.loadWasm();\n    const { __getString, getTitle, increment } = wasmModule.exports;\n\n    const title = document.querySelector('#title');\n    const counter = document.querySelector(\"#counter\");\n    const button = document.querySelector(\"#counter-button\");\n    let count = 0;\n\n    title.innerHTML = __getString(getTitle());\n    button.innerText = 'Click me';\n    button.disabled = false;\n\n    button.addEventListener(\"click\", () => {\n      count = increment(count);\n      counter.innerText = count;\n    }, false);\n\n  })();\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'assemblyscript',\n    content: `\nexport function getTitle(): string {\n  return \"AssemblyScript\";\n}\nexport function increment(num: i32): i32 {\n  return num + 1;\n}\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const astroStarter: Template = {\n  name: 'astro',\n  title: 'Astro Starter',\n  thumbnail: 'assets/templates/astro.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'astro',\n    content: `\n---\nimport {format} from 'date-fns';\n\nconst title = \"Astro\";\n\nconst builtAt: Date = new Date();\nconst builtAtFormatted = format(builtAt, 'MMMM dd, yyyy -- H:mm:ss.SSS');\n---\n<html lang=\"en\">\n\n<head>\n\t<meta charset=\"utf-8\" />\n\t<meta name=\"viewport\" content=\"width=device-width\" />\n\t<title>Welcome to Astro</title>\n  <style>\n    .container,\n    .container button {\n      text-align: center;\n      font: 1em sans-serif;\n    }\n    .logo {\n      width: 150px;\n    }\n    .note {\n      margin: 1rem;\n      padding: 1rem;\n      border-radius: 8px;\n      background: #E4E5E6;\n      border: 1px solid #BBB;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <h1>Hello, {title}!</h1>\n    <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/astro.svg\" />\n    <p>You clicked <span id=\"counter\">0</span> times.</p>\n    <button id=\"counter-button\">Click me</button>\n    <p class=\"note\">\n      <strong>RENDERED AT:</strong><br/>\n      {builtAtFormatted}\n    </p>\n  </div>\n  <script>\n    let count = 0\n    document\n      .querySelector(\"#counter-button\")\n      .addEventListener(\"click\", () => {\n        count += 1;\n        document.querySelector(\"#counter\").innerText = count;\n    });\n  </script>\n</body>\n\n</html>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const backboneStarter: Template = {\n  name: 'backbone',\n  title: 'Backbone Starter',\n  thumbnail: 'assets/templates/backbone.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/backbone.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `\nvar Counter = Backbone.Model.extend({\n  defaults: {\n    value: 0,\n    title: 'Backbone'\n  },\n  increment: function() {\n    this.set({ value: this.get('value') + 1 });\n  }\n});\nvar counter = new Counter();\n\nvar AppView = Backbone.View.extend({\n  el:'.container',\n  render: function() {\n    this.$('#counter').html(this.model.get('value'));\n    this.$('#title').html(this.model.get('title'));\n  },\n  events:{\n    'click #counter-button': 'addOne',\n  },\n  initialize: function() {\n    this.model.on('change', this.render, this);\n    this.render();\n  },\n  addOne: function() {\n    this.model.increment();\n    this.render();\n  }\n});\nvar view = new AppView({ model: counter });\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [\n    'https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js',\n    'https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.0/jquery.min.js',\n    'https://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.3.3/backbone-min.js',\n  ],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const blank: Template = {\n  name: 'blank',\n  title: 'Blank Project',\n  thumbnail: 'assets/templates/blank.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const blocklyStarter: Template = {\n  name: 'blockly',\n  title: 'Blockly Starter',\n  thumbnail: 'assets/templates/blockly.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<xml\n  data-src=\"https://cdn.jsdelivr.net/npm/@live-codes/blockly-utils@0.1.0/src/dom-blocks.xml\"\n  data-type=\"blockly/xml\"\n  style=\"display: none\"\n></xml>\n<script\n  src=\"https://cdn.jsdelivr.net/npm/@live-codes/blockly-utils@0.1.0/src/dom-blocks.js\"\n  type=\"blockly/script\"\n></script>\n\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/blockly.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'blockly',\n    content: `\n<xml xmlns=\"https://developers.google.com/blockly/xml\">\n  <variables>\n    <variable id=\"?\\`Dl!ysD-zLY64Lpe)c(\">count</variable>\n  </variables>\n  <block type=\"dom_set_property\" id=\"sr4sLpCoHdr%yw}lz]{u\" x=\"35\" y=\"35\">\n    <value name=\"element\">\n      <shadow type=\"dom_element_selector\" id=\"8q6b-NxGim%yU^KHWg+M\">\n        <value name=\"selector\">\n          <shadow type=\"text\" id=\"8MF#)_03uL#%YWyCDgM^\">\n            <field name=\"TEXT\">\n\n            </field>\n          </shadow>\n        </value>\n      </shadow>\n      <block type=\"dom_element_by_id\" id=\"hXkkuwcC=n!.Z6H?$ROO\">\n        <value name=\"id\">\n          <shadow type=\"text\" id=\"q=C\\`rbb\\`[ki-OOw7GiYK\">\n            <field name=\"TEXT\">title</field>\n          </shadow>\n        </value>\n      </block>\n    </value>\n    <value name=\"property\">\n      <shadow type=\"dom_element_properties\" id=\"AHLrrpzt[m1Yx/4?2U-{\">\n        <field name=\"property\">innerText</field>\n      </shadow>\n    </value>\n    <value name=\"value\">\n      <shadow type=\"text\" id=\"M8W]wK^:#Db^F_bIEad3\">\n        <field name=\"TEXT\">Blockly</field>\n      </shadow>\n    </value>\n    <next>\n      <block type=\"variables_set\" id=\"Ecm7Dkj.nJmeV{jTL8Y_\">\n        <field name=\"VAR\" id=\"?\\`Dl!ysD-zLY64Lpe)c(\">count</field>\n        <value name=\"VALUE\">\n          <block type=\"math_number\" id=\"D%LW6COR3l5[Z9MCjx/L\">\n            <field name=\"NUM\">0</field>\n          </block>\n        </value>\n      </block>\n    </next>\n  </block>\n  <block type=\"dom_handle_event\" id=\"K,_92]w;quNkxuUv*s9n\" x=\"35\" y=\"270\">\n    <value name=\"element\">\n      <shadow type=\"dom_element_selector\" id=\"QV~_0VyIy(*b{r\\`yJWy1\">\n        <value name=\"selector\">\n          <shadow type=\"text\" id=\"iYe)MS{x+-J}5Kph!n7M\">\n            <field name=\"TEXT\">button</field>\n          </shadow>\n        </value>\n      </shadow>\n    </value>\n    <value name=\"event\">\n      <shadow type=\"dom_events\" id=\"Dfnt}40u]T$?:p:S}irM\">\n        <field name=\"event\">click</field>\n      </shadow>\n    </value>\n    <statement name=\"event_handler\">\n      <block type=\"math_change\" id=\"dxKITU6a]\\`3w(sSIus2K\">\n        <field name=\"VAR\" id=\"?\\`Dl!ysD-zLY64Lpe)c(\">count</field>\n        <value name=\"DELTA\">\n          <shadow type=\"math_number\" id=\"_exnsV4gci%)lqM3#)2A\">\n            <field name=\"NUM\">1</field>\n          </shadow>\n        </value>\n        <next>\n          <block type=\"dom_set_property\" id=\"c]gWo#)7YgY8eszx.]fO\">\n            <value name=\"element\">\n              <shadow type=\"dom_element_selector\" id=\"\\`p]W.N%K-bP39x)tC,j0\">\n                <value name=\"selector\">\n                  <shadow type=\"text\" id=\"}uE=/^7ZJn-xR4v1Oumn\">\n                    <field name=\"TEXT\">\n\n                    </field>\n                  </shadow>\n                </value>\n              </shadow>\n              <block type=\"dom_element_by_id\" id=\"PWFAw[cc{xg0qf}Frlw|\">\n                <value name=\"id\">\n                  <shadow type=\"text\" id=\"}0V..:dc(=V;hNFV53R[\">\n                    <field name=\"TEXT\">counter</field>\n                  </shadow>\n                </value>\n              </block>\n            </value>\n            <value name=\"property\">\n              <shadow type=\"dom_element_properties\" id=\")K$1i925QSZjn/w:{j[Z\">\n                <field name=\"property\">innerText</field>\n              </shadow>\n            </value>\n            <value name=\"value\">\n              <shadow type=\"text\" id=\"gu4kA*Ig3*6\\`sGaI*P6C\">\n                <field name=\"TEXT\">\n\n                </field>\n              </shadow>\n              <block type=\"variables_get\" id=\"LmiNr+~z9=zAWH]H8gqm\">\n                <field name=\"VAR\" id=\"?\\`Dl!ysD-zLY64Lpe)c(\">count</field>\n              </block>\n            </value>\n          </block>\n        </next>\n      </block>\n    </statement>\n  </block>\n</xml>\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const bootstrapStarter: Template = {\n  name: 'bootstrap',\n  title: 'Bootstrap Starter',\n  thumbnail: 'assets/templates/bootstrap.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'html',\n    content: `\n<nav class=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n  <div class=\"container-fluid\">\n    <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n    <button\n      class=\"navbar-toggler\"\n      type=\"button\"\n      data-bs-toggle=\"collapse\"\n      data-bs-target=\"#navbarsExampleDefault\"\n      aria-controls=\"navbarsExampleDefault\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"navbar-nav me-auto mb-2 mb-md-0\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"#\">Link</a>\n        </li>\n        <li class=\"nav-item\">\n          <a\n            class=\"nav-link disabled\"\n            href=\"#\"\n            tabindex=\"-1\"\n            aria-disabled=\"true\"\n            >Disabled</a\n          >\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a\n            class=\"nav-link dropdown-toggle\"\n            href=\"#\"\n            id=\"dropdown01\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n            >Dropdown</a\n          >\n          <ul class=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\n            <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n            <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n          </ul>\n        </li>\n      </ul>\n      <form class=\"d-flex\">\n        <input\n          class=\"form-control me-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n        />\n        <button class=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </div>\n</nav>\n\n<main class=\"container\">\n  <div class=\"starter-template text-center py-5 px-3\">\n    <h1>Bootstrap starter template</h1>\n    <p class=\"lead\">\n      Use this document as a way to quickly start any new project.<br />\n      All you get is this text and a mostly barebones HTML document.\n    </p>\n  </div>\n</main>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\nbody {\n  padding-top: 5rem;\n}\n\n.bd-placeholder-img {\n  font-size: 1.125rem;\n  text-anchor: middle;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  user-select: none;\n}\n\n@media (min-width: 768px) {\n  .bd-placeholder-img-lg {\n    font-size: 3.5rem;\n  }\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: ['https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css'],\n  scripts: ['https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js'],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const coffeescriptStarter: Template = {\n  name: 'coffeescript',\n  title: 'CoffeeScript Starter',\n  thumbnail: 'assets/templates/coffeescript.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/coffeescript.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'coffeescript',\n    content: `\ntitleElement = document.getElementById 'title'\ncounterElement = document.getElementById 'counter'\nbutton = document.getElementById 'counter-button'\n\ntitle = 'CoffeeScript'\ntitleElement.innerText = title\n\ncounter = (count) -> -> count += 1\nincrement = counter 0\n\nbutton.addEventListener('click',\n  -> counterElement.innerText = increment())\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const goStarter: Template = {\n  name: 'go',\n  title: 'Go Starter',\n  thumbnail: 'assets/templates/go.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/go.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 250px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'go',\n    content: `\npackage main\n\nimport (\n\t\"fmt\"\n\t\"syscall/js\"\n\t\"time\"\n)\n\nfunc main() {\n\ttitle := querySelector(\"#title\")\n\ttitle.Set(\"innerHTML\", \"Golang\")\n\n\tregisterCounter()\n\n\t// yes, you can use goroutines (check the console)\n\tgo greet()\n  fmt.Println(\"Hello!\")\n}\n\nfunc querySelector(id string) js.Value {\n\treturn js.Global().Get(\"document\").Call(\"querySelector\", id)\n}\n\nfunc registerCounter() {\n\tbtn := querySelector(\"#counter-button\")\n\tcounter := querySelector(\"#counter\")\n\tcount := 0\n\n\tvar cb js.Func\n\tcb = js.FuncOf(func(this js.Value, args []js.Value) interface{} {\n\t\tcount += 1\n\t\tcounter.Set(\"innerHTML\", count)\n\t\treturn nil\n\t})\n\tbtn.Call(\"addEventListener\", \"click\", cb)\n}\n\nfunc greet() {\n\tif hours, _, _ := time.Now().Clock(); hours < 12 {\n\t\tfmt.Println(\"Good morning\")\n\t} else if hours < 18 {\n\t\tfmt.Println(\"Good afternoon\")\n\t} else {\n\t\tfmt.Println(\"Good evening\")\n\t}\n}\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const jqueryStarter: Template = {\n  name: 'jquery',\n  title: 'jQuery Starter',\n  thumbnail: 'assets/templates/jquery.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/jquery.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 300px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `\nimport $ from \"jquery\";\n\n$(\"#title\").text('jQuery');\n\nlet count = 0;\n$(\"#counter-button\").click(() => {\n  count += 1;\n  $(\"#counter\").text(count);\n});\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const knockoutStarter: Template = {\n  name: 'knockout',\n  title: 'Knockout Starter',\n  thumbnail: 'assets/templates/knockout.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span data-bind=\"text: title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/knockout.svg\" />\n  <p>You clicked <span data-bind=\"text: numberOfClicks\">0</span> times.</p>\n  <button data-bind=\"click: registerClick\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 250px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `\nimport ko from \"knockout\";\n\nclass ClickCounterViewModel {\n  constructor() {\n    this.title = 'Knockout';\n    this.numberOfClicks = ko.observable(0);\n\n    this.registerClick = function () {\n      this.numberOfClicks(this.numberOfClicks() + 1);\n    };\n  }\n}\n\nko.applyBindings(new ClickCounterViewModel());\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const livescriptStarter: Template = {\n  name: 'livescript',\n  title: 'LiveScript Starter',\n  thumbnail: 'assets/templates/livescript.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/livescript.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'livescript',\n    content: `\n{ capitalize, join, map, words } = require 'prelude-ls'\n\ntitle = 'live script'\n|> words\n|> map capitalize\n|> join ''\n\n(document.getElementById \\\\title).innerText = title\n\nincrement = (count) -> -> count += 1\ncounter = increment 0\n\ncounter-element = document.getElementById \\\\counter\nbutton = document.getElementById \\\\counter-button\n\nbutton.addEventListener \\\\click,\n  -> counter-element.innerText = counter!\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const luaStarter: Template = {\n  name: 'lua',\n  title: 'Lua Starter',\n  thumbnail: 'assets/templates/lua.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/lua.svg\" />\n  <p id=\"counter\">You clicked 0 times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'lua',\n    content: `\njs = require \"js\"\nwindow = js.global\ndocument = window.document\n\ndocument:getElementById(\"title\").innerHTML = \"Lua\"\n\nCounter = {count = 0}\nfunction Counter:new (o)\n  o = o or {}\n  setmetatable(o, self)\n  self.__index = self\n  return o\nend\nfunction Counter:increment ()\n  self.count = self.count + 1\nend\nfunction Counter:show ()\n  local counter_el = document:getElementById(\"counter\")\n  counter_el.innerHTML = (\"You clicked %d times.\"):format(self.count)\nend\n\ncounter = Counter:new(nil)\nbutton = document:querySelector(\"#counter-button\")\nbutton:addEventListener(\"click\", function()\n  counter:increment()\n  counter:show()\nend)\n\n-- check console\ntime = os.date(\"*t\").hour\nif time < 12 then\n  print (\"Good morning\")\nelseif time >= 12 and time < 18 then\n  print (\"Good afternoon\")\nelse\n  print (\"Good evening\")\nend\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const mdxStarter: Template = {\n  name: 'mdx',\n  title: 'MDX Starter',\n  thumbnail: 'assets/templates/mdx.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'mdx',\n    content: `\nimport Paper from '@material-ui/core/Paper';\nimport { Hello, Counter } from './script';\n\n<Paper>\n  <Hello title=\"MDX\" />\n</Paper>\n\n![MDX Logo]({{ __livecodes_baseUrl__ }}assets/templates/mdx.svg)\n\n<Counter variant=\"outlined\" color=\"primary\" />\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\nbody,\nbody button {\n  text-align: center;\n  font: 1em sans-serif;\n}\nimg {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'jsx',\n    content: `\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nexport const Hello = (props) => <h1>Hello, {props.title || \"World\"}!</h1>;\n\nexport function Counter(props) {\n  const [count, setCount] = useState(0);\n  return (\n    <div>\n      <p>You clicked {count} times.</p>\n      <Button\n        variant={props.variant}\n        color={props.color}\n        onClick={() => setCount(count + 1)}\n      >\n        Click me\n      </Button>\n    </div>\n  );\n}\n`.trimStart(),\n  },\n  customSettings: { defaultCDN: 'skypack' },\n};\n", "import { Template } from '../../models';\n\nexport const perlStarter: Template = {\n  name: 'perl',\n  title: 'Perl Starter',\n  thumbnail: 'assets/templates/perl.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/perl.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'perl',\n    content: `\nuse strict;\n\nmy $title = 'Perl';\nJS::inline('document.getElementById(\"title\").innerHTML') = $title;\n\n{\npackage Counter;\n  sub new {\n    my $class = shift;\n    my $self = {count => 0};\n    return bless $self, $class;\n  }\n  sub count {\n    my $self = shift;\n    return $self->{count};\n  }\n  sub increment {\n    my $self = shift;\n    $self->{count}++;\n  }\n}\n\nmy $counter = Counter->new;\n\nsub onClick {\n    $counter->increment;\n    JS::inline('document.getElementById(\"counter\").innerHTML') =\n    $counter->count;\n}\n\nJS::inline('document.getElementById(\"counter-button\").onclick') = \\\\&onClick;\n\n# check console\nmy ($sec,$min,$hour) = localtime(time);\nif ($hour < 12) {\n  print \"Good morning\";\n} elsif ($hour >= 12 && $hour < 18) {\n  print \"Good afternoon\";\n} else {\n  print \"Good evening\";\n}\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const phpStarter: Template = {\n  name: 'php',\n  title: 'PHP Starter',\n  thumbnail: 'assets/templates/php.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">world</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/php.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'php',\n    content: `\n<?php\n$title = 'PHP';\n$document->getElementById('title')->innerText = $title;\n\n$count = 0;\n\n$document\n  ->getElementById('counter-button')\n  ->addEventListener('click', function () use (&$count, $document) {\n      $count += 1;\n      $document->getElementById('counter')->innerText = $count;\n      echo \"count: $count\";\n  });\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const preactStarter: Template = {\n  name: 'preact',\n  title: 'Preact Starter',\n  thumbnail: 'assets/templates/preact.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\"></div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'jsx',\n    content: `\n/** @jsx h */\nimport { h, render } from 'preact';\nimport { useSignal } from \"@preact/signals\";\n\nfunction App(props) {\n  const count = useSignal(0);\n  return (\n    <div class=\"container\">\n      <h1>Hello, {props.name}!</h1>\n      <img className=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/preact.svg\" />\n      <p>You clicked {count} times.</p>\n      <button onClick={() => count.value++}>Click me</button>\n    </div>\n  );\n}\n\nrender(<App name=\"Preact\" />, document.body);\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const pyodideStarter: Template = {\n  name: 'pyodide',\n  title: 'Python (pyodide) Starter',\n  thumbnail: 'assets/templates/python.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<h1 id=\"title\">Hello, World!</h1>\n<div id=\"plot\">Loading...</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `h1 {\n  text-align: center;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'pyodide',\n    content: `\nfrom js import document, XMLHttpRequest\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom io import StringIO\n\ndef load_data(url):\n  req = XMLHttpRequest.new()\n  req.open(\"GET\", url, False)\n  req.send()\n  res = req.response\n  return StringIO(f\"\"\"{res}\"\"\")\n\n\ndef prepare_data(dataframe):\n  def add_species_id(x):\n    if x == 'setosa':\n        return 0\n    elif x == 'versicolor':\n        return 1\n    return 2\n\n  df = dataframe.copy()\n  df['species_id'] = df['species'].apply(add_species_id)\n  return df\n\n\ndef showPlot(figure, selector):\n  iconStyles = document.createElement('link')\n  iconStyles.rel = 'stylesheet'\n  iconStyles.href = 'https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css'\n  document.head.appendChild(iconStyles)\n\n  def create_root_element(self):\n    el = document.querySelector(selector)\n    el.innerHTML = ''\n    return el\n\n  figure.canvas.create_root_element = type(figure.canvas.create_root_element)(\n    create_root_element, figure.canvas.__class__)\n  figure.canvas.show()\n\n\ndf = pd.read_csv(load_data(\"https://raw.githubusercontent.com/mwaskom/seaborn-data/master/iris.csv\"))\ndf = prepare_data(df)\n\nformatter = plt.FuncFormatter(lambda i, *args: df['species'].unique()[int(i)])\nfig = plt.figure(figsize=(6, 4))\nplt.scatter(df[df.columns[0]], df[df.columns[1]], c=df['species_id'])\nplt.colorbar(ticks=[0, 1, 2], format=formatter)\nplt.xlabel(df.columns[0])\nplt.ylabel(df.columns[1])\nplt.title('Iris dataset')\nplt.tight_layout()\nshowPlot(fig, '#plot')\n\ntitle = document.getElementById('title')\nname = 'Python'\ntitle.innerHTML = f\"Hello, {name}!\"\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const pythonStarter: Template = {\n  name: 'python',\n  title: 'Python Starter',\n  thumbnail: 'assets/templates/python.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1 id=\"header\">Hello, World!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/python.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'python',\n    content: `\nfrom browser import document\nimport time\n\ntitle = 'Python'\ndocument['header'].html = f\"Hello, {title}!\"\n\ncounter = 0\n\ndef increment(ev):\n    global counter\n    counter += 1\n    document['counter'].html = str(counter)\n\ndocument[\"counter-button\"].bind(\"click\", increment)\n\n# check console\ncurrent_time = int(time.strftime('%H'))\nif current_time < 12 :\n      print('Good morning')\nelif 12 <= current_time < 18:\n      print('Good afternoon')\nelse:\n      print('Good evening')\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const reactNativeStarter: Template = {\n  name: 'react-native',\n  title: 'React Native Starter',\n  thumbnail: 'assets/templates/react.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\">Loading...</div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'react-native',\n    content: `\nimport React, { useState } from \"react\";\nimport { AppRegistry, Button, Image, StyleSheet, Text, View } from \"react-native\";\n\nconst logoUri = \\`data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 841.9 595.3\"><g fill=\"#61DAFB\"><path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" /><circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" /><path d=\"M520.5 78.1z\" /></g></svg>\\`;\n\nfunction Link(props) {\n  return (\n    <Text\n      {...props}\n      accessibilityRole=\"link\"\n      style={StyleSheet.compose(styles.link, props.style)}\n    />\n  );\n}\n\nfunction Counter(props) {\n  const [count, setCount] = useState(props.initialCount);\n  return (\n    <View>\n      <Text style={styles.text}>You clicked {count} times.</Text>\n      <Button onPress={() => setCount(count + 1)} title=\"Click me\" />\n    </View>\n  );\n}\n\nfunction App() {\n  return (\n    <View style={styles.app}>\n      <View style={styles.header}>\n        <Image\n          accessibilityLabel=\"React logo\"\n          source={{ uri: logoUri }}\n          resizeMode=\"contain\"\n          style={styles.logo}\n        />\n        <Text style={styles.title}>React Native for Web</Text>\n      </View>\n      <Text style={styles.text}>\n        This is an example app built with{\" \"}\n        <Link href=\"https://necolas.github.io/react-native-web/\">\n          React Native for Web\n        </Link>\n      </Text>\n      <Counter initialCount={0}></Counter>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  app: {\n    marginHorizontal: \"auto\",\n    marginVertical: 20,\n    maxWidth: 500,\n  },\n  logo: {\n    height: 150,\n  },\n  header: {\n    padding: 20,\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    marginVertical: \"0.5em\",\n    textAlign: \"center\",\n  },\n  text: {\n    lineHeight: \"1.5em\",\n    fontSize: \"1.125rem\",\n    marginVertical: \"0.5em\",\n    textAlign: \"center\",\n  },\n  link: {\n    color: \"#1B95E0\",\n  },\n});\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"app\"),\n});\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const reactStarter: Template = {\n  name: 'react',\n  title: 'React Starter',\n  thumbnail: 'assets/templates/react.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\">Loading...</div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'jsx',\n    content: `\nimport React, { useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nfunction App(props) {\n  const [count, setCount] = useState(0);\n  return (\n    <div className=\"container\">\n      <h1>Hello, {props.name}!</h1>\n      <img className=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/react.svg\" />\n      <p>You clicked {count} times.</p>\n      <button onClick={() => setCount(count + 1)}>Click me</button>\n    </div>\n  );\n}\n\nconst root = createRoot(document.querySelector(\"#app\"));\nroot.render(<App name=\"React\" />);\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const markdownStarter: Template = {\n  name: 'markdown',\n  title: 'Markdown Starter',\n  thumbnail: 'assets/templates/markdown.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'markdown',\n    content: `\n# Project Title\n\nOne Paragraph of project description goes here\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your local machine for development and testing purposes. See deployment for notes on how to deploy the project on a live system.\n\n### Prerequisites\n\nWhat things you need to install the software and how to install them\n\n\\`\\`\\`\nGive examples\n\\`\\`\\`\n\n### Installing\n\nA step by step series of examples that tell you how to get a development env running\n\nSay what the step will be\n\n\\`\\`\\`\nGive the example\n\\`\\`\\`\n\nAnd repeat\n\n\\`\\`\\`\nuntil finished\n\\`\\`\\`\n\nEnd with an example of getting some data out of the system or using it for a little demo\n\n## Running the tests\n\nExplain how to run the automated tests for this system\n\n### Break down into end to end tests\n\nExplain what these tests test and why\n\n\\`\\`\\`\nGive an example\n\\`\\`\\`\n\n### And coding style tests\n\nExplain what these tests test and why\n\n\\`\\`\\`\nGive an example\n\\`\\`\\`\n\n## Deployment\n\nAdd additional notes about how to deploy this on a live system\n\n## Built With\n\n* [Dropwizard](http://www.dropwizard.io/1.0.2/docs/) - The web framework used\n* [Maven](https://maven.apache.org/) - Dependency Management\n* [ROME](https://rometools.github.io/rome/) - Used to generate RSS Feeds\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](https://gist.github.com/PurpleBooth/b24679402957c63ec426) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe use [SemVer](http://semver.org/) for versioning. For the versions available, see the [tags on this repository](https://github.com/your/project/tags).\n\n## Authors\n\n* **Billie Thompson** - *Initial work* - [PurpleBooth](https://github.com/PurpleBooth)\n\nSee also the list of [contributors](https://github.com/your/project/contributors) who participated in this project.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details\n\n## Acknowledgments\n\n* Hat tip to anyone whose code was used\n* Inspiration\n* etc\n\n\nSource: https://gist.github.com/PurpleBooth/109311bb0361f32d87a2\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n@import \"github-markdown-css\";\n\nbody {\n  border: 1px solid #e1e4e8;\n  border-radius: 6px;\n  padding: 20px;\n  margin: 20px !important;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `document.body.classList.add('markdown-body');\\n`,\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const rescriptStarter: Template = {\n  name: 'rescript',\n  title: 'ReScript Starter',\n  thumbnail: 'assets/templates/rescript.png',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\">Loading...</div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'rescript',\n    content: `\n// import npm modules\n@module(\"leftpad\") external leftpad: int => int => string = \"default\"\n\nmodule App = {\n  @react.component\n  let make = (~name: string) => {\n    let title = \"Hello, \" ++ name ++ \"!\"\n\n    let (count, setCount) = React.useState(_ => 0)\n    let onClick = _evt => {\n      setCount(_prev => _prev + 1)\n    }\n\n    let times = switch count {\n    | 1 => \"once\"\n    | 2 => \"twice\"\n    | (n) if n < 6 =>\n        Belt.Int.toString(n) ++ \" times\"\n    | n => leftpad(n, 3) ++ \" times\"\n    }\n\n    <div className=\"container\">\n      <h1> {title->React.string} </h1>\n      <img\n        className=\"logo\"\n        src=\"{{ __livecodes_baseUrl__ }}assets/templates/rescript.png\"\n      />\n      <p> {React.string(\"You clicked \" ++ times)} </p>\n      <button onClick> {React.string(\"Click me\")} </button>\n    </div>\n  }\n}\n\nswitch ReactDOM.querySelector(\"#app\") {\n| Some(app) => ReactDOM.render(<App name=\"ReScript React\" />, app)\n| None => () // do nothing\n}\n\nJs.log(\"Hello, ReScript!\")\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const reasonStarter: Template = {\n  name: 'reason',\n  title: 'Reason Starter',\n  thumbnail: 'assets/templates/reason.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\">Loading...</div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'reason',\n    content: `\nmodule App = {\n  [@react.component]\n  let make = (~name) => {\n    let title = \"Hello, \" ++ name ++ \"!\"\n\n    let (count, setCount) = React.useState(() => 0);\n\n    let times = switch (count) {\n    | 1 => \"once\"\n    | 2 => \"twice\"\n    | n => string_of_int(n) ++ \" times\"\n    };\n\n    <div className=\"container\">\n      <h1> {React.string(title)} </h1>\n      <img\n        className=\"logo\"\n        src=\"{{ __livecodes_baseUrl__ }}assets/templates/reason.svg\"\n      />\n      <p> {React.string(\"You clicked \" ++ times)} </p>\n      <button onClick={_ => setCount(_ => count + 1)}>\n        {React.string(\"Click me\")}\n      </button>\n    </div>\n  };\n};\n\nswitch (ReactDOM.querySelector(\"#app\")) {\n| Some(app) => ReactDOM.render(<App name=\"ReasonReact\" />, app)\n| None => ()\n}\n\nJs.log(\"Hello, Reason!\");\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const ocamlStarter: Template = {\n  name: 'ocaml',\n  title: 'Ocaml Starter',\n  thumbnail: 'assets/templates/ocaml.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\">Loading...</div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 250px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'ocaml',\n    content: `\nmodule App =\n  struct\n    let make ~name  =\n      let title = \"Hello, \" ^ name ^ \"!\" in\n\n      let (count,setCount) = React.useState (fun ()  -> 0) in\n\n      let times =\n        match count with\n        | 1 -> \"once\"\n        | 2 -> \"twice\"\n        | n -> (string_of_int n) ^ \" times\" in\n\n      ((div ~className: \"container\"\n          ~children:[((h1 ~children: [React.string title] ())[@JSX ]);\n                    ((img ~className: \"logo\"\n                        ~src: \"{{ __livecodes_baseUrl__ }}assets/templates/ocaml.svg\"\n                        ~children:[] ())[@JSX ]);\n                    ((p\n                        ~children:[React.string (\"You clicked \"\n                                                ^ times)] ())[@JSX ]);\n                    ((button\n                        ~onClick:(fun _  -> setCount (fun _  -> count + 1))\n                        ~children:[React.string \"Click me\"] ())\n                    [@JSX ])] ())[@JSX ])[@@react.component ]\n  end\n\nlet _ =\n  match ReactDOM.querySelector \"#app\" with\n  | ((Some (app))[@explicit_arity ]) ->\n      ReactDOM.render\n        ((App.createElement\n            ~name: \"OCaml\"\n            ~children:[] ())[@JSX ]) app\n  | None  -> ()\n\nlet _ = print_endline \"Hello, OCaml!\"\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const riotStarter: Template = {\n  name: 'riot',\n  title: 'Riot.js Starter',\n  thumbnail: 'assets/templates/riot.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<counter title=\"Riot.js\"></counter>\n\n<script>\n  livecodes.templateData = {\n    url: 'https://riot.js.org/'\n  }\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'riot',\n    content: `\n<counter>\n  <div class=\"container\">\n    <h1>Hello, { props.title }!</h1>\n    <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/riot.svg\" />\n    <p>You clicked { state.count } times.</p>\n    <button onclick=\"{ increment }\">Click me</button>\n    <div class=\"footer\">\n      <a href=\"{ props.url }\" target=\"_blank\">Riot.js Website</a>\n    </div>\n  </div>\n\n  <style>\n    .container,\n    .container button {\n      text-align: center;\n      font: 1em sans-serif;\n    }\n    .logo {\n      width: 150px;\n    }\n    .footer {\n      font: 0.8em sans-serif;\n      margin: 1.5em;\n    }\n  </style>\n\n  <script>\n    export default {\n      onBeforeMount(props, state) {\n        this.state = {\n          count: 0,\n        };\n      },\n      increment(e) {\n        e.preventDefault();\n        this.update({\n          count: this.state.count + 1,\n        });\n      },\n    };\n  </script>\n</counter>\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const rubyStarter: Template = {\n  name: 'ruby',\n  title: 'Ruby Starter',\n  thumbnail: 'assets/templates/ruby.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/ruby.svg\" />\n  <p id=\"counter\">You clicked 0 times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'ruby',\n    content: `\nrequire \"date\"\nrequire \"native\"\n\ntitle = \"Ruby\"\n$$.document.querySelector(\"#title\").innerHTML = title\n\n$counter = 0\n$counter_element = $$.document.querySelector \"#counter\"\n\ndef increment\n    $counter += 1\n    $counter_element.innerHTML = \"You clicked %d times.\" % [$counter]\nend\n\nbutton = $$.document.querySelector \"button\"\nbutton.onclick = -> {increment}\n\n# check console\ncurrent_time = Time.now.hour\nmsg = Date.today.strftime \"happy %A!\"\nif current_time < 12\n    puts \"Good morning, \" + msg\nelsif current_time < 18\n    puts \"Good afternoon, \" + msg\nelse\n    puts \"Good evening, \" + msg\nend\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const schemeStarter: Template = {\n  name: 'scheme',\n  title: 'Scheme Starter',\n  thumbnail: 'assets/templates/scheme.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/scheme.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'scheme',\n    content: `\n(let ((title \"Scheme\"))\n  (set-content! \"#title\" title))\n\n(let ((counter 0))\n  (add-handler! \"#counter-button\" \"click\"\n    (lambda (ev)\n      (set! counter (+ counter 1))\n      (set-content! \"#counter\" (number->string counter)))))\n\n; check console\n(let ((time-now (date-hour (current-date))))\n  (console-log\n    (cond ((< time-now 12) \"Good morning\")\n          ((< time-now 18) \"Good afternoon\")\n          (else \"Good evening\"))))\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const solidStarter: Template = {\n  name: 'solid',\n  title: 'Solid Starter',\n  thumbnail: 'assets/templates/solid.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<div id=\"app\"></div>\\n',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'solid.tsx',\n    content: `\nimport { render } from \"solid-js/web\";\nimport { createSignal } from \"solid-js\";\n\ntype Props = {\n  title: string;\n}\n\nfunction App(props: Props) {\n  const [count, setCount] = createSignal(0);\n  const increment = () => setCount(count() + 1);\n\n  return (\n    <div className=\"container\">\n      <h1>Hello, {props.title}!</h1>\n      <img className=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/solid.svg\" />\n      <p>You clicked {count} times.</p>\n      <button onClick={increment}>Click me</button>\n    </div>\n  );\n}\n\nrender(() => <App title=\"Solid\" />, document.getElementById(\"app\"));\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const sqlStarter: Template = {\n  name: 'sql',\n  title: 'SQL Starter',\n  thumbnail: 'assets/templates/sqlite.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div id=\"output\">\n  <details open>\n    <summary>Tables</summary>\n    <div id=\"tables\"></div>\n  </details>\n  <details open>\n    <summary>Result</summary>\n    <pre><code id=\"result\"></code></pre>\n  </details>\n  <details open>\n    <summary>Result as objects</summary>\n    <pre><code id=\"obj-result\"></code></pre>\n  </details>\n</div>\n\n<script>\n  livecodes.sql.render('#tables');\n\n  livecodes.sql.getResult().then((result) => {\n    console.log(result)\n    document.querySelector('#result').innerHTML =  JSON.stringify(result, null, 2);\n  }).catch(console.error);\n\n\n  livecodes.sql.getResultAsObjects().then((results) => {\n    results.forEach(console.table);\n    document.querySelector('#obj-result').innerHTML = JSON.stringify(results, null, 2);\n  }).catch(console.error);\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n#output {\n  color: #3d3d3d;\n  font-family: \"Segoe UI\", Tahoma, Geneva, Verdana, sans-serif;\n}\n\n#output summary {\n  cursor: pointer;\n}\n\n#output table {\n  border: 1px solid #ddd;\n  border-collapse: separate;\n  border-radius: 5px;\n  border-spacing: 0;\n  font-size: 0.9em;\n  margin: 1em;\n  width: 95%;\n}\n\n#output th,\n#output td {\n  padding: 0.5em;\n}\n\n#output tr:nth-child(odd) {\n  background-color: #f2f2f2;\n}\n\n#output pre {\n  background-color: #fafafa;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n  display: inline-block;\n  margin: 1em;\n  min-width: 95%;\n  padding: 1em;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'sql',\n    content: `\n-- based on https://stackoverflow.com/q/7745609\n\nCREATE TABLE IF NOT EXISTS quotes (\n  id int(6) NOT NULL,\n  rev int(3) NOT NULL,\n  quote varchar(200) NOT NULL,\n  PRIMARY KEY (id, rev)\n);\n\nINSERT INTO quotes (id, rev, quote) VALUES\n  ('1', '1', 'Simplicity is the ultimate sophistication. \u2013 Leonardo da Vinci'),\n  ('2', '1', 'Change the world by being yourself. \u2013 Amy Poehler'),\n  ('1', '2', 'Every moment is a fresh beginning. \u2013 T.S Eliot'),\n  ('1', '3', 'Whatever you do, do it well. \u2013 Walt Disney');\n\nSELECT a.id, a.rev, a.quote\nFROM quotes a\nINNER JOIN (\n    SELECT id, MAX(rev) rev\n    FROM quotes\n    GROUP BY id\n) b ON a.id = b.id AND a.rev = b.rev;\n\nSELECT a.*\nFROM quotes a\nLEFT OUTER JOIN quotes b\n    ON a.id = b.id AND a.rev < b.rev\nWHERE b.id IS NULL;\n\nSELECT a.id, a.rev, a.quote\n  FROM (SELECT id, rev, quote,\n               ROW_NUMBER() OVER (PARTITION BY id ORDER BY rev DESC) rank\n          FROM quotes) a\n  WHERE a.rank = 1;\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const stencilStarter: Template = {\n  name: 'stencil',\n  title: 'Stencil Starter',\n  thumbnail: 'assets/templates/stencil.png',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '<my-app title=\"Stencil\"></my-app>\\n',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'stencil',\n    content: `\nimport { Component, Prop, h, State } from \"@stencil/core\";\n\n@Component({\n  tag: \"my-app\",\n  styles: \\`\n    my-app,\n    button {\n      text-align: center;\n      font: 1em sans-serif;\n    }\n    .logo {\n      width: 150px;\n    }\n  \\`,\n})\nexport class App {\n  @Prop() title: string;\n  @State() count = 0;\n\n  increment = () => {\n    this.count += 1;\n  };\n\n  render() {\n    return (\n      <div class=\"container\">\n        <h1>Hello, {this.title}!</h1>\n        <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/stencil.png\" />\n        <p>You clicked {this.count} times.</p>\n        <button onClick={this.increment}>Click me</button>\n      </div>\n    );\n  }\n}\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const svelteStarter: Template = {\n  name: 'svelte',\n  title: 'Svelte Starter',\n  thumbnail: 'assets/templates/svelte.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'svelte',\n    content: `\n<script>\n  let title = \"Svelte\";\n  let counter = 0;\n  function increment() {\n    counter += 1;\n  }\n</script>\n\n<style>\n  .container,\n  .container button {\n    text-align: center;\n    font: 1em sans-serif;\n  }\n  .logo {\n    width: 150px;\n  }\n</style>\n\n<div class=\"container\">\n  <h1>Hello, {title}!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/svelte.svg\" />\n  <p>You clicked {counter} times.</p>\n  <button on:click=\"{increment}\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const tailwindcssStarter: Template = {\n  name: 'tailwindcss',\n  title: 'Tailwind CSS Starter',\n  thumbnail: 'assets/templates/tailwindcss.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"min-h-screen bg-gray-100 py-6 flex flex-col justify-center sm:py-12\">\n  <div class=\"relative py-3 sm:max-w-xl sm:mx-auto\">\n    <div class=\"back-card\"></div>\n    <div class=\"relative px-4 py-10 bg-white shadow-lg sm:rounded-3xl sm:p-20\">\n      <div class=\"max-w-md mx-auto\">\n        <div>\n          <img src=\"{{ __livecodes_baseUrl__ }}assets/templates/tailwindplay.svg\" class=\"h-7 sm:h-8\" />\n        </div>\n        <div class=\"divide-y divide-gray-200\">\n          <div class=\"py-8 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n            <p>A template based on <a href=\"https://play.tailwindcss.com/\" class=\"text-cyan-600 hover:text-cyan-700\" target=\"_blank\">Tailwind CSS playground</a>. Here you can do things like:</p>\n            <ul class=\"list-disc space-y-2\">\n              <li class=\"flex items-start\">\n                <span class=\"h-6 flex items-center sm:h-7\">\n                  <svg class=\"flex-shrink-0 h-5 w-5 text-cyan-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </span>\n                <p class=\"ml-2\">\n                  Customizing configuration in\n                  <code class=\"text-sm font-bold text-gray-900\">custom settings</code>\n                </p>\n              </li>\n              <li class=\"flex items-start\">\n                <span class=\"h-6 flex items-center sm:h-7\">\n                  <svg class=\"flex-shrink-0 h-5 w-5 text-cyan-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </span>\n                <p class=\"ml-2\">\n                  Extracting classes with\n                  <code class=\"text-sm font-bold text-gray-900\">@apply</code>\n                </p>\n              </li>\n              <li class=\"flex items-start\">\n                <span class=\"h-6 flex items-center sm:h-7\">\n                  <svg class=\"flex-shrink-0 h-5 w-5 text-cyan-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                  </svg>\n                </span>\n                <p class=\"ml-2\">Viewing generated CSS code</p>\n              </li>\n            </ul>\n            <p>Perfect for learning how the framework works, prototyping a new idea, or creating a demo to share online.</p>\n          </div>\n          <div class=\"pt-6 text-base leading-6 font-bold sm:text-lg sm:leading-7\">\n            <p>Want to dig deeper into Tailwind?</p>\n            <p>\n              <a href=\"https://tailwindcss.com/docs\" class=\"text-cyan-600 hover:text-cyan-700\" target=\"_blank\"> Read the docs &rarr; </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n.back-card {\n  @apply absolute inset-0 bg-gradient-to-r from-cyan-400 to-sky-500 shadow-lg transform -skew-y-6 sm:skew-y-0 sm:-rotate-6 sm:rounded-3xl;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  processors: ['tailwindcss'],\n  imports: {},\n  types: {},\n  customSettings: {\n    tailwindcss: {\n      theme: {\n        extend: {\n          colors: {\n            sky: {\n              '50': '#f0f9ff',\n              '100': '#e0f2fe',\n              '200': '#bae6fd',\n              '300': '#7dd3fc',\n              '400': '#38bdf8',\n              '500': '#0ea5e9',\n              '600': '#0284c7',\n              '700': '#0369a1',\n              '800': '#075985',\n              '900': '#0c4a6e',\n            },\n            cyan: {\n              '50': '#ecfeff',\n              '100': '#cffafe',\n              '200': '#a5f3fc',\n              '300': '#67e8f9',\n              '400': '#22d3ee',\n              '500': '#06b6d4',\n              '600': '#0891b2',\n              '700': '#0e7490',\n              '800': '#155e75',\n              '900': '#164e63',\n            },\n          },\n        },\n      },\n    },\n  },\n};\n", "import { Template } from '../../models';\n\nexport const typescriptStarter: Template = {\n  name: 'typescript',\n  title: 'TypeScript Starter',\n  thumbnail: 'assets/templates/typescript.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/typescript.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'typescript',\n    content: `\nclass Counter {\n  private count: number;\n  constructor() {\n    this.count = 0;\n  }\n  increment() {\n    this.count += 1;\n  }\n  getValue() {\n    return this.count;\n  }\n}\n\nconst title = document.querySelector<HTMLElement>(\"#title\");\nconst count = document.querySelector<HTMLElement>(\"#counter\");\nconst button = document.querySelector<HTMLElement>(\"#counter-button\");\n\ntitle.innerText = \"TypeScript\";\nconst counter = new Counter();\nbutton.addEventListener(\n  \"click\",\n  () => {\n    counter.increment();\n    count.innerText = String(counter.getValue());\n  },\n  false\n);\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const vueSfcStarter: Template = {\n  name: 'vue',\n  title: 'Vue 3 SFC Starter',\n  thumbnail: 'assets/templates/vue.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'vue',\n    content: `\n<template>\n  <div class=\"container\">\n    <h1>Hello, Vue!</h1>\n    <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/vue.svg\" />\n    <p>You clicked {{ counter }} times.</p>\n    <button v-on:click=\"increment\">Click me</button>\n  </div>\n</template>\n\n<script>\n  export default {\n    data() {\n      return {\n        counter: 0,\n        align: 'center',\n      };\n    },\n    methods: {\n      increment() {\n        this.counter += 1;\n      },\n    },\n  };\n</script>\n\n<style scoped>\n  .container,\n  .container button {\n    text-align: v-bind('align');\n    font: 1em sans-serif;\n  }\n  .logo {\n    width: 150px;\n  }\n</style>\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const vueStarter: Template = {\n  name: 'vue2',\n  title: 'Vue 2 Starter',\n  thumbnail: 'assets/templates/vue.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div id=\"app\">\n  <h1>Hello, Vue!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/vue.svg\" />\n  <p>You clicked {{ counter }} times.</p>\n  <button @click=\"increment()\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n#app,\n#app button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `\nnew Vue({\n  el: \"#app\",\n  data: {\n    counter: 0,\n  },\n  methods: {\n    increment() {\n      this.counter += 1;\n    },\n  },\n});\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: ['https://cdn.jsdelivr.net/npm/vue@2'],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const watStarter: Template = {\n  name: 'wat',\n  title: 'WebAssembly Text Starter',\n  thumbnail: 'assets/templates/webassembly.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img\n    class=\"logo\"\n    src=\"http://127.0.0.1:8080/livecodes/assets/templates/webassembly.svg\"\n  />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n\n<script>\n  (async () => {\n    const importObject = {\n      title: {\n        change: changeTitle,\n      },\n    };\n\n    // The \\`loadWasm\\` method of \\`livecodes\\` global object\n    // optionally takes an import object and\n    // returns a promise which resolves to an object\n    // exposing the compiled wasm module and wasm binary\n    const { wasmModule, binary } = await livecodes.loadWasm(importObject);\n    const { memory, setTitle, increment } = wasmModule.exports;\n\n    function changeTitle(offset, length) {\n      const bytes = new Uint8Array(memory.buffer, offset, length);\n      const title = new TextDecoder(\"utf8\").decode(bytes);\n      document.querySelector(\"#title\").innerText = title;\n    }\n    setTitle();\n\n    const counter = document.querySelector(\"#counter\");\n    const button = document.querySelector(\"#counter-button\");\n    let count = 0;\n\n    button.addEventListener(\n      \"click\",\n      () => {\n        count = increment(count);\n        counter.innerText = count;\n      },\n      false\n    );\n  })();\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'wat',\n    content: `\n(module\n  (import \"title\" \"change\" (func $changeTitle (param i32) (param i32)))\n  (export \"memory\" (memory $0))\n  (export \"setTitle\" (func $setTitle))\n  (export \"increment\" (func $increment))\n  (memory $0 1)\n  (data 0 (i32.const 0) \"WebAssembly Text\")\n  (func $setTitle\n    (call $changeTitle (i32.const 0) (i32.const 16))\n  )\n  (func $increment (param $0 i32) (result i32)\n    (i32.add (local.get $0) (i32.const 1))\n  )\n)\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const malinaStarter: Template = {\n  name: 'malina',\n  title: 'Malina.js Starter',\n  thumbnail: 'assets/templates/malina.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'malina',\n    content: `\n<script>\n  let title = \"Malina.js\";\n  let counter = 0;\n  function increment() {\n    counter += 1;\n  }\n</script>\n\n<style>\n  .container,\n  .container button {\n    text-align: center;\n    font: 1em sans-serif;\n  }\n  .logo {\n    width: 150px;\n  }\n</style>\n\n<div class=\"container\">\n  <h1>Hello, {title}!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/malina.svg\" />\n  <p>You clicked {counter} times.</p>\n  <button on:click=\"{increment}\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const commonlispStarter: Template = {\n  name: 'commonlisp',\n  title: 'Common Lisp Starter',\n  thumbnail: 'assets/templates/commonlisp.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1 id=\"title\">Hello, World!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/commonlisp.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'commonlisp',\n    content: `\n(defun set-attribute (&key selector attribute value)\n  (let ((node\n         (#j:document:querySelector selector)))\n    (setf (jscl::oget node attribute) value)\n    node))\n\n(let ((title \"Common Lisp\"))\n  (set-attribute :selector \"#title\" :attribute \"innerHTML\"\n      :value (format nil \"Hello, ~A!\" title)))\n\n(let ((counter 0))\n  (set-attribute :selector \"#counter-button\" :attribute \"onclick\"\n    :value #'(lambda (ev)\n              (setf counter (+ counter 1))\n              (set-attribute :selector \"#counter\" :attribute \"innerHTML\"\n               :value counter))))\n\n(#j:console:clear)\n(write \"Hello, Common Lisp!\")\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const cppStarter: Template = {\n  name: 'cpp',\n  title: 'C++ Starter',\n  thumbnail: 'assets/templates/cpp.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"name\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/cpp.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n\n<script>\n  // set initial input\n  livecodes.cpp.input = \"-1\";\n\n  addEventListener('load', async () => {\n    const button = document.querySelector(\"#counter-button\");\n\n    // wait till loaded\n    await livecodes.cpp.loaded;\n\n    // get initial output\n    const initialOutput = livecodes.cpp.output;\n    update(initialOutput);\n\n    button.onclick = async () => {\n      // run with new input\n      const {output, error, exitCode} = await livecodes.cpp.run(window.count);\n      update(output);\n    };\n\n    function update(output) {\n      const counter = document.querySelector(\"#counter\");\n      const name = document.querySelector(\"#name\");\n\n      const [title, count] = output.split('\\\\n');\n\n      if (parseInt(count) !== NaN) {\n        window.count = count;\n        counter.innerText = window.count;\n      }\n      if (title) {\n        name.innerText = title;\n      }\n    }\n  });\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'cpp',\n    content: `\n#include <iostream>\nusing namespace std;\n\nint main() {\n    char title[] = \"C++\";\n    cout << title << endl;\n\n    int count;\n    cin >> count;\n    count += 1;\n    cout << count << endl;\n\n    return 0;\n}\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const juliaStarter: Template = {\n  name: 'julia',\n  title: 'Julia Starter',\n  thumbnail: 'assets/templates/julia.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"name\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/julia.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\" disabled>Loading...</button>\n</div>\n\n<script>\n  // set initial input\n  livecodes.julia.input = \"\";\n\n  addEventListener('load', async () => {\n    const button = document.querySelector(\"#counter-button\");\n\n    // wait till loaded\n    await livecodes.julia.loaded;\n\n    // get initial output\n    const initialOutput = livecodes.julia.output;\n    update(initialOutput);\n\n    button.innerText = \"Click me\";\n    button.disabled = false;\n    button.onclick = async () => {\n      // run with new input\n      const output = await livecodes.julia.run(window.count);\n      update(output);\n    };\n\n    function parseOutput(output) {\n      return output.replace(/\"/g, '').split('\\\\n');\n    }\n\n    function update(output) {\n      const counter = document.querySelector(\"#counter\");\n      const name = document.querySelector(\"#name\");\n\n      const [title, count] = parseOutput(output);\n\n      if (parseInt(count) !== NaN) {\n        window.count = count;\n        counter.innerText = window.count;\n      }\n      if (title) {\n        name.innerText = title;\n      }\n    }\n  });\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'julia',\n    content: `\nfunction increment(x)\n    if x == \"\"\n        return 0\n    else\n        num = parse(Int, x)\n        num + 1\n    end\nend\n\nfunction getTitle()\n    \"Julia\"\nend\n\nfunction formatOutput(args...)\n    join(map(x -> string(x), args), \"\\\\n\")\nend\n\nformatOutput(getTitle(), increment(livescodesInput))\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const clangStarter: Template = {\n  name: 'clang',\n  title: 'C++ (Clang) Starter',\n  thumbnail: 'assets/templates/cpp.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"name\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/cpp.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\" disabled>Loading...</button>\n</div>\n\n<script>\n  // set initial input\n  livecodes.cpp.input = \"-1\";\n\n  addEventListener('load', async () => {\n    const button = document.querySelector(\"#counter-button\");\n\n    // wait till loaded\n    await livecodes.cpp.loaded;\n\n    // get initial output\n    const initialOutput = livecodes.cpp.output;\n    update(initialOutput);\n\n    button.onclick = async () => {\n      button.disabled = true;\n      // run with new input\n      const {output, error, exitCode} = await livecodes.cpp.run(window.count);\n      update(output);\n    };\n\n    function update(output) {\n      const counter = document.querySelector(\"#counter\");\n      const name = document.querySelector(\"#name\");\n\n      const [title, count] = output.split('\\\\n');\n\n      if (parseInt(count) !== NaN) {\n        window.count = count;\n        counter.innerText = window.count;\n      }\n      if (title) {\n        name.innerText = title;\n      }\n      button.innerText = \"Click me\";\n      button.disabled = false;\n    }\n  });\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'clang',\n    content: `\n#include <iostream>\nusing namespace std;\n\nint main() {\n    char title[] = \"C++\";\n    cout << title << endl;\n\n    int count;\n    cin >> count;\n    count += 1;\n    cout << count << endl;\n\n    return 0;\n}\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const tclStarter: Template = {\n  name: 'tcl',\n  title: 'Tcl Starter',\n  thumbnail: 'assets/templates/tcl.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"name\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/tcl.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\" disabled>Loading...</button>\n</div>\n\n<script>\n  // set input\n  livecodes.tcl.input = \"-1\";\n\n  addEventListener(\"load\", async () => {\n    const button = document.querySelector(\"#counter-button\");\n    // wait till loaded\n    await livecodes.tcl.loaded;\n    button.innerText = \"Click me\";\n    button.disabled = false;\n\n    button.onclick = async () => {\n      const {output, error} = await livecodes.tcl.run();\n    };\n  });\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'tcl',\n    content: `\nset title \"Tcl\"\n::wacl::dom attr \"#name\" innerText $title\n\nset input [gets stdin]\nif {[info exists count]} {\n  incr count\n} else {\n  set count [expr $input + 1]\n}\n::wacl::dom attr \"#counter\" innerText $count\nputs $count\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const prologStarter: Template = {\n  name: 'prolog',\n  title: 'Prolog Starter',\n  thumbnail: 'assets/templates/tau-prolog.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/tau-prolog.svg\" title=\"Tau Prolog\" />\n\t<form id=\"query-form\" onsubmit=\"runQuery(); return false;\">\n\t\t<input type=\"text\" id=\"query\" value=\"father(X, jack).\" placeholder=\"Enter a query\" />\n\t\t<input type=\"submit\" value=\"Run query\" id=\"button\" />\n\t\t<pre id=\"result\"></pre>\n\t</form>\n</div>\n\n<script>\n  async function getTitle() {\n    const session = await livecodes.prolog.createSession();\n    session.query('title(X).');\n    session.answer(function(answer) {\n      document.getElementById(\"title\").innerText = answer.lookup('X');\n    });\n  }\n\n  async function runQuery() {\n    const query = document.getElementById(\"query\").value;\n    const result = document.getElementById(\"result\");\n\n    const session = await livecodes.prolog.createSession({limit: 1000});\n    session.promiseQuery(query).then(async () => {\n      result.innerText = \"\";\n      for await (let answer of session.promiseAnswers()) {\n        if(pl.type.is_substitution(answer)) {\n          console.log(session.format_answer(answer));\n          result.innerText += session.format_answer(answer) + '\\\\n';\n        }\n      }\n      if (result.innerText == \"\") {\n        result.innerText = \"false.\";\n      }\n      result.classList.remove('error');\n    }).catch((err) => {\n      result.innerText = err;\n      result.classList.add('error');\n    })\n  }\n\n  getTitle();\n  runQuery();\n</script>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n#query {\n  width: 20em;\n}\n#result {\n  background-color: #fafafa;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  box-sizing: border-box;\n  color: #3d3d3d;\n  margin: 1em;\n  padding: 1em;\n  text-align: left;\n}\n#result.error {\n  color: red;\n}`.trimStart(),\n  },\n  script: {\n    language: 'prolog',\n    content: `\ntitle('Prolog').\n\nmale(john).\nmale(oliver).\nmale(ali).\nmale(james).\nmale(jack).\nmale(harry).\nfemale(helen).\nfemale(sophie).\nfemale(mary).\nfemale(sue).\n\nparent(john, mary).\nparent(john, sue).\nparent(helen, mary).\nparent(helen, sue).\nparent(oliver, james).\nparent(sophie, james).\nparent(mary, jack).\nparent(ali, jack).\nparent(sue, harry).\nparent(james, harry).\n\nfather(X, Y):- male(X),\n    parent(X, Y).\n\nmother(X, Y):- female(X),\n    parent(X, Y).\n\ngrandfather(X, Y):- male(X),\n    parent(X, Z),\n    parent(Z, Y).\n\ngrandmother(X, Y):- female(X),\n    parent(X, Z),\n    parent(Z, Y).\n\nsister(X, Y):- female(X),\n    father(F, Y),\n    father(F, X),\n    X \\\\= Y.\nsister(X, Y):- female(X),\n    mother(M, Y),\n    mother(M, X),\n    X \\\\= Y.\n\nbrother(X, Y):- male(X),\n    father(F, Y),\n    father(F, X),\n    X \\\\= Y.\nbrother(X, Y):- male(X),\n    mother(M, Y),\n    mother(M, X),\n    X \\\\= Y.\n\nuncle(X, Y):- parent(Z, Y),\n    brother(Z, X).\n\naunt(X, Y):- parent(Z, Y),\n    sister(Z, X).\n\nancestor(X, Y):- parent(X, Y).\nancestor(X, Y):- parent(X, Z),\n    ancestor(Z, Y).\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const clioStarter: Template = {\n  name: 'clio',\n  title: 'Clio Starter',\n  thumbnail: 'assets/templates/clio.png',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1 id=\"title\">Hello, World!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/clio.png\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\" disabled>Loading...</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'clio',\n    content: `\nfn capitalize str:\n  (str.charAt 0 -> .toUpperCase) + (str.slice 1 -> .toLowerCase)\n\nfn greet name:\n  f\"Hello, {name}!\"\n\nfn setTitle name:\n  title = document.querySelector \"#title\"\n  title.innerText = name -> capitalize -> greet\n\nfn increment value:\n  (Number value) + 1\n\nfn activateBtn btn:\n  btn.disabled = false\n  btn.innerText = \"Click me\"\n  btn\n\nfn onBtnClick:\n  counter = document.querySelector \"#counter\"\n  counter.innerText = increment counter.innerText\n\nexport fn main argv:\n  setTitle \"clio\"\n  document.querySelector \"#counter-button\"\n    -> activateBtn\n    -> .addEventListener \"click\" onBtnClick\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const diagramsStarter: Template = {\n  name: 'diagrams',\n  title: 'Diagrams Starter',\n  thumbnail: 'assets/templates/diagrams.svg',\n  activeEditor: 'markup',\n  markup: {\n    language: 'diagrams',\n    contentUrl: '{{ __livecodes_baseUrl__ }}assets/templates/diagrams-starter.html',\n  },\n  style: {\n    language: 'css',\n    content: `\n.container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.container img {\n  width: 80%;\n  max-width: 600px;\n}\n\n.container h3:not(:nth-child(1)) {\n  margin-top: 3em;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const imbaStarter: Template = {\n  name: 'imba',\n  title: 'Imba Starter',\n  thumbnail: 'assets/templates/imba.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'imba',\n    content: `\ntag app-counter\n\tprop name = \"Imba\"\n\tprop count = 0\n\n\tcss self\n\t\ttext-align: center\n\t\tfont: 1em sans-serif\n\n\tcss .btn h:2em\tw:10em\tfs:1em\n\n\t<self>\n\t\t<h1> \"Hello, {name}!\"\n\t\t<img[h:100px] src=\"{{ __livecodes_baseUrl__ }}assets/templates/imba.svg\">\n\t\t<p> \"You clicked {count} times.\"\n\t\t<button.btn @click=count++> \"Click me\"\n\nimba.mount <app-counter>\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "import { Template } from '../../models';\n\nexport const jestStarter: Template = {\n  name: 'jest',\n  title: 'Jest Starter',\n  thumbnail: 'assets/templates/jest.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/jest.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n  <p class=\"info\">Run tests in the \"Tests\" panel below.</p>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n.info {\n  color: #404040;\n  font-size: 0.9em;\n  margin: 2em;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `\nexport class Counter {\n  count;\n  constructor() {\n    this.count = 0;\n  }\n  increment() {\n    this.count += 1;\n  }\n  getValue() {\n    return this.count;\n  }\n}\n\nconst title = document.querySelector(\"#title\");\nconst count = document.querySelector(\"#counter\");\nconst button = document.querySelector(\"#counter-button\");\n\ntitle.innerText = \"Jest\";\nconst counter = new Counter();\nbutton.addEventListener(\n  \"click\",\n  () => {\n    counter.increment();\n    count.innerText = counter.getValue();\n  },\n  false\n);\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n  tests: {\n    language: 'tsx',\n    content: `\nimport { fireEvent, screen } from \"@testing-library/dom\";\nimport \"@testing-library/jest-dom\";\nimport { assert } from \"chai\";\nimport { Counter } from \"./script\";\n\ndescribe(\"Counter Class\", () => {\n  test(\"Should initialize count with zero\", () => {\n    const counter = new Counter();\n    expect(counter.getValue()).toBe(0);\n  });\n\n  test(\"Should increment\", () => {\n    const counter = new Counter();\n    counter.increment();\n    counter.increment();\n    counter.increment();\n    assert.equal(counter.getValue(), 3);\n  });})\n\ndescribe(\"Page\", () => {\n  test(\"Should display title\", async () => {\n    expect(screen.getByText(\"Hello\", { exact: false })).toHaveTextContent(\n      \"Hello, Jest!\"\n    );\n  });\n\n  test(\"Should display logo\", async () => {\n    expect(document.querySelector('.logo').src).toContain('jest.svg');\n  });\n\n  test(\"Should increment counter on button click\", async () => {\n    fireEvent.click(screen.getByText(\"Click me\"));\n    fireEvent.click(screen.getByText(\"Click me\"));\n    fireEvent.click(screen.getByText(\"Click me\"));\n    expect(screen.getByText(\"You clicked\", { exact: false })).toHaveTextContent(\n      \"You clicked 3 times.\"\n    );\n  });\n});\n`.trimStart(),\n  },\n};\n", "import { Template } from '../../models';\n\nexport const jestReactStarter: Template = {\n  name: 'jest-react',\n  title: 'Jest/React Starter',\n  thumbnail: 'assets/templates/jest.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div id=\"app\">Loading...</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n.info {\n  color: #404040;\n  font-size: 0.9em;\n  margin: 2em;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'jsx',\n    content: `\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nexport const increment = (count) => (count ?? 0) + 1;\n\nexport default function App(props) {\n  const [count, setCount] = useState(0);\n\n  return (\n    <div className=\"container\">\n      <h1>Hello, {props.name}!</h1>\n      <img className=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/jest.svg\" />\n      <p>You clicked {count} times.</p>\n      <button onClick={() => setCount(increment(count))}>Click me</button>\n      <p className=\"info\">Run tests in the \"Tests\" panel below.</p>\n    </div>\n  );\n}\nReactDOM.render(<App name=\"Jest with React\" />, document.querySelector(\"#app\"));\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n  tests: {\n    language: 'tsx',\n    content: `\nimport React from \"react\";\nimport { unmountComponentAtNode } from \"react-dom\";\nimport { render, fireEvent, waitFor, screen, cleanup } from \"@testing-library/react\";\nimport \"@testing-library/jest-dom\";\nimport { assert } from \"chai\";\nimport App, { increment } from \"./script\";\n\nconst container = document.querySelector('#app');\nconst renderComponent = async () => {\n  await waitFor(async () => {\n    return render(<App name=\"Jest with React\" />, container);\n  });\n}\n\nbeforeEach(renderComponent);\n\nafterEach(() => {\n  unmountComponentAtNode(container);\n  cleanup();\n});\n\nafterAll(renderComponent);\n\ndescribe(\"Increment\", () => {\n  test(\"should increment count\", () => {\n    expect(increment(3)).toBe(4);\n  });\n\n  test(\"should return 1 if no count was supplied\", () => {\n    assert.equal(increment(), 1);\n  });\n});\n\ndescribe(\"Page\", () => {\n  test(\"Should display title\", async () => {\n    expect(screen.getByText(\"Hello\", { exact: false })).toHaveTextContent(\n      \"Hello, Jest with React!\"\n    );\n  });\n\n  test(\"Should display logo\", async () => {\n    expect(document.querySelector('.logo').src).toContain('jest.svg');\n  });\n\n  test(\"Should increment counter on button click\", async () => {\n    fireEvent.click(screen.getByText(\"Click me\"));\n    fireEvent.click(screen.getByText(\"Click me\"));\n    fireEvent.click(screen.getByText(\"Click me\"));\n    expect(screen.getByText(\"You clicked\", { exact: false })).toHaveTextContent(\n      \"You clicked 3 times.\"\n    );\n  });\n});\n`.trimStart(),\n  },\n};\n", "import { Template } from '../../models';\n\nexport const javascriptStarter: Template = {\n  name: 'javascript',\n  title: 'JavaScript Starter',\n  thumbnail: 'assets/templates/javascript.svg',\n  activeEditor: 'script',\n  markup: {\n    language: 'html',\n    content: `\n<div class=\"container\">\n  <h1>Hello, <span id=\"title\">World</span>!</h1>\n  <img class=\"logo\" src=\"{{ __livecodes_baseUrl__ }}assets/templates/javascript.svg\" />\n  <p>You clicked <span id=\"counter\">0</span> times.</p>\n  <button id=\"counter-button\">Click me</button>\n</div>\n`.trimStart(),\n  },\n  style: {\n    language: 'css',\n    content: `\n.container,\n.container button {\n  text-align: center;\n  font: 1em sans-serif;\n}\n.logo {\n  width: 150px;\n}\n`.trimStart(),\n  },\n  script: {\n    language: 'javascript',\n    content: `\nconst title = document.querySelector(\"#title\");\nconst counter = document.querySelector(\"#counter\");\nconst button = document.querySelector(\"#counter-button\");\n\ntitle.innerText = \"JavaScript\";\nlet count = 0;\n\nbutton.addEventListener(\"click\", () => {\n  count++;\n  counter.innerText = count;\n});\n`.trimStart(),\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n};\n", "// this is bundled to build/livecodes/templates.js\n\nimport { angularStarter } from './angular-starter';\nimport { assemblyscriptStarter } from './assemblyscript-starter';\nimport { astroStarter } from './astro-starter';\nimport { backboneStarter } from './backbone-starter';\nimport { blank } from './blank';\nimport { blocklyStarter } from './blockly-starter';\nimport { bootstrapStarter } from './bootstrap-starter';\nimport { coffeescriptStarter } from './coffeescript-starter';\nimport { goStarter } from './go-starter';\nimport { jqueryStarter } from './jquery-starter';\nimport { knockoutStarter } from './knockout-starter';\nimport { livescriptStarter } from './livescript-starter';\nimport { luaStarter } from './lua-starter';\nimport { mdxStarter } from './mdx-starter';\nimport { perlStarter } from './perl-starter';\nimport { phpStarter } from './php-starter';\nimport { preactStarter } from './preact-starter';\nimport { pyodideStarter } from './pyodide-starter';\nimport { pythonStarter } from './python-starter';\nimport { reactNativeStarter } from './react-native-starter';\nimport { reactStarter } from './react-starter';\nimport { markdownStarter } from './markdown-starter';\nimport { rescriptStarter } from './rescript-starter';\nimport { reasonStarter } from './reason-starter';\nimport { ocamlStarter } from './ocaml-starter';\nimport { riotStarter } from './riot-starter';\nimport { rubyStarter } from './ruby-starter';\nimport { schemeStarter } from './scheme-starter';\nimport { solidStarter } from './solid-starter';\nimport { sqlStarter } from './sql-starter';\nimport { stencilStarter } from './stencil-starter';\nimport { svelteStarter } from './svelte-starter';\nimport { tailwindcssStarter } from './tailwindcss-starter';\nimport { typescriptStarter } from './typescript-starter';\nimport { vueSfcStarter } from './vue-sfc-starter';\nimport { vueStarter } from './vue-starter';\nimport { watStarter } from './wat-starter';\nimport { malinaStarter } from './malina-starter';\nimport { commonlispStarter } from './commonlisp-starter';\nimport { cppStarter } from './cpp-starter';\nimport { juliaStarter } from './julia-starter';\nimport { clangStarter } from './clang-starter';\nimport { tclStarter } from './tcl-starter';\nimport { prologStarter } from './prolog-starter';\nimport { clioStarter } from './clio-starter';\nimport { diagramsStarter } from './diagrams-starter';\nimport { imbaStarter } from './imba-starter';\nimport { jestStarter } from './jest-starter';\nimport { jestReactStarter } from './jest-react-starter';\nimport { javascriptStarter } from './javascript-starter';\n\nexport const starterTemplates = [\n  blank,\n  javascriptStarter,\n  typescriptStarter,\n  reactStarter,\n  reactNativeStarter,\n  vueStarter,\n  vueSfcStarter,\n  angularStarter,\n  preactStarter,\n  svelteStarter,\n  stencilStarter,\n  solidStarter,\n  mdxStarter,\n  astroStarter,\n  riotStarter,\n  malinaStarter,\n  jqueryStarter,\n  backboneStarter,\n  knockoutStarter,\n  jestStarter,\n  jestReactStarter,\n  bootstrapStarter,\n  tailwindcssStarter,\n  coffeescriptStarter,\n  livescriptStarter,\n  clioStarter,\n  imbaStarter,\n  rescriptStarter,\n  reasonStarter,\n  ocamlStarter,\n  pythonStarter,\n  pyodideStarter,\n  rubyStarter,\n  goStarter,\n  phpStarter,\n  cppStarter,\n  clangStarter,\n  perlStarter,\n  luaStarter,\n  juliaStarter,\n  schemeStarter,\n  commonlispStarter,\n  tclStarter,\n  markdownStarter,\n  assemblyscriptStarter,\n  watStarter,\n  sqlStarter,\n  prologStarter,\n  blocklyStarter,\n  diagramsStarter,\n];\n"],
  "mappings": "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",
  "names": ["angularStarter", "assemblyscriptStarter", "astroStarter", "backboneStarter", "blank", "blocklyStarter", "bootstrapStarter", "coffeescriptStarter", "goStarter", "jqueryStarter", "knockoutStarter", "livescriptStarter", "luaStarter", "mdxStarter", "perlStarter", "phpStarter", "preactStarter", "pyodideStarter", "pythonStarter", "reactNativeStarter", "reactStarter", "markdownStarter", "rescriptStarter", "reasonStarter", "ocamlStarter", "riotStarter", "rubyStarter", "schemeStarter", "solidStarter", "sqlStarter", "stencilStarter", "svelteStarter", "tailwindcssStarter", "typescriptStarter", "vueSfcStarter", "vueStarter", "watStarter", "malinaStarter", "commonlispStarter", "cppStarter", "juliaStarter", "clangStarter", "tclStarter", "prologStarter", "clioStarter", "diagramsStarter", "imbaStarter", "jestStarter", "jestReactStarter", "javascriptStarter", "starterTemplates", "blank", "javascriptStarter", "typescriptStarter", "reactStarter", "reactNativeStarter", "vueStarter", "vueSfcStarter", "angularStarter", "preactStarter", "svelteStarter", "stencilStarter", "solidStarter", "mdxStarter", "astroStarter", "riotStarter", "malinaStarter", "jqueryStarter", "backboneStarter", "knockoutStarter", "jestStarter", "jestReactStarter", "bootstrapStarter", "tailwindcssStarter", "coffeescriptStarter", "livescriptStarter", "clioStarter", "imbaStarter", "rescriptStarter", "reasonStarter", "ocamlStarter", "pythonStarter", "pyodideStarter", "rubyStarter", "goStarter", "phpStarter", "cppStarter", "clangStarter", "perlStarter", "luaStarter", "juliaStarter", "schemeStarter", "commonlispStarter", "tclStarter", "markdownStarter", "assemblyscriptStarter", "watStarter", "sqlStarter", "prologStarter", "blocklyStarter", "diagramsStarter"]
}
