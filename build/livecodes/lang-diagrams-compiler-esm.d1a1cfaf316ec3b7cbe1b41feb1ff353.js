var M=e=>e.replace(/'[^'"]*'(?=(?:[^"]*"[^"]*")*[^"]*$)/g,function(n){return'"'+n.substring(1,n.length-1)+'"'}).replace(/(\w+(?=([^"\\]*(\\.|"([^"\\]*\\.)*[^"\\]*"))*[^"]*$))(\s*:)(?!(\w*)(?:"))/gm,function(n){return'"'+n.substring(0,n.length-1).trimEnd()+'":'}).replace(/,\s*([\]}])/g,"$1");var p=(e,t)=>new Promise((n,r)=>{if(t&&window[t])return n(window[t]);let i=document.createElement("script");i.src=e,i.async=!0;let o=()=>{i.removeEventListener("load",s),i.removeEventListener("error",l)},s=()=>{if(o(),!t)return n("loaded: "+e);let a=setInterval(()=>{if(window[t])return clearInterval(a),n(window[t])},5)},l=()=>{o(),r("failed to load: "+e)};i.addEventListener("load",s),i.addEventListener("error",l),document.head.appendChild(i)});var T=e=>new Promise((t,n)=>{let r=new FileReader;r.readAsDataURL(e),r.onload=()=>typeof r.result=="string"?t(r.result):n(),r.onerror=i=>n(i)});var U=e=>{let t=`importScripts("${e}");`;return"data:text/javascript;base64,"+btoa(t)},k=e=>e.replace(/\/\*[\s\S]*?\*\/|([^\\:]|^)\/\/.*$/gm,"$1");var E=(e,t)=>({...t.customSettings[e]});var q=(e,t)=>async n=>{try{return await e(n)}catch(r){return typeof t=="function"&&t(r),n}};var w="https://cdn.jsdelivr.net/npm/@live-codes/browser-compilers@0.5.13/dist/";var B="https://cdn.jsdelivr.net/npm/cytoscape-svg@0.4.0/cytoscape-svg.min.js",H="https://cdn.jsdelivr.net/npm/cytoscape@3.22.0/dist/cytoscape.min.js";var C="https://cdn.jsdelivr.net/npm/elkjs@0.7.1/lib/";var P="https://cdn.jsdelivr.net/npm/graphre@0.1.3/dist/graphre.js";var A="https://cdn.jsdelivr.net/npm/@hpcc-js/wasm@1.12.9/dist/index.min.js";var R="https://cdn.jsdelivr.net/npm/mermaid@9.1.3/dist/mermaid.min.js";var N="https://cdn.jsdelivr.net/npm/nomnoml@1.4.0/dist/nomnoml.min.js";var O="https://cdn.jsdelivr.net/npm/@pintora/standalone@0.1.0/lib/pintora-standalone.umd.min.js",I="https://cdn.jsdelivr.net/npm/plotly.js@2.9.0/dist/plotly.min.js";var F="https://cdn.jsdelivr.net/npm/svgbob-wasm@0.4.1-a0/svgbob_wasm_bg.wasm";var S="https://cdn.jsdelivr.net/npm/vega@5.21.0/build/vega.min.js",z="https://cdn.jsdelivr.net/npm/vega-lite@5.2.0/build/vega-lite.min.js";var L="https://cdn.jsdelivr.net/npm/wavedrom@2.9.0/";var W=!1,J=(e,t)=>{e.tagName.toLowerCase()==="img"?e.src="data:image/svg+xml;base64,"+btoa(unescape(encodeURIComponent(t))):e.innerHTML=t},j=e=>M(k(e)),g=async(e,t,n,r,i=!1)=>{if(!e)return"";let o=document.createElement("div");o.innerHTML=e;let s=o.querySelectorAll(`script[type="application/diagram-${t}"]`);if(s.length===0)return o.remove(),e;await n();for(let a of s){if(!a.src&&!a.innerHTML.trim())continue;let d=a.dataset.output;if(!d)continue;let f=a.src?await fetch(a.src).then(c=>c.text()):a.innerHTML,h=await r(f,a),x=o.querySelectorAll(`[data-src="${d}"]`);for(let c of x)c.tagName.toLowerCase()!=="img"&&i&&(W=!0,h=`<svg-container> ${h} </svg-container>`),J(c,h);a.remove()}let l=o.innerHTML;return o.remove(),l},D=async e=>{let t=document.createElement("div");t.innerHTML=e,document.body.appendChild(t);let n=t.querySelectorAll('script[type="application/diagram-gnuplot"]');if(n.length===0)return t.remove(),e;let r=w+"gnuplot",i=await p(r+"/gnuplot_api.js","Gnuplot"),o=U(r+"/gnuplot.js"),s=window.gnuplot=window.gnuplot||new i(o),l=(c,m)=>new Promise(async v=>{await Promise.all(m.map(y=>new Promise(b=>{s.putFile(y.fileName,y.content,b)}))),s.run(c,v)}),a=c=>new Promise(m=>{s.getFile(c,function(v){if(!v?.content){m("");return}let y=new Uint8Array(v.content),b=new Blob([y],{type:"image/svg+xml"});T(b).then(m)})});await new Promise(c=>s.removeFiles(null,c));let d=[],f=t.querySelectorAll('script[type="application/diagram-gnuplot-file"]');for(let c of f){if(!c.dataset.file&&!c.src)continue;let m=c.src?await fetch(c.src).then(y=>y.text()):c.innerHTML,v=c.dataset.file||c.src?.split("/")[c.src?.split("/").length-1]||"data.txt";d.push({fileName:v,content:m}),c.remove()}for(let c of n){if(!c.src&&!c.innerHTML.trim())continue;let m=c.src?await fetch(c.src).then(v=>v.text()):c.innerHTML;await l(m,d),c.remove()}let h=t.querySelectorAll("[data-src]");for(let c of h){let m=await a(c.dataset.src||"");m&&(c.tagName.toLowerCase()==="img"?c.src=m:c.innerHTML=atob(m.replace("data:image/svg+xml;base64,","")))}let x=t.innerHTML;return t.remove(),x},V=async e=>{let t,n=async()=>{t=await p(R,"mermaid"),t.mermaidAPI.initialize({startOnLoad:!1})},r=0,i=()=>r++;return g(e,"mermaid",n,s=>{let l=document.createElement("div");l.id="livecodes-mermaid-chart-"+i(),document.body.appendChild(l);let a=t.mermaidAPI.render(l.id,s.trim());return l.remove(),a})},_=async e=>{let t;return g(e,"graphviz",async()=>{t=await p(A,"@hpcc-js/wasm")},(i,o)=>{let s=o.dataset.layout||"dot";return t.graphviz.layout(i,"svg",s)})},$=async e=>{let t=document.createElement("div");t.innerHTML=e;let n=t.querySelectorAll('script[type="application/diagram-vega-lite"]'),r;if(n.length>0){r=await p(S,"vega");let l=await p(z,"vegaLite");for(let a of n){if(!a.src&&!a.innerHTML.trim()||!a.dataset.output)continue;let f={};try{let h=a.src?await fetch(a.src).then(x=>x.json()):JSON.parse(j(a.innerHTML));a.innerHTML=JSON.stringify(l.compile(h,f).spec),a.type="application/diagram-vega",a.removeAttribute("src")}catch{throw a.remove(),new Error("failed to parse vegaLite specs.")}}}let i=async()=>{r=r||await p(S,"vega")},o=async(l,a={})=>{let d=document.createElement("div");try{let f=JSON.parse(j(l));return await new r.View(r.parse(f),{...a,renderer:"svg",container:d}).runAsync(),d.querySelector("svg")?.outerHTML||""}catch{throw new Error("failed to parse vega specs.")}finally{d.remove()}},s=await g(t.innerHTML,"vega",i,o);return t.remove(),s},G=async e=>{let t;return g(e,"plotly",async()=>{t=await p(I,"Plotly")},i=>{let o=document.createElement("div");try{let s=JSON.parse(j(i));return t.newPlot(o,s.data,s.layout,{displayModeBar:!1}),o.querySelector("svg")?.outerHTML||""}catch{throw new Error("failed to parse plotly specs.")}finally{o.remove()}})},K=async e=>{let t;return g(e,"svgbob",async()=>{let{svgbobWasm:i}=await import(w+"svgbob-wasm/svgbob-wasm.js");t=await i(F)},i=>t.convert_string(i),!0)},Z=async e=>{let t;return g(e,"wavedrom",async()=>{await p(L+"skins/default.js","WaveSkin"),t=await p(L+"wavedrom.min.js","WaveDrom")},i=>{let o=document.createElement("div");try{let s=JSON.parse(j(i));return o.id="diagram-id",document.body.appendChild(o),t.RenderWaveForm(o.id,s,""),o.innerHTML||""}catch{throw new Error("failed to parse WaveDrom specs.")}finally{o.remove()}})},Q=async e=>{let t;return g(e,"nomnoml",async()=>{await p(P,"graphre"),t=await p(N,"nomnoml")},i=>t.renderSvg(i))},X=async e=>{let t,n;return g(e,"elk",async()=>{let o=C+"elk-api.js",s=C+"elk-worker.min.js",l=w+"elkjs-svg/elkjs-svg.js",a=await p(o,"ELK"),d=await p(l,"elksvg");t=new a({workerUrl:U(s)}),n=new d.Renderer},o=>{try{let s=JSON.parse(j(o));return t.layout(s).then(l=>n.toSvg(l))}catch{throw new Error("failed to parse ELK JSON.")}},!0)},Y=async e=>{let t,n;return g(e,"cytoscape",async()=>{[t,n]=await Promise.all([p(H,"cytoscape"),p(B,"cytoscapeSvg")]),t.use(n)},o=>{let s=document.createElement("div");s.style.display="block",s.style.visibility="none",s.style.height="300px",s.style.width="300px",document.body.appendChild(s);try{let l={...JSON.parse(j(k(o))),container:s};return t(l).svg({scale:1,full:!0})}catch{throw new Error("failed to parse Cytoscape options.")}finally{s.remove()}})},tt=async(e,t)=>{let n;return g(e,"pintora",async()=>{n=await p(O,"pintora")},o=>{let s=document.createElement("div");n.default.renderTo(o,{container:s,config:{...E("pintora",t)}});let l=s.firstElementChild;return l?.setAttribute("xmlns","http://www.w3.org/2000/svg"),l?.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),s.innerHTML})},et=()=>W?`
<script>
  class SVGContainer extends HTMLElement {
    constructor() {
      super();
      const shadowRoot = this.attachShadow({mode: 'closed'});
      shadowRoot.append(...this.childNodes);
    }
  }
  customElements.define('svg-container', SVGContainer);
<\/script>
`:"",u=e=>q(e,console.error),pt=async(e,{config:t})=>await Promise.resolve(e).then(u(D)).then(u(V)).then(u(_)).then(u($)).then(u(G)).then(u(K)).then(u(Z)).then(u(Q)).then(u(X)).then(u(Y)).then(u(r=>tt(r,t))).catch(r=>(console.error(r),e))+et();export{pt as diagramsCompiler};
//# sourceMappingURL=lang-diagrams-compiler-esm.js.map
