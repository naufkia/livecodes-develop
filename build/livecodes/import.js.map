{
  "version": 3,
  "sources": ["../../node_modules/lz-string/libs/lz-string.js", "../../src/livecodes/config/default-config.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/utils/compression.ts", "../../src/livecodes/import/code.ts", "../../src/livecodes/vendors.ts", "../../src/livecodes/languages/lightningcss/processor-lightningcss.ts", "../../src/livecodes/languages/postcss/processor-postcss.ts", "../../src/livecodes/languages/postcss/postcss-plugins.ts", "../../src/livecodes/languages/unocss/processor-unocss.ts", "../../src/livecodes/languages/windicss/processor-windicss.ts", "../../src/livecodes/languages/utils.ts", "../../src/livecodes/languages/asciidoc/lang-asciidoc.ts", "../../src/livecodes/languages/prettier.ts", "../../src/livecodes/languages/babel/lang-babel.ts", "../../src/livecodes/languages/css/lang-css.ts", "../../src/livecodes/languages/haml/lang-haml.ts", "../../src/livecodes/languages/html/lang-html.ts", "../../src/livecodes/languages/javascript/lang-javascript.ts", "../../src/livecodes/languages/jsx/lang-jsx.ts", "../../src/livecodes/languages/jsx/lang-tsx.ts", "../../src/livecodes/languages/less/lang-less.ts", "../../src/livecodes/languages/markdown/lang-markdown.ts", "../../src/livecodes/compiler/compile-in-compiler.ts", "../../src/livecodes/languages/mdx/lang-mdx.ts", "../../src/livecodes/languages/pug/lang-pug.ts", "../../src/livecodes/languages/scss/lang-scss.ts", "../../src/livecodes/languages/scss/lang-sass.ts", "../../src/livecodes/languages/svelte/lang-svelte.ts", "../../src/livecodes/languages/stylus/lang-stylus.ts", "../../src/livecodes/languages/typescript/lang-typescript.ts", "../../src/livecodes/languages/vue/lang-vue.ts", "../../src/livecodes/languages/vue/lang-vue2.ts", "../../src/livecodes/languages/stencil/lang-stencil.ts", "../../src/livecodes/languages/coffeescript/lang-coffeescript.ts", "../../src/livecodes/languages/livescript/lang-livescript.ts", "../../src/livecodes/languages/assemblyscript/lang-assemblyscript.ts", "../../src/livecodes/languages/python/lang-python.ts", "../../src/livecodes/languages/ruby/lang-ruby.ts", "../../src/livecodes/languages/php/lang-php.ts", "../../src/livecodes/languages/perl/lang-perl.ts", "../../src/livecodes/languages/lua/lang-lua.ts", "../../src/livecodes/languages/commonlisp/lang-commonlisp.ts", "../../src/livecodes/languages/scheme/lang-scheme.ts", "../../src/livecodes/languages/solid/lang-solid.ts", "../../src/livecodes/languages/solid/lang-solid-tsx.ts", "../../src/livecodes/languages/python-pyodide/lang-python-pyodide.ts", "../../src/livecodes/languages/liquid/lang-liquid.ts", "../../src/livecodes/languages/ejs/lang-ejs.ts", "../../src/livecodes/languages/handlebars/lang-handlebars.ts", "../../src/livecodes/languages/dot/lang-dot.ts", "../../src/livecodes/languages/nunjucks/lang-nunjucks.ts", "../../src/livecodes/languages/go/lang-go.ts", "../../src/livecodes/languages/rescript/lang-rescript.ts", "../../src/livecodes/languages/reason/lang-reason.ts", "../../src/livecodes/languages/ocaml/lang-ocaml.ts", "../../src/livecodes/languages/wat/lang-wat.ts", "../../src/livecodes/languages/riot/lang-riot.ts", "../../src/livecodes/languages/sql/lang-sql.ts", "../../src/livecodes/languages/react-native/lang-react-native.ts", "../../src/livecodes/languages/react-native/lang-react-native-tsx.ts", "../../src/livecodes/languages/blockly/lang-blockly.ts", "../../src/livecodes/languages/twig/lang-twig.ts", "../../src/livecodes/languages/astro/lang-astro.ts", "../../src/livecodes/languages/malina/lang-malina.ts", "../../src/livecodes/languages/cpp/lang-cpp.ts", "../../src/livecodes/languages/julia/lang-julia.ts", "../../src/livecodes/languages/cpp-clang/lang-cpp-clang.ts", "../../src/livecodes/languages/tcl/lang-tcl.ts", "../../src/livecodes/languages/prolog/lang-prolog.ts", "../../src/livecodes/languages/clio/lang-clio.ts", "../../src/livecodes/languages/richtext/lang-richtext.ts", "../../src/livecodes/languages/diagrams/lang-diagrams.ts", "../../src/livecodes/languages/imba/lang-imba.ts", "../../src/livecodes/languages/mustache/lang-mustache.ts", "../../src/livecodes/languages/art-template/lang-art-template.ts", "../../src/livecodes/languages/languages.ts", "../../src/livecodes/languages/css-presets.ts", "../../src/livecodes/import/utils.ts", "../../src/livecodes/import/codepen.ts", "../../src/livecodes/import/dom.ts", "../../src/livecodes/services/github.ts", "../../src/livecodes/import/github-dir.ts", "../../src/livecodes/import/github.ts", "../../src/livecodes/import/github-gist.ts", "../../src/livecodes/import/gitlab.ts", "../../src/livecodes/import/gitlab-dir.ts", "../../src/livecodes/import/gitlab-snippet.ts", "../../src/livecodes/services/allowed-origin.ts", "../../src/livecodes/services/cors.ts", "../../src/livecodes/services/share.ts", "../../src/livecodes/import/jsbin.ts", "../../src/livecodes/import/project-id.ts", "../../src/livecodes/import/zip.ts", "../../src/livecodes/import/url.ts", "../../src/livecodes/import/import.ts", "../../src/livecodes/UI/selectors.ts", "../../src/livecodes/UI/import.ts"],
  "sourcesContent": ["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "import { Config } from '../models';\n\nexport const defaultConfig: Config = {\n  title: 'Untitled Project',\n  description: '',\n  tags: [],\n  autoupdate: true,\n  autosave: false,\n  delay: 1500,\n  formatOnsave: false,\n  mode: 'full',\n  theme: 'dark',\n  recoverUnsaved: true,\n  showSpacing: false,\n  readonly: false,\n  allowLangChange: true,\n  activeEditor: undefined,\n  languages: undefined,\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n  tests: {\n    language: 'typescript',\n    content: '',\n  },\n  tools: {\n    enabled: 'all',\n    active: '',\n    status: '',\n  },\n  zoom: 1,\n  processors: [],\n  customSettings: {},\n  editor: undefined,\n  fontFamily: undefined,\n  fontSize: undefined,\n  useTabs: false,\n  tabSize: 2,\n  lineNumbers: true,\n  wordWrap: false,\n  closeBrackets: true,\n  semicolons: true,\n  singleQuote: false,\n  trailingComma: true,\n  emmet: true,\n  editorMode: undefined,\n  version: process.env.VERSION as string,\n};\n", "import { Config, Language, Processor } from '../models';\n\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\n  let timeout: any;\n\n  return (...args: unknown[]) => {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\n  };\n};\n\nexport const decodeHTML = (html: string) => {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\n\nexport const encodeHTML = (html: string) =>\n  html\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&#39;')\n    .replace(/\"/g, '&#34;');\n\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\n\nexport const escapeCode = (code: string, slash = true) =>\n  code\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\n    .replace(/`/g, '\\\\`')\n    .replace(/<\\/script>/g, '<\\\\/script>');\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const pipe = (...fns: Function[]) =>\n  fns.reduce(\n    (f, g) =>\n      (...args: any) =>\n        g(f(...args)),\n  );\n\n// replace non-alphanumeric with underscore\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\n\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n// added safari (on mac & ios): monaco editor is broken on safari\nexport const isMobile = () => {\n  let mobile = false;\n  const userAgent = navigator.userAgent.toLowerCase();\n  (function (a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4),\n      )\n    ) {\n      mobile = true;\n    }\n  })(userAgent || navigator.vendor || (window as any).opera);\n\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\n\n  return mobile || safari;\n};\n\nexport const isRelativeUrl = (url?: string) =>\n  !url?.startsWith('http') && !url?.startsWith('data:');\n\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\n\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\n\nexport const objectMap = (\n  obj: Record<string, any>,\n  fn: (value: any, key: string, index: number) => any,\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\n\nexport const objectFilter = (\n  obj: Record<string, any>,\n  predicate: (value: any, key: string, index: number) => any,\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\n\nexport const copyToClipboard = (text: string) => {\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      // eslint-disable-next-line no-console\n      console.warn('Copy to clipboard failed.', ex);\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const stringToValidJson = (str: string) =>\n  str\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\n    })\n    .replace(\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\n      function quoteNonQuoted(matchedStr) {\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\n      },\n    )\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\n\nexport const stringify = (obj: any, pretty = false) => {\n  try {\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\n  } catch {\n    return '';\n  }\n};\n\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\n\nexport const downloadFile = (filename: string, extension: string, content: string) => {\n  const a = document.createElement('a');\n  a.style.display = 'none';\n  a.href = content;\n  a.download = safeName(filename) + '.' + extension;\n  a.click();\n  a.remove();\n};\n\nexport const loadScript = (url: string, name?: string) =>\n  new Promise((resolve, reject) => {\n    if (name && (window as any)[name]) {\n      return resolve((window as any)[name]);\n    }\n\n    const script = document.createElement('script');\n    script.src = url;\n    script.async = true;\n    const removeEventListeners = () => {\n      script.removeEventListener('load', onLoad);\n      script.removeEventListener('error', onError);\n    };\n    const onLoad = () => {\n      removeEventListeners();\n      if (!name) {\n        return resolve('loaded: ' + url);\n      }\n      const i = setInterval(() => {\n        if ((window as any)[name]) {\n          clearInterval(i);\n          return resolve((window as any)[name]);\n        }\n      }, 5);\n    };\n    const onError = () => {\n      removeEventListeners();\n      reject('failed to load: ' + url);\n    };\n    script.addEventListener('load', onLoad);\n    script.addEventListener('error', onError);\n    document.head.appendChild(script);\n  });\n\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\n  if (id && document.getElementById(id)) return;\n  const stylesheet = document.createElement('link');\n  stylesheet.rel = 'stylesheet';\n  stylesheet.href = url;\n  stylesheet.id = id || 'styles-' + getRandomString();\n  document.head.insertBefore(\n    stylesheet,\n    insertBefore ? document.querySelector(insertBefore) : null,\n  );\n};\n\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\n\nexport const getDate = () => {\n  let date = new Date();\n  const offset = date.getTimezoneOffset();\n  date = new Date(date.getTime() - offset * 60 * 1000);\n  return date.toISOString().split('T')[0];\n};\n\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\n  fetch(input, init).then(handleFetchError);\n\nexport const blobToBase64 = (file: Blob): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\n  const CHUNK_SZ = 0x8000;\n  const c = [];\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\n  }\n  return btoa(c.join(''));\n};\n\nexport const base64ToUint8Array = (str: string) =>\n  new Uint8Array(\n    atob(str)\n      .split('')\n      .map((c) => c.charCodeAt(0)),\n  );\n\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const getWorkerDataURL = (url: string) => {\n  const content = `importScripts(\"${url}\");`;\n  return 'data:text/javascript;base64,' + btoa(content);\n};\n\nexport const removeComments = (src: string) =>\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\n\nexport const removeStrings = (src: string) =>\n  src\n    .replace(/'[^\\n']*'/gm, \"''\")\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\n    .replace(/`[^`]*`/gm, '``');\n\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\n\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\n  ...(config.customSettings as any)[language],\n});\n\nexport const getValidUrl = (url?: string) => {\n  if (!url) return null;\n  let validUrl = null;\n  if (url.startsWith('http') || url.startsWith('data:')) {\n    try {\n      validUrl = new URL(url).href;\n    } catch {\n      try {\n        validUrl = new URL(decodeURIComponent(url)).href;\n      } catch {\n        //\n      }\n    }\n  }\n  return validUrl;\n};\n\nexport const runOrContinue =\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\n  async (x: T): Promise<T> => {\n    try {\n      const result = await fn(x);\n      return result;\n    } catch (error) {\n      if (typeof catchFn === 'function') {\n        catchFn(error);\n      }\n      return x;\n    }\n  };\n\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\n\nexport const isInIframe = () => {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return true;\n  }\n};\n\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\n", "import {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n  decompressFromBase64,\n} from 'lz-string';\n\nexport const compress = compressToEncodedURIComponent;\nexport const decompress = (compressed: string, isJSON = true) => {\n  const decoded = decompressFromEncodedURIComponent(compressed);\n  if (decoded) {\n    if (!isJSON) return decoded;\n    try {\n      if (JSON.parse(decoded)) {\n        return decoded;\n      }\n    } catch {\n      //\n    }\n  }\n  // for backward compatibility\n  return decompressFromBase64(compressed);\n};\n", "import type { Config } from '../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { decompress } from '../utils/compression';\n\nexport const isCompressedCode = (url: string) => url.startsWith('code/');\n\nexport const importCompressedCode = (url: string) => {\n  const code = url.slice(5);\n  let config: Partial<Config>;\n  try {\n    config = JSON.parse(decompress(code) || '{}');\n  } catch (error) {\n    config = {};\n  }\n  return config;\n};\n", "export const vendorsBaseUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/browser-compilers@0.5.13/dist/';\n\nexport const acornUrl = 'https://cdn.jsdelivr.net/npm/acorn@8.6.0/dist/acorn.min.js';\n\nexport const artTemplateUrl =\n  'https://cdn.jsdelivr.net/npm/art-template@4.13.2/lib/template-web.js';\n\nexport const asciidocUrl =\n  'https://cdn.jsdelivr.net/npm/@asciidoctor/core@2.2.5/dist/browser/asciidoctor.min.js';\n\nexport const assemblyscriptSdkUrl =\n  'https://cdn.jsdelivr.net/npm/assemblyscript@0.19.22/dist/sdk.js';\n\nexport const assemblyscriptLoaderUrl =\n  'https://cdn.jsdelivr.net/npm/@assemblyscript/loader@0.19.22/umd/index.js';\n\nexport const astringUrl = 'https://cdn.jsdelivr.net/npm/astring@1.7.5/dist/astring.min.js';\n\nexport const astroBaseUrl = 'https://cdn.jsdelivr.net/npm/@hatemhosny/astro-internal@0.0.4/';\n\nexport const astroWasmURL = 'https://cdn.jsdelivr.net/npm/@astrojs/compiler@0.9.2/astro.wasm';\n\nexport const autoCompleteUrl =\n  'https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.6/dist/autoComplete.min.js';\n\nexport const babelUrl = 'https://cdn.jsdelivr.net/npm/@babel/standalone@7.17.2/babel.min.js';\n\nexport const biwaschemeUrl =\n  'https://cdn.jsdelivr.net/npm/biwascheme@0.7.4/release/biwascheme-min.js';\n\nexport const blocklyCdnBaseUrl = 'https://cdn.jsdelivr.net/npm/blockly@7.20211209.2/';\n\nexport const brythonBaseUrl = 'https://cdn.jsdelivr.net/npm/brython@3.10.4/';\n\nexport const chaiUrl = 'https://cdn.jsdelivr.net/npm/chai@4.3.6/+esm';\n\nexport const chaiTypesUrl = 'https://cdn.jsdelivr.net/npm/@types/chai@4.2.22/index.d.ts';\n\nexport const cjs2esUrl = 'https://cdn.jsdelivr.net/npm/cjs2es@1.1.1/dist/cjs2es.browser.min.js';\n\nexport const clioBaseUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/clio-browser-compiler@0.0.3/public/build/';\n\nexport const coffeeScriptUrl =\n  'https://cdn.jsdelivr.net/npm/coffeescript@2.6.1/lib/coffeescript-browser-compiler-legacy/coffeescript.js';\n\nexport const cppWasmBaseUrl = 'https://cdn.jsdelivr.net/npm/@chriskoch/cpp-wasm@1.0.2';\n\nexport const csstreeUrl = 'https://cdn.jsdelivr.net/npm/css-tree@1.1.3/dist/csstree.min.js';\n\nexport const cytoscapeSvgUrl =\n  'https://cdn.jsdelivr.net/npm/cytoscape-svg@0.4.0/cytoscape-svg.min.js';\n\nexport const cytoscapeUrl = 'https://cdn.jsdelivr.net/npm/cytoscape@3.22.0/dist/cytoscape.min.js';\n\nexport const dotUrl = 'https://cdn.jsdelivr.net/npm/dot@1.1.3/doT.min.js';\n\nexport const ejsUrl = 'https://cdn.jsdelivr.net/npm/ejs@3.1.6/ejs.min.js';\n\nexport const elkjsBaseUrl = 'https://cdn.jsdelivr.net/npm/elkjs@0.7.1/lib/';\n\nexport const emmetMonacoUrl =\n  'https://cdn.jsdelivr.net/npm/emmet-monaco-es@5.0.0/dist/emmet-monaco.min.js';\n\nexport const esModuleShimsUrl =\n  'https://cdn.jsdelivr.net/npm/es-module-shims@1.4.4/dist/es-module-shims.min.js';\n\nexport const flexSearchUrl =\n  'https://cdn.jsdelivr.net/npm/flexsearch@0.7.21/dist/flexsearch.bundle.min.js';\n\nexport const fontAnonymousProUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/anonymous-pro@4.5.9/index.min.css';\n\nexport const fontCascadiaCodeUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/cascadia-code@4.2.1/index.min.css';\n\nexport const fontCodeNewRomanUrl = 'https://fonts.cdnfonts.com/css/code-new-roman-2';\n\nexport const fontComicMonoUrl = 'https://cdn.jsdelivr.net/npm/comic-mono@0.0.1/index.min.css';\n\nexport const fontCourierPrimeUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/courier-prime@4.5.9/index.min.css';\n\nexport const fontDECTerminalModernUrl = 'https://fonts.cdnfonts.com/css/dec-terminal-modern';\n\nexport const fontDejaVuMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/dejavu-mono@4.5.4/index.min.css';\n\nexport const fontFantasqueUrl =\n  'https://cdn.jsdelivr.net/npm/@typopro/web-fantasque-sans-mono@3.7.5/TypoPRO-FantasqueSansMono.css';\n\nexport const fontFiraCodeUrl = 'https://cdn.jsdelivr.net/npm/firacode@6.2.0/distr/fira_code.css';\n\nexport const fontFixedsysUrl = 'https://fonts.cdnfonts.com/css/fixedsys-62';\n\nexport const fontHackUrl = 'https://cdn.jsdelivr.net/npm/hack-font@3.3.0/build/web/hack.css';\n\nexport const fontHermitUrl = 'https://cdn.jsdelivr.net/npm/typeface-hermit@0.0.44/index.min.css';\n\nexport const fontIBMPlexMonoUrl =\n  'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap';\n\nexport const fontInconsolataUrl =\n  'https://fonts.googleapis.com/css2?family=Inconsolata&display=swap';\n\nexport const fontIosevkaUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/iosevka@4.5.4/index.min.css';\n\nexport const fontJetbrainsMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/jetbrains-mono@4.5.11/index.min.css';\n\nexport const fontMenloUrl = 'https://fonts.cdnfonts.com/css/menlo';\n\nexport const fontMonofurUrl = 'https://fonts.cdnfonts.com/css/monofur';\n\nexport const fontMonoidUrl =\n  'https://cdn.jsdelivr.net/npm/@typopro/web-monoid@3.7.5/TypoPRO-Monoid.css';\n\nexport const fontNotoUrl = 'https://fonts.googleapis.com/css2?family=Noto+Sans+Mono&display=swap';\n\nexport const fontNovaMonoUrl = 'https://fonts.googleapis.com/css2?family=Nova+Mono&display=swap';\n\nexport const fontOpenDyslexicUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/opendyslexic@4.5.4/index.min.css';\n\nexport const fontProFontWindowsUrl = 'https://fonts.cdnfonts.com/css/profontwindows';\n\nexport const fontRobotoMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/roboto-mono@4.5.8/index.min.css';\n\nexport const fontSFMonoUrl = 'https://fonts.cdnfonts.com/css/sf-mono';\n\nexport const fontSourceCodeProUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/source-code-pro@4.5.12/index.min.css';\n\nexport const fontSpaceMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/space-mono@4.5.10/index.min.css';\n\nexport const fontSudoVarUrl = 'https://fonts.cdnfonts.com/css/sudo-var';\n\nexport const fontUbuntuMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/ubuntu-mono@4.5.11/index.min.css';\n\nexport const fontVictorMonoUrl = 'https://cdn.jsdelivr.net/npm/victormono@1.5.4/dist/index.min.css';\n\nexport const fscreenUrl = 'https://cdn.jsdelivr.net/npm/fscreen@1.2.0/dist/fscreen.esm.js';\n\nexport const githubMarkdownCss =\n  'https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css';\n\nexport const go2jsBaseUrl = 'https://cdn.jsdelivr.net/npm/@live-codes/go2js@0.3.0/build';\n\nexport const graphreCdnUrl = 'https://cdn.jsdelivr.net/npm/graphre@0.1.3/dist/graphre.js';\n\nexport const handlebarsBaseUrl = 'https://cdn.jsdelivr.net/npm/handlebars@4.7.7/dist/';\n\nexport const highlightjsUrl =\n  'https://cdn.skypack.dev/pin/highlight.js@v11.5.1-ByzFRPBe5lvvwKChRHdq/mode=imports,min/optimized/highlightjs.js';\n\nexport const hintCssUrl = 'https://cdn.jsdelivr.net/npm/hint.css@2.7.0/hint.min.css';\n\nexport const hpccJsCdnUrl = 'https://cdn.jsdelivr.net/npm/@hpcc-js/wasm@1.12.9/dist/index.min.js';\n\nexport const imbaBaseUrl = 'https://cdn.jsdelivr.net/npm/imba@2.0.0-alpha.201/dist/';\n\nexport const jestLiteUrl = 'https://cdn.jsdelivr.net/npm/jest-lite@1.0.0-alpha.4/dist/core.js';\n\nexport const jestTypesUrl = 'https://cdn.jsdelivr.net/npm/@types/jest@27.4.1/index.d.ts';\n\nexport const jsclUrl = 'https://cdn.jsdelivr.net/npm/jscl@0.8.2/jscl.min.js';\n\nexport const jsZipUrl =\n  'https://cdn.skypack.dev/-/jszip@v3.7.1-quihaZrSeNyrwABoIb7Z/dist=es2020,mode=imports,min/optimized/jszip.js';\n\nexport const juliaWasmBaseUrl = 'https://cdn.jsdelivr.net/npm/@chriskoch/julia-wasm@1.0.4';\n\nexport const liquidJsUrl =\n  'https://cdn.jsdelivr.net/npm/liquidjs@9.34.0/dist/liquid.browser.min.js';\n\nexport const localforageUrl =\n  'https://cdn.jsdelivr.net/npm/localforage@1.10.0/dist/localforage.min.js';\n\nexport const luaUrl = 'https://cdn.jsdelivr.net/npm/fengari-web@0.1.4/dist/fengari-web.min.js';\n\nexport const lunaObjViewerStylesUrl =\n  'https://cdn.jsdelivr.net/npm/luna-object-viewer@0.2.0/luna-object-viewer.css';\n\nexport const lunaConsoleStylesUrl =\n  'https://cdn.jsdelivr.net/npm/luna-console@0.2.1/luna-console.css';\n\nexport const malinaUrl = 'https://cdn.jsdelivr.net/npm/malinajs@0.6.52/malina.js';\n\nexport const markedUrl = 'https://cdn.jsdelivr.net/npm/marked@4.0.12/marked.min.js';\n\nexport const mermaidCdnUrl = 'https://cdn.jsdelivr.net/npm/mermaid@9.1.3/dist/mermaid.min.js';\n\nexport const monacoEmacsUrl = 'https://unpkg.com/monaco-emacs@0.3.0/dist/monaco-emacs.js';\n\nexport const monacoVimUrl = 'https://unpkg.com/monaco-vim@0.3.5/dist/monaco-vim.js';\n\nexport const mustacheUrl = 'https://cdn.jsdelivr.net/npm/mustache@4.2.0/mustache.min.js';\n\nexport const nomnomlCdnUrl = 'https://cdn.jsdelivr.net/npm/nomnoml@1.4.0/dist/nomnoml.min.js';\n\nexport const normalizeCssUrl = 'https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css';\n\nexport const nunjucksBaseUrl = 'https://cdn.jsdelivr.net/npm/nunjucks@3.2.3/browser/';\n\nexport const opalBaseUrl = 'https://cdn.opalrb.com/opal/1.4.1/';\n\nexport const parinferUrl =\n  'https://cdn.jsdelivr.net/npm/@chrisoakman/parinfer@3.13.1/parinfer.min.js';\n\nexport const pintoraUrl =\n  'https://cdn.jsdelivr.net/npm/@pintora/standalone@0.1.0/lib/pintora-standalone.umd.min.js';\n\nexport const plotlyCdnUrl = 'https://cdn.jsdelivr.net/npm/plotly.js@2.9.0/dist/plotly.min.js';\n\nexport const postcssImportUrlUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/postcss-import-url@0.1.2/dist/postcss-import-url.js';\n\nexport const prettierBaseUrl = 'https://cdn.jsdelivr.net/npm/prettier@2.5.1/';\n\nexport const prettierPhpUrl =\n  'https://cdn.jsdelivr.net/npm/@prettier/plugin-php@0.18.0/standalone.js';\n\nexport const prismBaseUrl = 'https://cdn.jsdelivr.net/npm/prismjs@1.26.0/components/';\n\nexport const pyodideBaseUrl = 'https://cdn.jsdelivr.net/pyodide/v0.18.1/full/';\n\nexport const qrcodeUrl = 'https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js';\n\nexport const quillEditorCdnBaseUrl = 'https://cdn.jsdelivr.net/npm/quill@2.0.0-dev.4/dist';\n\nexport const quillHtmlEditUrl =\n  'https://cdn.jsdelivr.net/npm/quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js';\n\nexport const quillBlotFormaterUrl =\n  'https://cdn.jsdelivr.net/npm/quill-blot-formatter@1.0.5/dist/quill-blot-formatter.min.js';\n\nexport const quillBetterTableBaseUrl =\n  'https://cdn.jsdelivr.net/npm/quill-better-table@1.2.10/dist';\n\nexport const requireUrl = 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js';\n\nexport const rescriptCompilerUrl = 'https://cdn.rescript-lang.org/v9.1.2/compiler.js';\n\nexport const rescriptReactUrl = 'https://cdn.rescript-lang.org/v9.1.2/%40rescript/react/cmij.js';\n\nexport const rescriptStdLibBaseUrl = 'https://cdn.jsdelivr.net/npm/@rescript/std@9.1.3/lib/es6/';\n\nexport const resetCssUrl = 'https://cdn.jsdelivr.net/npm/reset-css@5.0.1/reset.min.css';\n\nexport const riotBaseUrl = 'https://cdn.jsdelivr.net/npm/riot@6.1.2/';\n\nexport const snackbarUrl =\n  'https://cdn.jsdelivr.net/npm/@snackbar/core@1.7.0/dist/snackbar.min.css';\n\nexport const spacingJsUrl = 'https://cdn.jsdelivr.net/npm/spacingjs@1.0.7/dist/bundle.min.js';\n\nexport const sqlFormatterUrl =\n  'https://cdn.jsdelivr.net/npm/sql-formatter@4.0.2/dist/sql-formatter.min.js';\n\nexport const sqljsBaseUrl = 'https://cdn.jsdelivr.net/npm/sql.js@1.6.2/dist/';\n\nexport const stencilUrl =\n  'https://cdn.jsdelivr.net/npm/@stencil/core@2.13.0/compiler/stencil.min.js';\n\nexport const svgbobWasmCdnUrl =\n  'https://cdn.jsdelivr.net/npm/svgbob-wasm@0.4.1-a0/svgbob_wasm_bg.wasm';\n\nexport const tagifyBaseUrl = 'https://cdn.jsdelivr.net/npm/@yaireo/tagify@4.9.6/dist/';\n\nexport const tailwindcssUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/tailwindcss-browser-plugin@0.3.2/dist/tailwindcss.umd.min.js';\n\nexport const tauPrologBaseUrl = 'https://cdn.jsdelivr.net/npm/tau-prolog@0.3.2/modules/';\n\nexport const twigUrl = 'https://cdn.jsdelivr.net/npm/twig@1.15.4/twig.min.js';\n\nexport const typescriptUrl = 'https://cdn.jsdelivr.net/npm/typescript@4.5.5/lib/typescript.min.js';\n\nexport const uniterUrl = 'https://cdn.jsdelivr.net/npm/uniter@2.17.0/dist/uniter.js';\n\nexport const vegaCdnUrl = 'https://cdn.jsdelivr.net/npm/vega@5.21.0/build/vega.min.js';\n\nexport const vegaLiteCdnUrl = 'https://cdn.jsdelivr.net/npm/vega-lite@5.2.0/build/vega-lite.min.js';\n\nexport const vueSfcLoaderCdnBaseUrl = 'https://cdn.jsdelivr.net/npm/vue3-sfc-loader@0.8.4/dist/';\n\nexport const wabtjsUrl = 'https://cdn.jsdelivr.net/npm/wabt@1.0.26/index.js';\n\nexport const waveDromBaseUrl = 'https://cdn.jsdelivr.net/npm/wavedrom@2.9.0/';\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const lightningcss: ProcessorSpecs = {\n  name: 'lightningcss',\n  title: 'Lightning CSS',\n  isPostcssPlugin: false,\n  compiler: {\n    url: vendorsBaseUrl + 'lightningcss/lightningcss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-lightningcss-compiler.js}}');\n      return (self as any).createLightningcssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const postcss: ProcessorSpecs = {\n  name: 'postcss',\n  title: 'Processors:',\n  isPostcssPlugin: false,\n  compiler: {\n    url: vendorsBaseUrl + 'postcss/postcss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-postcss-compiler.js}}');\n      return (self as any).createPostcssCompiler();\n    },\n  },\n  editor: 'style',\n  hidden: true,\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { postcssImportUrlUrl, tailwindcssUrl, vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\nexport const autoprefixer: ProcessorSpecs = {\n  name: 'autoprefixer',\n  title: 'Autoprefixer',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'autoprefixer/autoprefixer.js',\n    factory: (config) =>\n      (self as any).autoprefixer.autoprefixer({\n        ...getLanguageCustomSettings('autoprefixer', config),\n      }),\n  },\n  editor: 'style',\n};\n\nexport const cssnano: ProcessorSpecs = {\n  name: 'cssnano',\n  title: 'cssnano',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'cssnano/cssnano.js',\n    factory: () => {\n      const nanoPlugins = (self as any).cssnano.cssnanoPresetDefault().plugins;\n      const postcssPlugins = [];\n      for (const plugin of nanoPlugins) {\n        const [processor, opts] = plugin;\n        if (\n          typeof opts === 'undefined' ||\n          (typeof opts === 'object' && !opts.exclude) ||\n          (typeof opts === 'boolean' && opts === true)\n        ) {\n          postcssPlugins.push(processor(opts));\n        }\n      }\n      return postcssPlugins;\n    },\n  },\n  editor: 'style',\n};\n\nexport const postcssImportUrl: ProcessorSpecs = {\n  name: 'postcssImportUrl',\n  title: 'Import Url',\n  isPostcssPlugin: true,\n  compiler: {\n    url: postcssImportUrlUrl,\n    factory: (config) =>\n      (self as any).postcssImportUrl({\n        ...getLanguageCustomSettings('postcssImportUrl', config),\n      }),\n  },\n  editor: 'style',\n  hidden: true,\n};\n\nexport const postcssPresetEnv: ProcessorSpecs = {\n  name: 'postcssPresetEnv',\n  title: 'Preset Env',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'postcss-preset-env/postcss-preset-env.js',\n    factory: (config) =>\n      (self as any).postcssPresetEnv.postcssPresetEnv({\n        autoprefixer: false,\n        ...getLanguageCustomSettings('postcssPresetEnv', config),\n      }),\n  },\n  editor: 'style',\n};\n\nexport const purgecss: ProcessorSpecs = {\n  name: 'purgecss',\n  title: 'PurgeCSS',\n  isPostcssPlugin: true,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'purgecss/purgecss.js',\n    factory: (config, _baseUrl, options) =>\n      (self as any).purgecss.purgecss({\n        ...getLanguageCustomSettings('purgecss', config),\n        content: [\n          {\n            raw: `<template>${options.html}\\n<script>${config.script.content}</script></template>`,\n            extension: 'html',\n          },\n        ],\n      }),\n  },\n  editor: 'style',\n};\n\nexport const tailwindcss: ProcessorSpecs = {\n  name: 'tailwindcss',\n  title: 'Tailwind CSS',\n  isPostcssPlugin: true,\n  needsHTML: true,\n  compiler: {\n    url: tailwindcssUrl,\n    factory: (config, _baseUrl, options) =>\n      (self as any).tailwindcss.tailwindcss({\n        ...(self as any).tailwindcss.defaultConfig,\n        ...getLanguageCustomSettings('tailwindcss', config),\n        content: [\n          {\n            raw: `<template>${options.html}\\n<script>${config.script.content}</script></template>`,\n            extension: 'html',\n          },\n        ],\n      }),\n  },\n  editor: 'style',\n};\n\nexport const tokencss: ProcessorSpecs = {\n  name: 'tokencss',\n  title: 'Token CSS',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'tokencss/tokencss.js',\n    factory: (config) => {\n      const customSettings = getLanguageCustomSettings('tokencss', config);\n      if (Object.keys(customSettings).length === 0) {\n        customSettings.$schema = 'https://tokencss.com/schema@0.0.1';\n        customSettings.extends = '@tokencss/core/preset';\n      }\n      const extendTokens = (base: any, tokens: any) => {\n        const result = JSON.parse(JSON.stringify(base));\n        Object.keys(tokens).forEach((key) => {\n          result[key] =\n            typeof tokens[key] !== 'object' || Array.isArray(tokens[key])\n              ? tokens[key]\n              : {\n                  ...result[key],\n                  ...tokens[key],\n                };\n        });\n        return result;\n      };\n      const tokensConfig = customSettings.extends?.includes('@tokencss/core/preset')\n        ? extendTokens((self as any).tokencss.preset, customSettings)\n        : customSettings;\n\n      return (self as any).tokencss.tokencss({ config: tokensConfig });\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const unocss: ProcessorSpecs = {\n  name: 'unocss',\n  title: 'UnoCSS',\n  isPostcssPlugin: false,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'unocss/unocss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-unocss-compiler.js}}');\n      return (self as any).createUnocssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const windicss: ProcessorSpecs = {\n  name: 'windicss',\n  title: 'Windi CSS',\n  isPostcssPlugin: false,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'windicss/windicss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-windicss-compiler.js}}');\n      return (self as any).createWindicssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import { Compiler, Language, CustomSettings, Config, Processor } from '../models';\nimport { getLanguageCustomSettings } from '../utils';\nimport { highlightjsUrl } from '../vendors';\nimport { languages } from './languages';\nimport { processors } from './processors';\n\nexport const getLanguageByAlias = (alias: string = ''): Language | undefined => {\n  if (!alias) return;\n  const aliasLowerCase = alias?.toLowerCase();\n  return languages.find(\n    (language) =>\n      language.name === aliasLowerCase ||\n      language.title.toLowerCase() === aliasLowerCase ||\n      language.extensions.map((ext) => ext.toLowerCase()).includes(aliasLowerCase),\n  )?.name;\n};\n\nexport const getLanguageTitle = (language: Language) => {\n  const languageSpecs = languages.find((lang) => lang.name === language);\n  return languageSpecs?.longTitle || languageSpecs?.title || language.toUpperCase();\n};\n\nexport const getLanguageEditorId = (alias: string = '') =>\n  languages.find((lang) => lang.name === getLanguageByAlias(alias))?.editor;\n\nexport const getLanguageExtension = (alias: string = '') =>\n  languages.find((lang) => lang.name === getLanguageByAlias(alias))?.extensions[0];\n\nexport const getLanguageSpecs = (alias: string = '') =>\n  languages.find((lang) => lang.name === getLanguageByAlias(alias));\n\nexport const getLanguageCompiler = (alias: string = ''): Compiler | undefined => {\n  const languageSpecs = getLanguageSpecs(alias);\n  let compiler = languageSpecs?.compiler;\n  if (typeof compiler === 'string') {\n    compiler = getLanguageCompiler(compiler);\n  }\n  return compiler;\n};\n\nexport const mapLanguage = (language: Language): Language =>\n  getLanguageSpecs(language)?.editorLanguage || language;\n\nexport const languageIsEnabled = (language: Language, config: Config) => {\n  const lang = getLanguageByAlias(language);\n  if (!lang) return false;\n  if (!config.languages) return true;\n  return config.languages?.map(getLanguageByAlias).filter(Boolean).includes(lang);\n};\n\nexport const processorIsEnabled = (processor: Processor, config: Config) => {\n  if (!processors.map((p) => p.name).includes(processor)) return false;\n  if (!config.languages) return true;\n  return config.languages.includes(processor);\n};\n\nexport const processorIsActivated = (processor: Processor, config: Config) =>\n  config.processors.includes(processor);\n\n/**\n * returns a string with names of enabled processors/postcss plugins\n * for the supplied language (separated by hyphens)\n */\nexport const getActivatedProcessors = (language: Language, config: Config) => {\n  const editorId = getLanguageEditorId(language);\n  if (!editorId) return '';\n  return processors\n    .filter((p) => p.editor === editorId)\n    .map((p) => p.name)\n    .filter((p) => processorIsEnabled(p, config))\n    .filter((p) => processorIsActivated(p, config))\n    .join('-');\n};\n\nexport const escapeCode = (code: string, slash = true) =>\n  code\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\n    .replace(/`/g, '\\\\`')\n    .replace(/<\\/script>/g, '<\\\\/script>');\n\nexport const getCustomSettings = (\n  language: Language | Processor,\n  config: Config,\n): CustomSettings => {\n  const settings: CustomSettings = {\n    ...getLanguageCustomSettings(language, config),\n  };\n  if (getLanguageEditorId(language) === 'markup') {\n    settings.template = config.customSettings.template;\n  }\n  return settings;\n};\n\nexport const detectLanguage = async (code: string, languages: Language[]) => {\n  (window as any).HighlightJS =\n    (window as any).HighlightJS || (await import(highlightjsUrl)).default;\n  const result = (window as any).HighlightJS.highlightAuto(code, languages);\n  return {\n    language: result.language as Language,\n    secondBest: result.secondBest.language as Language,\n  };\n};\n\nexport { getLanguageCustomSettings };\n", "import { LanguageSpecs } from '../../models';\nimport { asciidocUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../utils';\n\nexport const asciidoc: LanguageSpecs = {\n  name: 'asciidoc',\n  title: 'AsciiDoc',\n  compiler: {\n    url: asciidocUrl,\n    factory: () => {\n      const asciidoctor = (window as any).Asciidoctor();\n      return async (code, { config }) =>\n        asciidoctor.convert(code, {\n          ...getLanguageCustomSettings('asciidoc', config),\n        });\n    },\n  },\n  extensions: ['adoc', 'asciidoc', 'asc'],\n  editor: 'markup',\n  preset: 'asciidoctor.css',\n};\n", "import { prettierBaseUrl, prettierPhpUrl, vendorsBaseUrl } from '../vendors';\n\nexport const prettierUrl = prettierBaseUrl + 'standalone.min.js';\nexport const parserPlugins = {\n  babel: prettierBaseUrl + 'parser-babel.js',\n  glimmer: prettierBaseUrl + 'parser-glimmer.js',\n  html: prettierBaseUrl + 'parser-html.js',\n  markdown: prettierBaseUrl + 'parser-markdown.js',\n  postcss: prettierBaseUrl + 'parser-postcss.js',\n  php: prettierPhpUrl,\n  pug: vendorsBaseUrl + 'prettier/parser-pug.js',\n};\n", "import { LanguageSpecs } from '../../models';\nimport { babelUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const babel: LanguageSpecs = {\n  name: 'babel',\n  title: 'Babel',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: babelUrl,\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).Babel.transform(code, {\n          filename: 'script.tsx',\n          presets: [['env', { modules: false }], 'typescript', 'react'],\n          ...getLanguageCustomSettings('babel', config),\n        }).code,\n  },\n  extensions: ['es', 'babel'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const css: LanguageSpecs = {\n  name: 'css',\n  title: 'CSS',\n  info: false,\n  parser: {\n    name: 'css',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['css'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const haml: LanguageSpecs = {\n  name: 'haml',\n  title: 'Haml',\n  compiler: {\n    url: vendorsBaseUrl + 'clientside-haml-js/haml.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-haml-compiler.js}}');\n      return (self as any).createHamlCompiler();\n    },\n  },\n  extensions: ['haml'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const html: LanguageSpecs = {\n  name: 'html',\n  title: 'HTML',\n  info: false,\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['html', 'htm'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const javascript: LanguageSpecs = {\n  name: 'javascript',\n  title: 'JS',\n  longTitle: 'JavaScript',\n  info: false,\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['js'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const jsx: LanguageSpecs = {\n  name: 'jsx',\n  title: 'JSX',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'typescript',\n  extensions: ['jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const tsx: LanguageSpecs = {\n  name: 'tsx',\n  title: 'TSX',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'typescript',\n  extensions: ['tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const less: LanguageSpecs = {\n  name: 'less',\n  title: 'Less',\n  parser: {\n    name: 'less',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'less/less.js',\n    factory:\n      () =>\n      async (code, { config }) =>\n        (\n          await (window as any).less.render(code, {\n            ...getLanguageCustomSettings('less', config),\n          })\n        ).css,\n  },\n  extensions: ['less'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { markedUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const markdown: LanguageSpecs = {\n  name: 'markdown',\n  title: 'Markdown',\n  parser: {\n    name: 'markdown',\n    pluginUrls: [parserPlugins.markdown, parserPlugins.html],\n  },\n  compiler: {\n    url: markedUrl,\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).marked.parse(code, {\n          ...getLanguageCustomSettings('markdown', config),\n        }),\n  },\n  extensions: ['md', 'markdown', 'mdown', 'mkdn'],\n  editor: 'markup',\n  preset: 'github-markdown-css',\n};\n", "import { Config, Language, CompileOptions } from '../models';\n\nexport const compileInCompiler = async (\n  content: string,\n  language: Language | undefined,\n  config: Config,\n  options: CompileOptions = {},\n  worker: Worker = self as unknown as Worker,\n): Promise<string> =>\n  new Promise((resolve) => {\n    if (!content || !language || !config) {\n      return resolve(content || '');\n    }\n    const handler = async function (ev: MessageEvent) {\n      const message = ev.data.payload;\n      if (\n        ev.data.trigger === 'compileInCompiler' &&\n        message?.content === content &&\n        message?.language === language\n      ) {\n        worker.removeEventListener('message', handler);\n        resolve(message.compiled);\n      }\n    };\n    worker.addEventListener('message', handler);\n    worker.postMessage({\n      type: 'compileInCompiler',\n      payload: { content, language, config, options },\n    });\n  });\n", "import type { CompilerFunction, LanguageSpecs } from '../../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { compileInCompiler } from '../../compiler/compile-in-compiler';\nimport { escapeCode, getLanguageCustomSettings } from '../../utils';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const runOutsideWorker: CompilerFunction = async (code: string, { config, worker }) =>\n  new Promise(async (resolve) => {\n    if (!code) return resolve('');\n    const [mdx, { default: remarkGfm }] = await Promise.all([\n      import(vendorsBaseUrl + 'mdx/mdx.js'),\n      import(vendorsBaseUrl + 'remark-gfm/remark-gfm.js'),\n    ]);\n\n    const compiled = (\n      await mdx.compile(code, {\n        remarkPlugins: [remarkGfm],\n        ...getLanguageCustomSettings('mdx', config),\n      })\n    ).value;\n\n    // TODO: improve this\n    const removeComponentDeclaration = (str: string) =>\n      str\n        .replace(/, {[^}]*} = _components/g, '')\n        .replace(/const {[^:]*} = props.components[^;]*;/g, '');\n\n    const jsx = removeComponentDeclaration(compiled);\n    const result = `import React from \"react\";\nimport ReactDOM from \"react-dom\";\n${escapeCode(jsx, false)}\nReactDOM.render(<MDXContent />, document.body);\n`;\n    const js = await compileInCompiler(result, 'jsx', config, {}, worker);\n    resolve(`<script type=\"module\">${js}</script>`);\n  });\n\nexport const mdx: LanguageSpecs = {\n  name: 'mdx',\n  title: 'MDX',\n  parser: {\n    name: 'markdown',\n    pluginUrls: [parserPlugins.markdown, parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    runOutsideWorker,\n    compiledCodeLanguage: 'javascript',\n    imports: {\n      'react/jsx-runtime': 'https://esm.sh/react/jsx-runtime',\n    },\n  },\n  extensions: ['mdx'],\n  editor: 'markup',\n  editorLanguage: 'markdown',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const pug: LanguageSpecs = {\n  name: 'pug',\n  title: 'Pug',\n  parser: {\n    name: 'pug',\n    pluginUrls: [parserPlugins.pug],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'pug/pug.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-pug-compiler.js}}');\n      return (self as any).createPugCompiler();\n    },\n  },\n  extensions: ['pug', 'jade'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const scss: LanguageSpecs = {\n  name: 'scss',\n  title: 'SCSS',\n  parser: {\n    name: 'scss',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'sass/sass.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-scss-compiler.js}}');\n      return (self as any).createScssCompiler();\n    },\n  },\n  extensions: ['scss'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\n\nexport const sass: LanguageSpecs = {\n  name: 'sass',\n  title: 'Sass',\n  compiler: 'scss',\n  extensions: ['sass'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const svelte: LanguageSpecs = {\n  name: 'svelte',\n  title: 'Svelte',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'svelte/svelte-compiler.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-svelte-compiler.js}}');\n      return (self as any).createSvelteCompiler();\n    },\n  },\n  extensions: ['svelte'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const stylus: LanguageSpecs = {\n  name: 'stylus',\n  title: 'Stylus',\n  compiler: {\n    url: vendorsBaseUrl + 'stylus/stylus.min.js',\n    factory: () => async (code) => (window as any).stylus.render(code),\n  },\n  extensions: ['styl'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { typescriptUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const typescriptOptions = {\n  target: 'es2015',\n  jsx: 'react',\n  allowUmdGlobalAccess: true,\n  esModuleInterop: true,\n};\n\nexport const typescript: LanguageSpecs = {\n  name: 'typescript',\n  title: 'TS',\n  longTitle: 'TypeScript',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: typescriptUrl,\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n  },\n  extensions: ['ts', 'typescript'],\n  editor: 'script',\n};\n", "import { LanguageSpecs } from '../../models';\nimport { vueSfcLoaderCdnBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst loaderCdnUrl = vueSfcLoaderCdnBaseUrl + 'vue3-sfc-loader.min.js';\nconst vueCdnUrl = 'https://cdn.jsdelivr.net/npm/vue@3';\n\nexport const vue: LanguageSpecs = {\n  name: 'vue',\n  title: 'Vue 3',\n  longTitle: 'Vue 3 SFC',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-vue-compiler.js}}');\n      return (self as any).createVueCompiler();\n    },\n    scripts: [vueCdnUrl, loaderCdnUrl],\n    imports: {\n      vue: vueCdnUrl + '/dist/vue.runtime.esm-browser.prod.js',\n    },\n  },\n  extensions: ['vue', 'vue3'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vueSfcLoaderCdnBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst loaderCdnUrl = vueSfcLoaderCdnBaseUrl + 'vue2-sfc-loader.js';\nconst vueCdnUrl = 'https://cdn.jsdelivr.net/npm/vue@2';\n\nexport const vue2: LanguageSpecs = {\n  name: 'vue2',\n  title: 'Vue 2',\n  longTitle: 'Vue 2 SFC',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-vue-compiler.js}}');\n      return (self as any).createVue2Compiler();\n    },\n    scripts: [vueCdnUrl, loaderCdnUrl],\n    imports: {\n      vue: vueCdnUrl + '/dist/vue.runtime.esm-browser.prod.js',\n    },\n  },\n  extensions: ['vue2'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { stencilUrl, vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const stencil: LanguageSpecs = {\n  name: 'stencil',\n  title: 'Stencil',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: stencilUrl,\n    factory:\n      () =>\n      async (code, { config }) => {\n        const result = await (window as any).stencil.transpile(code, {\n          // TranspileOptions interface\n          // https://github.com/ionic-team/stencil/blob/1b8b7ec21f2622d05c9aafa417b2abdd4f2597a4/src/declarations/stencil-public-compiler.ts#L2311\n          sourceMap: false,\n          target: 'es2019',\n          ...getLanguageCustomSettings('stencil', config),\n        });\n        return result.code;\n      },\n    types: {\n      '@stencil/core': {\n        url: vendorsBaseUrl + 'types/stencil-core.d.ts',\n        declareAsModule: false,\n      },\n    },\n  },\n  extensions: ['stencil.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { coffeeScriptUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\nexport const coffeescript: LanguageSpecs = {\n  name: 'coffeescript',\n  title: 'Coffee',\n  longTitle: 'CoffeeScript',\n  compiler: {\n    url: coffeeScriptUrl,\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).CoffeeScript.compile(code, {\n          bare: true,\n          ...getLanguageCustomSettings('coffeescript', config),\n        }),\n  },\n  extensions: ['coffee'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\nexport const livescript: LanguageSpecs = {\n  name: 'livescript',\n  title: 'LiveScript',\n  compiler: {\n    url: vendorsBaseUrl + 'livescript/livescript-min.js',\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).require('livescript').compile(code, {\n          bare: true,\n          ...getLanguageCustomSettings('livescript', config),\n        }),\n    scripts: [vendorsBaseUrl + 'livescript/prelude-browser-min.js'],\n  },\n  extensions: ['ls'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { assemblyscriptLoaderUrl, vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const assemblyscript: LanguageSpecs = {\n  name: 'assemblyscript',\n  title: 'AS',\n  longTitle: 'AssemblyScript',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-assemblyscript-compiler.js}}');\n      return (self as any).createAssemblyscriptCompiler();\n    },\n    scripts: ({ baseUrl }) => [\n      assemblyscriptLoaderUrl,\n      baseUrl + '{{hash:lang-assemblyscript-script.js}}',\n    ],\n    scriptType: 'application/wasm-uint8',\n    compiledCodeLanguage: 'wat',\n    types: {\n      assemblyscript: {\n        url: vendorsBaseUrl + 'types/assemblyscript.d.ts',\n        declareAsModule: false,\n        autoload: true,\n      },\n    },\n  },\n  extensions: ['as', 'ts'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { brythonBaseUrl } from '../../vendors';\nimport { escapeCode, getLanguageCustomSettings } from '../../utils';\n\nconst brythonUrl = brythonBaseUrl + 'brython.min.js';\nconst stdlibUrl = brythonBaseUrl + 'brython_stdlib.js';\n\nexport const python: LanguageSpecs = {\n  name: 'python',\n  title: 'Python',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ compiled, config }) => {\n      const { autoloadStdlib, ...options } = getLanguageCustomSettings('python', config);\n      const importsPattern = /^(?:from[ ]+(\\S+)[ ]+)?import[ ]+(\\S+)(?:[ ]+as[ ]+\\S+)?[ ]*$/gm;\n      const stdlib = autoloadStdlib !== false && compiled.match(importsPattern) ? [stdlibUrl] : [];\n      const loader = `window.addEventListener(\"load\", () => {brython(${JSON.stringify(options)})})`;\n      const loaderUrl = 'data:text/plain;base64,' + btoa(loader);\n      const compiledCode = `window.addEventListener(\"load\", () => {\n        const content = __BRYTHON__.python_to_js(\\`${escapeCode(compiled)}\\`);\n        parent.postMessage({type: \"compiled\", payload: {language: \"python\", content}}, \"*\");\n      });`;\n      const compiledCodeUrl = 'data:text/plain;base64,' + btoa(compiledCode);\n      return [brythonUrl, ...stdlib, loaderUrl, compiledCodeUrl];\n    },\n    scriptType: 'text/python',\n  },\n  extensions: ['py'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { opalBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nconst getImports = (code: string, requireMap: { [mod: string]: string } = {}) =>\n  Array.from(\n    new Set(\n      [...code.matchAll(new RegExp(/^\\s*self\\.\\$require\\(\"(\\S+)\"\\);/gm))]\n        .map((arr) => arr[1])\n        .map((mod) => mod.split('/')[0])\n        .filter((mod) => requireMap.hasOwnProperty(mod) || mod !== 'opal') // already loaded\n        .map((mod) => requireMap[mod] || `${opalBaseUrl + mod}.min.js`),\n    ),\n  );\n\nexport const ruby: LanguageSpecs = {\n  name: 'ruby',\n  title: 'Ruby',\n  compiler: {\n    url: opalBaseUrl + 'opal.min.js',\n    factory: () => {\n      importScripts(opalBaseUrl + 'opal-parser.min.js');\n      // eslint-disable-next-line camelcase\n      (self as any).Opal.config.unsupported_features_severity = 'ignore';\n      (self as any).Opal.load('opal-parser');\n      return async (code, { config }) => {\n        const { autoloadStdlib, requireMap, ...options } = getLanguageCustomSettings(\n          'ruby',\n          config,\n        );\n        return (self as any).Opal.compile(code, options);\n      };\n    },\n    scripts: ({ compiled, config }) => {\n      const { autoloadStdlib, requireMap } = getLanguageCustomSettings('ruby', config);\n      const imports = getImports(compiled, requireMap);\n      const stdlib = autoloadStdlib !== false ? imports : [];\n      return [opalBaseUrl + 'opal.min.js', ...stdlib];\n    },\n  },\n  extensions: ['rb'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { uniterUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const php: LanguageSpecs = {\n  name: 'php',\n  title: 'PHP',\n  parser: {\n    name: 'php',\n    pluginUrls: [parserPlugins.php],\n  },\n  compiler: {\n    factory: () => async (code) => {\n      code = code.trim();\n      if (code.startsWith('<?php')) {\n        code = code.replace('<?php', '/* <?php */');\n        if (code.endsWith('?>')) {\n          code = code.replace('?>', '/* ?> */');\n        }\n      }\n      return code;\n    },\n    scripts: [uniterUrl],\n    deferScripts: true,\n    scriptType: 'text/x-uniter-php',\n    compiledCodeLanguage: 'php',\n  },\n  extensions: ['php'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const perl: LanguageSpecs = {\n  name: 'perl',\n  title: 'Perl',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [\n      vendorsBaseUrl + 'perlito/perlito5.min.js',\n      baseUrl + '{{hash:lang-perl-script.js}}',\n    ],\n    scriptType: 'text/perl',\n  },\n  extensions: ['pl', 'pm'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { luaUrl, vendorsBaseUrl } from '../../vendors';\n\nconst luaFmtUrl = vendorsBaseUrl + 'lua-fmt/lua-fmt.js';\n\nexport const lua: LanguageSpecs = {\n  name: 'lua',\n  title: 'Lua',\n  formatter: {\n    factory: () => {\n      (self as any).importScripts(luaFmtUrl);\n      return async (code, cursorOffset) => ({\n        formatted: (self as any).luaFmt.formatText(code),\n        cursorOffset,\n      });\n    },\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: [luaUrl],\n    scriptType: 'application/lua',\n    compiledCodeLanguage: 'lua',\n  },\n  extensions: ['lua'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { jsclUrl, parinferUrl } from '../../vendors';\n\nexport const parenFormatter = () => {\n  const url = parinferUrl;\n  (self as any).importScripts(url);\n  return async (value: string) => ({\n    formatted: (window as any).parinfer.parenMode(value).text,\n    cursorOffset: 0,\n  });\n};\n\nexport const commonlisp: LanguageSpecs = {\n  name: 'commonlisp',\n  title: 'Lisp',\n  longTitle: 'Common Lisp',\n  formatter: {\n    factory: parenFormatter,\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [jsclUrl, baseUrl + '{{hash:lang-commonlisp-script.js}}'],\n    scriptType: 'text/commonlisp',\n    compiledCodeLanguage: 'commonlisp',\n    inlineScript: `\n\n    `,\n  },\n  extensions: ['lisp', 'common-lisp'],\n  editor: 'script',\n  editorLanguage: 'scheme',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { biwaschemeUrl } from '../../vendors';\nimport { parenFormatter } from '../commonlisp';\n\nexport const scheme: LanguageSpecs = {\n  name: 'scheme',\n  title: 'Scheme',\n  formatter: {\n    factory: parenFormatter,\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: [biwaschemeUrl],\n    scriptType: 'text/biwascheme',\n    compiledCodeLanguage: 'scheme',\n  },\n  extensions: ['scm'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const solid: LanguageSpecs = {\n  name: 'solid',\n  title: 'Solid',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['babel'],\n    url: vendorsBaseUrl + 'babel-preset-solid/babel-preset-solid.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-solid-compiler.js}}');\n      return (self as any).createSolidCompiler();\n    },\n    types: {\n      'solid-js': {\n        url: vendorsBaseUrl + 'types/solid-js.d.ts',\n        declareAsModule: false,\n      },\n    },\n  },\n  extensions: ['solid.jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const solidTsx: LanguageSpecs = {\n  name: 'solid.tsx',\n  title: 'Solid (TS)',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'solid',\n  extensions: ['solid.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\n\nexport const pyodide: LanguageSpecs = {\n  name: 'pyodide',\n  title: 'Pyodide',\n  longTitle: 'Python (Pyodide)',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-python-pyodide-script.js}}'],\n    liveReload: true,\n    scriptType: 'text/python',\n    compiledCodeLanguage: 'python',\n  },\n  extensions: ['py3'],\n  editor: 'script',\n  editorLanguage: 'python',\n  largeDownload: true,\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { liquidJsUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const liquid: LanguageSpecs = {\n  name: 'liquid',\n  title: 'Liquid',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: liquidJsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-liquid-compiler.js}}');\n      return (self as any).createLiquidCompiler();\n    },\n  },\n  extensions: ['liquid', 'liquidjs'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { ejsUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const ejs: LanguageSpecs = {\n  name: 'ejs',\n  title: 'EJS',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: ejsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-ejs-compiler.js}}');\n      return (self as any).createEjsCompiler();\n    },\n  },\n  extensions: ['ejs'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { handlebarsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst url = handlebarsBaseUrl + 'handlebars.min.js';\nexport const runtimeUrl = handlebarsBaseUrl + 'handlebars.runtime.min.js';\n\nexport const handlebars: LanguageSpecs = {\n  name: 'handlebars',\n  title: 'Handlebars',\n  parser: {\n    name: 'glimmer',\n    pluginUrls: [parserPlugins.glimmer],\n  },\n  compiler: {\n    url,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-handlebars-compiler.js}}');\n      return (self as any).createHandlebarsCompiler();\n    },\n  },\n  extensions: ['hbs', 'handlebars'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { dotUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const dot: LanguageSpecs = {\n  name: 'dot',\n  title: 'doT',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: dotUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-dot-compiler.js}}');\n      return (self as any).createDotCompiler();\n    },\n  },\n  extensions: ['dot'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { nunjucksBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst url = nunjucksBaseUrl + 'nunjucks.min.js';\nexport const runtimeUrl = nunjucksBaseUrl + 'nunjucks-slim.min.js';\n\nexport const nunjucks: LanguageSpecs = {\n  name: 'nunjucks',\n  title: 'Nunjucks',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-nunjucks-compiler.js}}');\n      return (self as any).createNunjucksCompiler();\n    },\n  },\n  extensions: ['njk'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { go2jsBaseUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nexport const go: LanguageSpecs = {\n  name: 'go',\n  title: 'Go',\n  formatter: {\n    factory: () => {\n      const url = go2jsBaseUrl + '/index.js';\n      importScripts(url);\n      return async (value: string) => ({\n        formatted: await (window as any).go2js.format(value, go2jsBaseUrl),\n        cursorOffset: 0,\n      });\n    },\n  },\n  compiler: {\n    url: go2jsBaseUrl + '/index.js',\n    factory: () => async (code) => {\n      if (!code) return '';\n      try {\n        const jsCode = await (window as any).go2js.compile(code, go2jsBaseUrl);\n        return jsCode;\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error(err);\n        return '';\n      }\n    },\n  },\n  extensions: ['go', 'golang'],\n  editor: 'script',\n};\n", "import { CompilerFunction, LanguageFormatter, LanguageSpecs } from '../../models';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nexport const runOutsideWorker: CompilerFunction = async (code: string, { baseUrl, language }) => {\n  const { rescriptCompiler } = await import(baseUrl + '{{hash:lang-rescript-compiler-esm.js}}');\n  return rescriptCompiler(code, { baseUrl, language });\n};\n\nexport const formatterFactory: LanguageFormatter['factory'] = (baseUrl, language) => {\n  importScripts(baseUrl + '{{hash:lang-rescript-formatter.js}}');\n  return (self as any).createRescriptFormatter(baseUrl, language);\n};\n\nexport const rescript: LanguageSpecs = {\n  name: 'rescript',\n  title: 'ReScript',\n  formatter: {\n    factory: formatterFactory,\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    runOutsideWorker,\n    scriptType: 'module',\n  },\n  extensions: ['res', 'resi'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { formatterFactory as rescriptFormatterFactory } from '../rescript';\n\nexport const reason: LanguageSpecs = {\n  name: 'reason',\n  title: 'Reason',\n  formatter: {\n    factory: rescriptFormatterFactory,\n  },\n  compiler: 'rescript',\n  extensions: ['re', 'rei'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\n\nexport const ocaml: LanguageSpecs = {\n  name: 'ocaml',\n  title: 'OCaml',\n  compiler: 'rescript',\n  extensions: ['ml', 'mli'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "/* eslint-disable camelcase */\nimport type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl, wabtjsUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nconst formatterUrl = vendorsBaseUrl + 'wast-refmt/wast-refmt.js';\nexport const scriptType = 'application/wasm-uint8';\n\nexport const wat: LanguageSpecs = {\n  name: 'wat',\n  title: 'WAT',\n  longTitle: 'WebAssembly Text',\n  formatter: {\n    factory: () => {\n      importScripts(formatterUrl);\n      return async (value: string) => {\n        let formatted = value;\n        try {\n          formatted = (self as any).wastRefmt.format(value);\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.warn('failed parsing WAT', error);\n        }\n        return {\n          formatted,\n          cursorOffset: 0,\n        };\n      };\n    },\n  },\n  compiler: {\n    url: wabtjsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-wat-compiler.js}}');\n      return (self as any).createWatCompiler();\n    },\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-wat-script.js}}'],\n    scriptType,\n    compiledCodeLanguage: 'Binary',\n  },\n  extensions: ['wat', 'wast', 'webassembly', 'wasm'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { riotBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst compilerCdnUrl = riotBaseUrl + 'riot+compiler.min.js';\nconst cdnUrl = riotBaseUrl + 'riot.min.js';\n\nexport const riot: LanguageSpecs = {\n  name: 'riot',\n  title: 'Riot.js',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: compilerCdnUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-riot-compiler.js}}');\n      return (self as any).createRiotCompiler();\n    },\n    scripts: [cdnUrl],\n    scriptType: 'module',\n  },\n  extensions: ['riot', 'riotjs'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { sqlFormatterUrl, sqljsBaseUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nexport const scriptType = 'application/json';\n\nexport const sql: LanguageSpecs = {\n  name: 'sql',\n  title: 'SQL',\n  formatter: {\n    factory: () => {\n      importScripts(sqlFormatterUrl);\n      return async (value: string) => ({\n        formatted: await (self as any).sqlFormatter.format(value, { linesBetweenQueries: 2 }),\n        cursorOffset: 0,\n      });\n    },\n  },\n  compiler: {\n    url: sqljsBaseUrl + 'sql-wasm.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-sql-compiler.js}}');\n      return (self as any).createSqlCompiler();\n    },\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-sql-script.js}}'],\n    scriptType,\n    compiledCodeLanguage: 'json',\n  },\n  extensions: ['sql', 'sqlite', 'sqlite3'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { typescriptOptions } from '../typescript';\nimport { getLanguageCustomSettings } from '../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const reactNativeWebUrl = vendorsBaseUrl + 'react-native-web/react-native-web.js';\n\nexport const reactNative: LanguageSpecs = {\n  name: 'react-native',\n  title: 'RN',\n  longTitle: 'React Native',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['typescript'],\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n    imports: {\n      react: reactNativeWebUrl,\n      'react-native': reactNativeWebUrl,\n    },\n  },\n  extensions: ['react-native.jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { typescriptOptions } from '../typescript';\nimport { getLanguageCustomSettings } from '../utils';\nimport { parserPlugins } from '../prettier';\nimport { reactNativeWebUrl } from './lang-react-native';\n\nexport const reactNativeTsx: LanguageSpecs = {\n  name: 'react-native-tsx',\n  title: 'RN (TSX)',\n  longTitle: 'React Native (TSX)',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['typescript'],\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n    imports: {\n      react: reactNativeWebUrl,\n      'react-native': reactNativeWebUrl,\n    },\n  },\n  extensions: ['react-native.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import { LanguageSpecs } from '../../models';\n\nexport const blockly: LanguageSpecs = {\n  name: 'blockly',\n  title: 'Blockly',\n  compiler: {\n    factory:\n      () =>\n      async (_code, { options }) =>\n        options?.blockly?.js || '',\n  },\n  extensions: ['blockly.xml', 'xml'],\n  editor: 'script',\n  editorLanguage: 'xml',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { twigUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const twig: LanguageSpecs = {\n  name: 'twig',\n  title: 'Twig',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: twigUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-twig-compiler.js}}');\n      return (self as any).createTwigCompiler();\n    },\n  },\n  extensions: ['twig'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { astroBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst compilerURL = astroBaseUrl + 'compiler.min.js';\n\nexport const astro: LanguageSpecs = {\n  name: 'astro',\n  title: 'Astro',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: compilerURL,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-astro-compiler.js}}');\n      return (self as any).createAstroCompiler();\n    },\n  },\n  extensions: ['astro'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const malina: LanguageSpecs = {\n  name: 'malina',\n  title: 'Malina.js',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-malina-compiler.js}}');\n      return (self as any).createMalinaCompiler();\n    },\n  },\n  extensions: ['xht'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const cdnUrl = vendorsBaseUrl + 'jscpp/JSCPP.es5.min.js';\n\nexport const cpp: LanguageSpecs = {\n  name: 'cpp',\n  title: 'C++',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [cdnUrl, baseUrl + '{{hash:lang-cpp-script.js}}'],\n    scriptType: 'text/cpp',\n    compiledCodeLanguage: 'cpp',\n  },\n  extensions: ['cpp', 'c', 'C', 'cp', 'cxx', 'c++', 'cppm', 'ixx', 'ii', 'hpp', 'h'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\n\nexport const julia: LanguageSpecs = {\n  name: 'julia',\n  title: 'Julia',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-julia-script.js}}'],\n    liveReload: true,\n    scriptType: 'text/julia',\n    compiledCodeLanguage: 'julia',\n  },\n  extensions: ['jl'],\n  editor: 'script',\n  largeDownload: true,\n};\n", "import type { LanguageSpecs } from '../../models';\n\nexport const clang: LanguageSpecs = {\n  name: 'clang',\n  title: 'Clang',\n  longTitle: 'C/C++ (Clang)',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-cpp-clang-script.js}}'],\n    scriptType: 'text/cpp',\n    compiledCodeLanguage: 'cpp',\n    liveReload: true,\n  },\n  extensions: [\n    'clang.cpp',\n    'clang',\n    'cpp',\n    'c',\n    'C',\n    'cp',\n    'cxx',\n    'c++',\n    'cppm',\n    'ixx',\n    'ii',\n    'hpp',\n    'h',\n  ],\n  editor: 'script',\n  editorLanguage: 'cpp',\n  largeDownload: true,\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { requireUrl } from '../../vendors';\n\nexport const tcl: LanguageSpecs = {\n  name: 'tcl',\n  title: 'Tcl',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [requireUrl, baseUrl + '{{hash:lang-tcl-script.js}}'],\n    scriptType: 'text/tcl',\n    compiledCodeLanguage: 'tcl',\n  },\n  extensions: ['tcl'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { tauPrologBaseUrl } from '../../vendors';\n\nexport const prolog: LanguageSpecs = {\n  name: 'prolog',\n  title: 'Prolog',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [\n      tauPrologBaseUrl + 'core.js',\n      tauPrologBaseUrl + 'charsio.js',\n      tauPrologBaseUrl + 'dom.js',\n      tauPrologBaseUrl + 'format.js',\n      tauPrologBaseUrl + 'js.js',\n      tauPrologBaseUrl + 'lists.js',\n      tauPrologBaseUrl + 'os.js',\n      tauPrologBaseUrl + 'promises.js',\n      tauPrologBaseUrl + 'random.js',\n      tauPrologBaseUrl + 'statistics.js',\n      baseUrl + '{{hash:lang-prolog-script.js}}',\n    ],\n    scriptType: 'text/prolog',\n    compiledCodeLanguage: 'prolog',\n  },\n  extensions: ['prolog.pl', 'prolog'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { clioBaseUrl } from '../../vendors';\n\nexport const clio: LanguageSpecs = {\n  name: 'clio',\n  title: 'Clio',\n  compiler: {\n    url: clioBaseUrl + 'compile.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-clio-compiler.js}}');\n      return (self as any).createClioCompiler();\n    },\n    scripts: [clioBaseUrl + 'exec.js'],\n  },\n  extensions: ['clio'],\n  editor: 'script',\n  editorLanguage: 'coffeescript',\n};\n", "import type { LanguageSpecs } from '../../models';\n\nexport const richtext: LanguageSpecs = {\n  name: 'richtext',\n  title: 'Rich Text',\n  longTitle: 'Rich Text Editor',\n  compiler: {\n    factory:\n      () =>\n      async (_code, { config }) =>\n        config.markup.content || '',\n    styles: ['{{hash:quill.css}}'],\n  },\n  extensions: ['rte', 'rte.html', 'rich'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import { CompilerFunction, LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const runOutsideWorker: CompilerFunction = async (code: string, { baseUrl, config }) => {\n  const { diagramsCompiler } = await import(baseUrl + '{{hash:lang-diagrams-compiler-esm.js}}');\n  return diagramsCompiler(code, { config });\n};\n\nexport const diagrams: LanguageSpecs = {\n  name: 'diagrams',\n  title: 'Diagrams',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code || '',\n    runOutsideWorker,\n  },\n  extensions: ['diagrams', 'diagram', 'graph', 'plt'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { imbaBaseUrl } from '../../vendors';\n\nexport const imba: LanguageSpecs = {\n  name: 'imba',\n  title: 'Imba',\n  compiler: {\n    url: imbaBaseUrl + 'compiler.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-imba-compiler.js}}');\n      return (self as any).createImbaCompiler();\n    },\n    imports: {\n      imba: imbaBaseUrl + 'imba.mjs',\n    },\n  },\n  extensions: ['imba'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { mustacheUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const mustache: LanguageSpecs = {\n  name: 'mustache',\n  title: 'Mustache',\n  parser: {\n    name: 'glimmer',\n    pluginUrls: [parserPlugins.glimmer],\n  },\n  compiler: {\n    url: mustacheUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-mustache-compiler.js}}');\n      return (self as any).createMustacheCompiler();\n    },\n  },\n  extensions: ['mustache'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { artTemplateUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const artTemplate: LanguageSpecs = {\n  name: 'art-template',\n  title: 'art',\n  longTitle: 'art-template',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: artTemplateUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-art-template-compiler.js}}');\n      return (self as any).createArtTemplateCompiler();\n    },\n  },\n  extensions: ['art', 'art-template'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import { LanguageSpecs } from '../models';\nimport { asciidoc } from './asciidoc';\nimport { babel } from './babel';\nimport { css } from './css';\nimport { haml } from './haml';\nimport { html } from './html';\nimport { javascript } from './javascript';\nimport { jsx, tsx } from './jsx';\nimport { less } from './less';\nimport { markdown } from './markdown';\nimport { mdx } from './mdx';\nimport { pug } from './pug';\nimport { scss, sass } from './scss';\nimport { svelte } from './svelte';\nimport { stylus } from './stylus';\nimport { typescript } from './typescript';\nimport { vue, vue2 } from './vue';\nimport { stencil } from './stencil';\nimport { coffeescript } from './coffeescript';\nimport { livescript } from './livescript';\nimport { assemblyscript } from './assemblyscript';\nimport { python } from './python';\nimport { ruby } from './ruby';\nimport { php } from './php';\nimport { perl } from './perl';\nimport { lua } from './lua';\nimport { scheme } from './scheme';\nimport { solid, solidTsx } from './solid';\nimport { pyodide } from './python-pyodide';\nimport { liquid } from './liquid';\nimport { ejs } from './ejs';\nimport { handlebars } from './handlebars';\nimport { dot } from './dot';\nimport { nunjucks } from './nunjucks';\nimport { go } from './go';\nimport { rescript } from './rescript';\nimport { reason } from './reason';\nimport { ocaml } from './ocaml';\nimport { wat } from './wat';\nimport { riot } from './riot';\nimport { sql } from './sql';\nimport { reactNative, reactNativeTsx } from './react-native';\nimport { blockly } from './blockly';\nimport { twig } from './twig';\nimport { astro } from './astro';\nimport { malina } from './malina';\nimport { commonlisp } from './commonlisp';\nimport { cpp } from './cpp';\nimport { julia } from './julia';\nimport { clang } from './cpp-clang';\nimport { tcl } from './tcl';\nimport { prolog } from './prolog';\nimport { clio } from './clio';\nimport { richtext } from './richtext';\nimport { diagrams } from './diagrams';\nimport { imba } from './imba';\nimport { mustache } from './mustache';\nimport { artTemplate } from './art-template';\n\nexport const languages: LanguageSpecs[] = [\n  html,\n  markdown,\n  mdx,\n  astro,\n  pug,\n  asciidoc,\n  haml,\n  mustache,\n  handlebars,\n  ejs,\n  nunjucks,\n  liquid,\n  dot,\n  twig,\n  artTemplate,\n  diagrams,\n  richtext,\n  css,\n  scss,\n  sass,\n  less,\n  stylus,\n  javascript,\n  babel,\n  typescript,\n  jsx,\n  tsx,\n  reactNative,\n  reactNativeTsx,\n  vue,\n  vue2,\n  svelte,\n  stencil,\n  solid,\n  solidTsx,\n  riot,\n  malina,\n  coffeescript,\n  livescript,\n  clio,\n  imba,\n  rescript,\n  reason,\n  ocaml,\n  python,\n  pyodide,\n  ruby,\n  go,\n  php,\n  cpp,\n  clang,\n  perl,\n  lua,\n  julia,\n  scheme,\n  commonlisp,\n  tcl,\n  assemblyscript,\n  wat,\n  sql,\n  prolog,\n  blockly,\n];\n", "import { CssPreset } from '../models';\nimport { githubMarkdownCss, normalizeCssUrl, resetCssUrl, vendorsBaseUrl } from '../vendors';\n\nexport const cssPresets: CssPreset[] = [\n  {\n    id: 'normalize.css',\n    name: 'Normalize.css',\n    url: normalizeCssUrl,\n  },\n  {\n    id: 'reset-css',\n    name: 'CSS reset',\n    url: resetCssUrl,\n  },\n  {\n    id: 'github-markdown-css',\n    name: 'github-markdown-css',\n    url: githubMarkdownCss,\n  },\n  {\n    id: 'asciidoctor.css',\n    name: 'Asciidoctor CSS',\n    url: vendorsBaseUrl + 'asciidoctor.css/asciidoctor.css',\n  },\n];\n", "import { languages, getLanguageByAlias, getLanguageEditorId } from '../languages';\nimport { EditorId, Language, Config } from '../models';\n\nexport interface SourceFile {\n  filename: string;\n  content: string;\n  language?: Language;\n  editorId?: EditorId;\n}\n\nexport interface FileData {\n  rawURL: string;\n  extension: Language;\n  startLine: number;\n  endLine: number;\n}\n\nexport const getValidUrl = (url: string) => {\n  try {\n    return url.startsWith('https://') ? new URL(url) : new URL('https://' + url);\n  } catch (error) {\n    return;\n  }\n};\n\nexport const populateConfig = (files: SourceFile[], params: { [key: string]: string }) => {\n  if (files.length === 0) return {};\n\n  // select files based on language in query params (e.g. ?html=index.html&js=script.js)\n  const languagesInParams = Object.keys(params).some(getLanguageByAlias);\n  if (languagesInParams) {\n    return Object.keys(params).reduce((output: Partial<Config>, param: string) => {\n      const language = getLanguageByAlias(param);\n      if (!language) return output;\n      const file = files.find((file) => file?.filename === params[param]);\n      if (!file) return output;\n\n      const editorId = getLanguageEditorId(language);\n      if (!editorId || output[editorId]) return output;\n\n      return {\n        ...output,\n        [editorId]: {\n          language,\n          content: file.content,\n        },\n      };\n    }, {} as Partial<Config>);\n  }\n\n  // select languages from files\n  const code = files\n    .map((file) => {\n      const extension = file.filename.split('.')[file.filename.split('.').length - 1];\n      const language: Language = file.language || getLanguageByAlias(extension) || 'html';\n      const editorId = file.editorId || getLanguageEditorId(language) || 'markup';\n      return {\n        ...file,\n        language,\n        editorId,\n      };\n    })\n    .sort((a, b) => {\n      if (\n        // put default files first\n        a.editorId === b.editorId &&\n        ((a.editorId === 'markup' && a.filename.toLowerCase().startsWith('index.')) ||\n          (a.editorId === 'style' && a.filename.toLowerCase().startsWith('style.')) ||\n          (a.editorId === 'script' && a.filename.toLowerCase().startsWith('script.')))\n      ) {\n        return -1;\n      }\n      if (\n        // put default files first\n        a.editorId === b.editorId &&\n        ((b.editorId === 'markup' && b.filename.toLowerCase().startsWith('index.')) ||\n          (b.editorId === 'style' && b.filename.toLowerCase().startsWith('style.')) ||\n          (b.editorId === 'script' && b.filename.toLowerCase().startsWith('script.')))\n      ) {\n        return 1;\n      }\n      if (\n        // put readme last\n        a.editorId === b.editorId &&\n        a.editorId === 'markup'\n      ) {\n        if (a.filename.toLowerCase().startsWith('readme')) return 1;\n        if (b.filename.toLowerCase().startsWith('readme')) return -1;\n      }\n      if (a.language === b.language) {\n        // if same language, sort by filename\n        return a.filename.localeCompare(b.filename);\n      }\n      return (\n        // then sort by language\n        languages.findIndex((language) => language.name === a.language) -\n        languages.findIndex((language) => language.name === b.language)\n      );\n    })\n    .reduce((output: Partial<Config>, file) => {\n      // tests\n      if (file.filename.toLowerCase().match(new RegExp('.(test|spec)\\\\.[jt]sx?'))) {\n        if (output.tests?.content) return output;\n        return {\n          ...output,\n          tests: {\n            language: file.language,\n            content: file.content,\n          },\n        };\n      }\n\n      // code\n      if (!file.editorId || output[file.editorId]) return output;\n      return {\n        ...output,\n        [file.editorId]: {\n          language: file.language,\n          content: file.content,\n        },\n      };\n    }, {} as Partial<Config>);\n\n  // extract external styles and scripts\n  const stylesheets: string[] = [];\n  const stylesFile = files.find((file) => file.filename === 'styles');\n  if (stylesFile?.content) {\n    try {\n      const urls: string[] = [];\n      const domparser = new DOMParser();\n      const doc = domparser.parseFromString(stylesFile.content, 'text/html');\n      doc.querySelectorAll<HTMLLinkElement>('link[rel=\"stylesheet\"]').forEach((stylesheet) => {\n        urls.push(stylesheet.href);\n      });\n      if (urls.length === 0) {\n        stylesFile.content\n          .trim()\n          .split('\\n')\n          .forEach((line) => {\n            urls.push(line);\n          });\n      }\n      urls.forEach((url) => {\n        try {\n          stylesheets.push(new URL(url).href);\n        } catch (error) {\n          // not url\n        }\n      });\n    } catch (error) {\n      // not DOM\n    }\n  }\n\n  const scripts: string[] = [];\n  const scriptsFile = files.find((file) => file.filename === 'scripts');\n  if (scriptsFile?.content) {\n    try {\n      const urls: string[] = [];\n      const domparser = new DOMParser();\n      const doc = domparser.parseFromString(scriptsFile.content, 'text/html');\n      doc.querySelectorAll('script').forEach((script) => {\n        urls.push(script.src);\n      });\n      if (urls.length === 0) {\n        scriptsFile.content\n          .trim()\n          .split('\\n')\n          .forEach((line) => {\n            urls.push(line);\n          });\n      }\n      urls.forEach((url) => {\n        try {\n          scripts.push(new URL(url).href);\n        } catch (error) {\n          // not url\n        }\n      });\n    } catch (error) {\n      // not DOM\n    }\n  }\n  return {\n    ...code,\n    stylesheets,\n    scripts,\n  };\n};\n\nexport const hostPatterns = {\n  github: /^(?:(?:http|https):\\/\\/)?github.com\\/(?:.*)/g,\n  githubGist: /^(?:(?:http|https):\\/\\/)?gist.github.com(?:\\/\\S*)?\\/(\\w+)/g,\n  gitlab: /^(?:(?:http|https):\\/\\/)?gitlab.com\\/(?:.*)/g,\n  codepen: /^(?:(?:http|https):\\/\\/)?codepen.io\\/(\\w+)\\/pen\\/(\\w+)/g,\n  jsbin: /^(?:(?:(?:http|https):\\/\\/)?(?:\\w+.)?)?jsbin.com\\/((\\w)+(\\/\\d)?)(?:.*)/g,\n};\n", "import { detectLanguage, getLanguageByAlias } from '../languages';\nimport type { Config, EditorId, Language } from '../models';\nimport { hostPatterns } from './utils';\n\nexport const isCodepen = (url: string, pattern = new RegExp(hostPatterns.codepen)) =>\n  pattern.test(url);\n\nconst languages: { [key in EditorId]: Language[] } = {\n  markup: ['html', 'markdown', 'haml'],\n  style: ['css', 'scss', 'sass', 'less', 'stylus'],\n  script: ['javascript', 'typescript', 'coffeescript', 'livescript'],\n};\n\nconst getCode = async (url: string, editor: EditorId) => {\n  const [_, penUser, penId] = new RegExp(hostPatterns.codepen).exec(url) || [];\n  if (!penUser || !penId) return {};\n  const penUrl = `https://codepen.io/${penUser}/pen/${penId}`;\n\n  const srcExtension = languages[editor][1];\n  let compiledExtension = languages[editor][0];\n  if (compiledExtension === 'javascript') {\n    compiledExtension = 'js';\n  }\n  const [src, compiled] = await Promise.all(\n    [`${penUrl}.${srcExtension}`, `${penUrl}.${compiledExtension}`].map((pageUrl) =>\n      fetch(pageUrl).then((res) => res.text()),\n    ),\n  );\n  const result = await detectLanguage(src, languages[editor]);\n  const language =\n    src.trim() !== compiled.trim() && result.language === languages[editor][0]\n      ? result.secondBest\n      : result.language;\n  return {\n    language,\n    code: src,\n  };\n};\n\nexport const importFromCodepen = async (url: string): Promise<Partial<Config>> => {\n  try {\n    const editorIds: EditorId[] = ['markup', 'style', 'script'];\n    const [markup, style, script] = await Promise.all(\n      editorIds.map((editor) => getCode(url, editor)),\n    );\n\n    return {\n      markup: {\n        language: getLanguageByAlias(markup.language) || 'html',\n        content: markup.code || '',\n      },\n      style: {\n        language: getLanguageByAlias(style.language) || 'css',\n        content: style.code || '',\n      },\n      script: {\n        language: getLanguageByAlias(script.language) || 'javascript',\n        content: script.code || '',\n      },\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch: ' + url);\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return {};\n  }\n};\n", "import { getLanguageByAlias, getLanguageEditorId, languages } from '../languages';\nimport { EditorId, Language, Config } from '../models';\nimport { decodeHTML } from '../utils';\n\nexport const isDom = (url: string) => url.startsWith('dom/');\n\ntype Selectors = {\n  [key in EditorId]: {\n    language: Language;\n    selector: string;\n  };\n};\n\nexport const getLanguageSelectors = (params: { [key: string]: string }) =>\n  Object.keys(params).reduce((selectors: Partial<Selectors>, key) => {\n    const language = getLanguageByAlias(key);\n    if (!language) return selectors;\n\n    const editorId = getLanguageEditorId(language);\n    if (!editorId || selectors[editorId]) return selectors;\n\n    return {\n      ...selectors,\n      [editorId]: {\n        language,\n        selector: params[key],\n      },\n    };\n  }, {} as Partial<Selectors>);\n\nconst extractCodeFromHTML = (dom: Document, selector: string) => {\n  try {\n    const codeContainer = dom.querySelector(selector);\n    if (!codeContainer) return;\n    return decodeHTML(codeContainer.innerHTML.trim() + '\\n' || '');\n  } catch {\n    // invalid selector\n    return;\n  }\n};\n\nexport const importFromDom = async (\n  html: string,\n  params: { [key: string]: string },\n  config: Config,\n): Promise<Partial<Config>> => {\n  if (html.startsWith('dom/')) {\n    html = html.slice(4);\n  }\n\n  const domparser = new DOMParser();\n  const dom = domparser.parseFromString(html, 'text/html');\n  const activeEditor = config.activeEditor;\n\n  const defaultParams = languages\n    .map((lang) => lang.name)\n    .reduce(\n      (acc, langName) => ({\n        ...acc,\n        [langName]: `.livecodes [data-lang=\"${langName}\"]`,\n      }),\n      {} as { [key: string]: string },\n    );\n\n  const selectorParams = Object.keys(params)\n    .filter((key) => key.endsWith('-selector'))\n    .reduce(\n      (acc, key) => ({\n        ...acc,\n        [key.replace('-selector', '')]: params[key],\n      }),\n      {} as { [key: string]: string },\n    );\n\n  const configSelectors = (['markup', 'style', 'script'] as EditorId[]).reduce(\n    (selectors: Selectors, editorId) => {\n      if (config[editorId].language && config[editorId].selector) {\n        return {\n          ...selectors,\n          [editorId]: {\n            language: config[editorId].language,\n            selector: config[editorId].selector,\n          },\n        };\n      } else {\n        return selectors;\n      }\n    },\n    {} as Selectors,\n  );\n\n  const defaultSelectors = getLanguageSelectors(defaultParams);\n  const paramSelectors = getLanguageSelectors(selectorParams);\n  const languageSelectors: Selectors = {\n    ...defaultSelectors,\n    ...configSelectors,\n    ...paramSelectors,\n  };\n\n  const selectedCode = (Object.keys(languageSelectors) as EditorId[]).reduce(\n    (selectedCodeConfig: Partial<Config>, editorId) => {\n      const code = extractCodeFromHTML(dom, languageSelectors[editorId].selector);\n      if (code === undefined) return selectedCodeConfig;\n\n      return {\n        ...selectedCodeConfig,\n        [editorId]: {\n          language: languageSelectors[editorId].language,\n          content: code,\n        },\n      };\n    },\n    { activeEditor },\n  );\n\n  if (Object.keys(selectedCode).length === 4) {\n    return selectedCode;\n  }\n\n  // if not all editors are filled, check for default selectors for other languages\n  const defaults = Object.keys(defaultParams).reduce(\n    (defaultsConfig: Partial<Config>, language: string) => {\n      const editorId = getLanguageEditorId(language as Language);\n      if (!editorId || selectedCode[editorId]) return defaultsConfig;\n      const code = extractCodeFromHTML(dom, defaultParams[language]);\n      if (code === undefined) return defaultsConfig;\n\n      return {\n        ...defaultsConfig,\n        [editorId]: {\n          language,\n          content: code,\n        },\n      };\n    },\n    { activeEditor },\n  );\n\n  const selectedWithDefaults = {\n    ...defaults,\n    ...selectedCode,\n  };\n\n  if (Object.keys(selectedWithDefaults).filter((key) => key !== 'activeEditor').length === 0) {\n    return {};\n  }\n  return selectedWithDefaults;\n};\n", "import type { User } from '../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { safeName } from '../utils/utils';\n\nexport interface GitHubFile {\n  path: string;\n  content: string;\n}\nexport const getGithubHeaders = (user: User, mediaType?: 'object' | 'raw') => ({\n  Accept: `application/vnd.github.v3${mediaType ? '.' + mediaType : ''}+json`,\n  'Content-Type': 'application/json',\n  Authorization: 'token ' + user.token,\n});\n\nexport const repoExists = async (user: User, repo: string) => {\n  try {\n    const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}`, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    });\n    return res.ok;\n  } catch {\n    return false;\n  }\n};\n\nconst createRepo = async (user: User, repo: string, privateRepo = false, description?: string) => {\n  const res = await fetch('https://api.github.com/user/repos', {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      name: repo,\n      private: privateRepo,\n      ...(privateRepo ? {} : { homepage: `https://${user.username}.github.io/${repo}/` }),\n      ...(description ? { description } : {}),\n    }),\n  });\n  if (!res.ok) {\n    const error = await res.json().then((data) => data.errors[0]?.message);\n    if (error === 'name already exists on this account') {\n      throw new Error('Repo name already exists');\n    }\n    throw new Error('Error creating repo');\n  }\n  return res.json().then((data) => data.name);\n};\n\nconst createFile = async ({\n  user,\n  repo,\n  branch,\n  file,\n  message,\n  initialize = false,\n  encoded = false,\n}: {\n  user: User;\n  repo: string;\n  branch: string;\n  file: GitHubFile;\n  message: string;\n  initialize: boolean;\n  encoded: boolean;\n}) => {\n  const url = `https://api.github.com/repos/${user.username}/${repo}/contents/`;\n  const path = file.path.split('/').slice(0, -1).join('/');\n\n  let sha: string | undefined;\n\n  if (!initialize) {\n    const response = await fetch(url + path, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    });\n    if (response.ok) {\n      const files = await response.json();\n      sha = files.find((f: any) => f.path === file.path)?.sha;\n    }\n  }\n  const res = await fetch(url + file.path, {\n    method: 'PUT',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      message: message || 'deploy',\n      content: encoded ? file.content : btoa(file.content),\n      branch,\n      ...(sha ? { sha } : {}),\n    }),\n  });\n\n  if (!res.ok) {\n    throw new Error('Error creating file');\n  }\n  return res.json();\n};\n\nexport const getContent = async ({\n  user,\n  repo,\n  branch,\n  path,\n}: {\n  user: User;\n  repo: string;\n  branch?: string;\n  path: string;\n}) => {\n  const url =\n    `https://api.github.com/repos/${user.username}/${repo}/contents/${path}` +\n    (branch ? `?ref=${branch}` : '');\n\n  const res = await fetch(url, {\n    method: 'GET',\n    cache: 'no-store',\n    headers: getGithubHeaders(user, 'object'),\n  });\n\n  if (!res.ok) {\n    throw new Error('Error getting file');\n  }\n\n  const result = await res.json();\n\n  // https://docs.github.com/en/rest/repos/contents#size-limits\n  if (result.content === '' && result.encoding === 'none') {\n    const rawRes = await fetch(url, {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user, 'raw'),\n    });\n    if (!rawRes.ok) {\n      throw new Error('Error getting file');\n    }\n\n    if (path.endsWith('.b64')) {\n      result.content = await rawRes.arrayBuffer();\n      result.encoding = 'arrayBuffer';\n    } else {\n      result.content = btoa(await rawRes.text());\n      result.encoding = 'base64';\n    }\n  }\n\n  return result;\n};\n\nconst initializeRepo = async (user: User, repo: string, branch = 'main', readmeContent?: string) =>\n  (\n    await createFile({\n      user,\n      repo,\n      branch,\n      file: { path: 'README.md', content: `${readmeContent || '# ' + repo + '\\n'}` },\n      message: 'initial commit',\n      initialize: true,\n      encoded: false,\n    })\n  )?.commit.sha;\n\nconst getLastCommit = async (user: User, repo: string, branch: string) => {\n  const res = await fetch(\n    `https://api.github.com/repos/${user.username}/${repo}/git/matching-refs/heads/${branch}?per_page=100`,\n    {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    },\n  );\n  const refs = await res.json();\n\n  if (refs.message === 'Git Repository is empty.') {\n    const commit = await initializeRepo(user, repo, 'main');\n    return branch === 'main' ? commit : null;\n  }\n\n  if (!res.ok) {\n    throw new Error('Error getting last commit');\n  }\n\n  const branchRef = refs.find((ref: any) => ref.ref === `refs/heads/${branch}`);\n\n  if (!branchRef) return null;\n  return branchRef.object.sha;\n};\n\nconst getTree = async (user: User, repo: string, commit: string) => {\n  const res = await fetch(\n    `https://api.github.com/repos/${user.username}/${repo}/commits/${commit}`,\n    {\n      method: 'GET',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n    },\n  );\n\n  if (!res.ok) {\n    throw new Error('Error getting commit tree');\n  }\n\n  const data = await res.json();\n  const tree = data?.commit?.tree?.sha;\n\n  if (!tree) return null;\n  return tree;\n};\n\nconst createTree = async (\n  user: User,\n  repo: string,\n  files: GitHubFile[],\n  baseTree: string | null,\n): Promise<string> => {\n  const tree = files.map((file) => ({\n    path: file.path,\n    mode: '100644',\n    type: 'blob',\n    content: file.content,\n  }));\n\n  const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}/git/trees`, {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      // eslint-disable-next-line camelcase\n      ...(baseTree ? { base_tree: baseTree } : {}),\n      tree,\n    }),\n  });\n  if (!res.ok) {\n    throw new Error('Error creating tree');\n  }\n  return res.json().then((data) => data.sha);\n};\n\nconst createCommit = async (\n  user: User,\n  repo: string,\n  message: string,\n  tree: string,\n  lastCommit: string | null,\n): Promise<string> => {\n  const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}/git/commits`, {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      tree,\n      message: message || 'deploy',\n      ...(lastCommit ? { parents: [lastCommit] } : {}),\n    }),\n  });\n  if (!res.ok) {\n    throw new Error('Error creating commit');\n  }\n  return res.json().then((data) => data.sha);\n};\n\nconst createBranch = async (user: User, repo: string, branch: string, commit: string) => {\n  const res = await fetch(`https://api.github.com/repos/${user.username}/${repo}/git/refs`, {\n    method: 'POST',\n    cache: 'no-store',\n    headers: getGithubHeaders(user),\n    body: JSON.stringify({\n      ref: `refs/heads/${branch}`,\n      sha: commit,\n    }),\n  });\n  if (!res.ok) {\n    throw new Error('Error creating branch');\n  }\n  return true;\n};\n\nconst updateBranch = async (user: User, repo: string, branch: string, commit: string) => {\n  const res = await fetch(\n    `https://api.github.com/repos/${user.username}/${repo}/git/refs/heads/${branch}`,\n    {\n      method: 'PATCH',\n      cache: 'no-store',\n      headers: getGithubHeaders(user),\n      body: JSON.stringify({\n        sha: commit,\n      }),\n    },\n  );\n  if (!res.ok) {\n    throw new Error('Error updating branch');\n  }\n  return true;\n};\n\nexport const commitFiles = async ({\n  files,\n  user,\n  repo,\n  branch,\n  message,\n  newRepo,\n  privateRepo,\n  description,\n  readmeContent,\n  clearPrevious = true,\n}: {\n  files: GitHubFile[];\n  user: User;\n  repo: string;\n  branch: string;\n  message: string;\n  newRepo?: boolean;\n  privateRepo?: boolean;\n  description?: string;\n  readmeContent?: string;\n  clearPrevious?: boolean;\n}) => {\n  let lastCommit: string | null;\n  let tree: string | null;\n  let commit: string | null;\n  let succeeded = false;\n\n  if (newRepo) {\n    repo = safeName(repo, '-').toLowerCase();\n  }\n\n  try {\n    if (newRepo || !(await repoExists(user, repo))) {\n      newRepo = true;\n      await createRepo(user, repo, privateRepo, description);\n      const initialCommit = await initializeRepo(user, repo, 'main', readmeContent);\n      lastCommit = branch === 'main' ? initialCommit : null;\n    } else {\n      lastCommit = await getLastCommit(user, repo, branch);\n    }\n    const baseTree = lastCommit && !clearPrevious ? await getTree(user, repo, lastCommit) : null;\n    tree = await createTree(user, repo, files, baseTree);\n    commit = await createCommit(user, repo, message, tree, lastCommit);\n\n    if (lastCommit) {\n      succeeded = await updateBranch(user, repo, branch, commit);\n    } else {\n      succeeded = await createBranch(user, repo, branch, commit);\n    }\n\n    if (!succeeded) return null;\n\n    return {\n      tree,\n      commit,\n    };\n  } catch (error: any) {\n    return null;\n  }\n};\n\nexport const commitFile = async ({\n  file,\n  user,\n  repo,\n  branch,\n  message,\n  newRepo,\n  privateRepo,\n  description,\n  readmeContent,\n}: {\n  file: GitHubFile;\n  user: User;\n  repo: string;\n  branch: string;\n  message: string;\n  newRepo?: boolean;\n  privateRepo?: boolean;\n  description?: string;\n  readmeContent?: string;\n}) => {\n  try {\n    if (newRepo || !(await repoExists(user, repo))) {\n      newRepo = true;\n      repo = safeName(repo, '-').toLowerCase();\n      await createRepo(user, repo, privateRepo, description);\n      await initializeRepo(user, repo, branch, readmeContent);\n    }\n\n    const result = await createFile({\n      user,\n      repo,\n      branch,\n      file,\n      message,\n      initialize: newRepo || false,\n      encoded: true,\n    });\n\n    return {\n      tree: result?.commit?.tree?.sha,\n      commit: result?.commit?.sha,\n    };\n  } catch (error: any) {\n    return null;\n  }\n};\n\nexport const getUserRepos = async (\n  user: User,\n  reposType: 'all' | 'owner' | 'public' | 'private' | 'member' = 'public',\n) => {\n  let page = 1;\n  const pageSize = 100;\n  const maxPages = 5;\n  const results = [];\n\n  while (page <= maxPages) {\n    const response = await fetch(\n      `https://api.github.com/user/repos?type=${reposType}&per_page=${pageSize}&page=${page}`,\n      {\n        method: 'GET',\n        cache: 'no-store',\n        headers: getGithubHeaders(user),\n      },\n    );\n    page += 1;\n    if (!response.ok) {\n      continue;\n    }\n    const newResults = await response.json();\n    results.push(...newResults.map((repo: any) => repo.name));\n    if (newResults.length < pageSize) {\n      page = maxPages + 1;\n    }\n  }\n  return results;\n};\n", "import type { User } from '../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { getGithubHeaders } from '../services/github';\nimport { hostPatterns, populateConfig } from './utils';\n\nexport const isGithubDir = (url: string, pattern = new RegExp(hostPatterns.github)) => {\n  if (!pattern.test(url)) return;\n  try {\n    const urlObj = getValidUrl(url);\n    const pathSplit = urlObj.pathname.split('/');\n    return pathSplit[3] === 'tree' || pathSplit.length === 3;\n  } catch (error) {\n    return;\n  }\n};\nconst getValidUrl = (url: string) =>\n  url.startsWith('https://') ? new URL(url) : new URL('https://' + url);\n\nexport const importFromGithubDir = async (\n  url: string,\n  params: { [key: string]: string },\n  loggedInUser: User | null | void,\n) => {\n  try {\n    const urlObj = url.startsWith('https://') ? new URL(url) : new URL('https://' + url);\n\n    const pathSplit = urlObj.pathname.split('/');\n    const rootDir = pathSplit.length === 3;\n    const user = pathSplit[1];\n    const repository = pathSplit[2];\n\n    let branch: string;\n    let dir = '';\n    if (rootDir) {\n      branch = await fetch(`https://api.github.com/repos/${user}/${repository}`, {\n        ...(loggedInUser ? { headers: getGithubHeaders(loggedInUser) } : {}),\n      })\n        .then((res) => res.json())\n        .then((data) => data.default_branch);\n    } else {\n      branch = pathSplit[4];\n      dir = pathSplit.slice(5, pathSplit.length).join('/');\n    }\n    const apiURL = `https://api.github.com/repos/${user}/${repository}/git/trees/${branch}?recursive=true`;\n\n    const tree = await fetch(apiURL, {\n      ...(loggedInUser ? { headers: getGithubHeaders(loggedInUser) } : {}),\n    })\n      .then((res) => res.json())\n      .then((data) => data.tree);\n\n    const dirFiles = tree.filter((node: any) =>\n      rootDir\n        ? node.type === 'blob'\n        : node.type === 'blob' &&\n          node.path.startsWith(dir) &&\n          node.path.split('/').length === dir.split('/').length + 1,\n    );\n\n    const files = await Promise.all(\n      Object.values(dirFiles).map(async (file: any) => {\n        const filename = file.path.split('/')[file.path.split('/').length - 1];\n        const content = atob(\n          await fetch(file.url, {\n            ...(loggedInUser ? { headers: getGithubHeaders(loggedInUser) } : {}),\n          })\n            .then((res) => res.json())\n            .then((data) => data.content),\n        );\n\n        return {\n          filename,\n          content,\n        };\n      }),\n    );\n\n    return populateConfig(files, params);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch directory: ' + url);\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return {};\n  }\n};\n", "import { getLanguageByAlias, getLanguageEditorId } from '../languages';\nimport { Language, Config, User } from '../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { getGithubHeaders } from '../services/github';\nimport { isGithubDir } from './github-dir';\nimport { hostPatterns } from './utils';\n\nexport const isGithubUrl = (url: string, pattern = new RegExp(hostPatterns.github)) => {\n  if (!pattern.test(url)) return;\n  try {\n    const urlObj = getValidUrl(url);\n    const pathSplit = urlObj.pathname.split('/');\n    return pathSplit[3] === 'blob';\n  } catch (error) {\n    return;\n  }\n};\n\nexport const isGithub = (url: string) => isGithubDir(url) || isGithubUrl(url);\n\nconst getValidUrl = (url: string) =>\n  url.startsWith('https://') ? new URL(url) : new URL('https://' + url);\n\n// based on https://github.com/yusanshi/embed-like-gist\nconst getfileData = (urlObj: URL): FileData => {\n  const pathSplit = urlObj.pathname.split('/');\n  const user = pathSplit[1];\n  const repository = pathSplit[2];\n  const branch = pathSplit[4];\n  const file = pathSplit.slice(5, pathSplit.length).join('/');\n  const extension = (file.split('.')[file.split('.').length - 1] || 'md') as Language;\n  const lineSplit = urlObj.hash.split('-');\n  const startLine = urlObj.hash !== '' ? Number(lineSplit[0].replace('#L', '')) : -1;\n  const endLine =\n    urlObj.hash !== '' && lineSplit.length > 1 ? Number(lineSplit[1].replace('L', '')) : startLine;\n  const apiUrl = `https://api.github.com/repos/${user}/${repository}/contents/${file}?ref=${branch}`;\n  return {\n    apiUrl,\n    extension,\n    startLine,\n    endLine,\n  };\n};\n\ninterface FileData {\n  apiUrl: string;\n  extension: Language;\n  startLine: number;\n  endLine: number;\n}\n\nconst getContent = async (\n  fileData: FileData,\n  loggedInUser: User | null | void,\n): Promise<Partial<Config>> => {\n  const { apiUrl, extension, startLine, endLine } = fileData;\n  try {\n    const fileContent = await fetch(apiUrl, {\n      ...(loggedInUser ? { headers: getGithubHeaders(loggedInUser) } : {}),\n    })\n      .then((res) => res.json())\n      .then((data) => atob(data.content));\n    const content =\n      startLine > 0\n        ? fileContent\n            .split('\\n')\n            .slice(startLine - 1, endLine)\n            .join('\\n')\n        : fileContent;\n    const language = getLanguageByAlias(extension) || 'html';\n    const editorId = getLanguageEditorId(language) || 'markup';\n    return {\n      [editorId]: {\n        language,\n        content,\n      },\n      activeEditor: editorId,\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch: ' + apiUrl);\n    return {};\n  }\n};\n\nexport const importFromGithub = (\n  url: string,\n  loggedInUser: User | null | void,\n): Promise<Partial<Config>> => {\n  const validUrl = getValidUrl(url);\n  const fileData = getfileData(validUrl);\n  return getContent(fileData, loggedInUser);\n};\n", "import { getLanguageByAlias } from '../languages';\nimport { getValidUrl, hostPatterns, populateConfig } from './utils';\n\nexport const isGithubGist = (url: string, pattern = new RegExp(hostPatterns.githubGist)) =>\n  pattern.test(url);\n\nexport const importFromGithubGist = async (url: string, params: { [key: string]: string }) => {\n  try {\n    const urlObj = getValidUrl(url);\n    if (!urlObj) return {};\n    const pathSplit = urlObj.pathname.split('/');\n    const gistId = pathSplit[pathSplit.length - 1];\n    let gistTitle = '';\n    const gistFiles = await fetch(`https://api.github.com/gists/${gistId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        gistTitle = data.description;\n        return data.files;\n      })\n      .then((files) =>\n        Object.values(files).map((file: any) => {\n          const lang = file.language;\n          const extension = file.filename.split('.')[file.filename.split('.').length - 1];\n          const language = getLanguageByAlias(extension) || getLanguageByAlias(lang);\n          return {\n            ...file,\n            language,\n          };\n        }),\n      );\n\n    const files = Object.values(gistFiles).map((file: any) => ({\n      filename: file.filename,\n      language: file.language,\n      content: file.content,\n    }));\n\n    return { ...populateConfig(files, params), title: gistTitle };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch gist: ' + url);\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return {};\n  }\n};\n", "import { getLanguageByAlias, getLanguageEditorId } from '../languages';\nimport { Language, Config } from '../models';\nimport { pipe } from '../utils';\nimport { FileData, getValidUrl, hostPatterns } from './utils';\n\nexport const isGitlabUrl = (url: string, pattern = new RegExp(hostPatterns.gitlab)) => {\n  if (!pattern.test(url)) return;\n  try {\n    const urlObj = getValidUrl(url);\n    if (!urlObj) return;\n    const pathSplit = urlObj.pathname.split('/');\n    return pathSplit[4] === 'blob';\n  } catch (error) {\n    return;\n  }\n};\n\n// based on https://github.com/yusanshi/embed-like-gist\nconst getfileData = async (urlObj: URL): Promise<FileData> => {\n  const pathSplit = urlObj.pathname.split('/');\n  const user = pathSplit[1];\n  const repository = pathSplit[2];\n  const branch = pathSplit[5];\n  const file = pathSplit.slice(6, pathSplit.length).join('/');\n  const extension = (file.split('.')[file.split('.').length - 1] || 'md') as Language;\n  const lineSplit = urlObj.hash.split('-');\n  const startLine = urlObj.hash !== '' ? Number(lineSplit[0].replace('#L', '')) : -1;\n  const endLine =\n    urlObj.hash !== '' && lineSplit.length > 1 ? Number(lineSplit[1].replace('L', '')) : startLine;\n  const projectId = await fetch(`${urlObj.origin}/api/v4/projects/${user}%2F${repository}`)\n    .then((res) => res.json())\n    .then((data) => data.id);\n  const rawURL = `${\n    urlObj.origin\n  }/api/v4/projects/${projectId}/repository/files/${encodeURIComponent(file)}/raw?ref=${branch}`;\n\n  return {\n    rawURL,\n    extension,\n    startLine,\n    endLine,\n  };\n};\n\nconst getContent = async (fileData: Promise<FileData>): Promise<Partial<Config>> => {\n  const { rawURL, extension, startLine, endLine } = await fileData;\n  try {\n    const fileContent = await fetch(rawURL).then((res) => res.text());\n    const content =\n      startLine > 0\n        ? fileContent\n            .split('\\n')\n            .slice(startLine - 1, endLine)\n            .join('\\n')\n        : fileContent;\n    const language = getLanguageByAlias(extension) || 'html';\n    const editorId = getLanguageEditorId(language) || 'markup';\n    return {\n      [editorId]: {\n        language,\n        content,\n      },\n      activeEditor: editorId,\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch: ' + rawURL);\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return {};\n  }\n};\n\nexport const importFromGitlab = pipe(getValidUrl, getfileData, getContent) as (\n  url: string,\n) => Promise<Partial<Config>>;\n", "import { getValidUrl, hostPatterns, populateConfig } from './utils';\n\nexport const isGitlabDir = (url: string, pattern = new RegExp(hostPatterns.gitlab)) => {\n  if (!pattern.test(url)) return;\n  try {\n    const urlObj = getValidUrl(url);\n    if (!urlObj) return;\n    const pathSplit = urlObj.pathname.split('/');\n    return pathSplit[4] === 'tree' || pathSplit.length === 3;\n  } catch (error) {\n    return;\n  }\n};\n\nexport const importFromGitlabDir = async (url: string, params: { [key: string]: string }) => {\n  try {\n    const urlObj = getValidUrl(url);\n    if (!urlObj) return {};\n    const pathSplit = urlObj.pathname.split('/');\n    const user = pathSplit[1];\n    const repository = pathSplit[2];\n    const repoInfo = await fetch(`${urlObj.origin}/api/v4/projects/${user}%2F${repository}`).then(\n      (res) => res.json(),\n    );\n    const branch = pathSplit[5] || repoInfo.default_branch;\n    const projectId = repoInfo.id;\n    const dir = pathSplit.slice(6, pathSplit.length).join('/');\n    const apiURL = `${urlObj.origin}/api/v4/projects/${projectId}/repository/tree?per_page=100&ref=${branch}&path=${dir}`;\n    const dirFiles = await fetch(apiURL)\n      .then((res) => res.json())\n      .then((data) => data.filter((node: any) => node.type === 'blob'));\n\n    const files = await Promise.all(\n      Object.values(dirFiles).map(async (file: any) => {\n        const filename = file.path.split('/')[file.path.split('/').length - 1];\n        const rawURL = `${\n          urlObj.origin\n        }/api/v4/projects/${projectId}/repository/files/${encodeURIComponent(\n          file.path,\n        )}/raw?ref=${branch}`;\n        const content = await fetch(rawURL).then((res) => res.text());\n\n        return {\n          filename,\n          content,\n        };\n      }),\n    );\n\n    return populateConfig(files, params);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch directory: ' + url);\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return {};\n  }\n};\n", "import { getValidUrl, hostPatterns, populateConfig } from './utils';\n\nexport const isGitlabSnippet = (url: string, pattern = new RegExp(hostPatterns.gitlab)) => {\n  if (!pattern.test(url)) return;\n  const urlObj = getValidUrl(url);\n  if (!urlObj) return;\n  const pathSplit = urlObj.pathname.split('/');\n  return pathSplit[pathSplit.length - 2] === 'snippets';\n};\n\nexport const importFromGitlabSnippet = async (url: string, params: { [key: string]: string }) => {\n  try {\n    const urlObj = getValidUrl(url);\n    if (!urlObj) return {};\n    const pathSplit = urlObj.pathname.split('/');\n    const snippetId = pathSplit[pathSplit.length - 1];\n    let snippetTitle = '';\n\n    const snippetFiles = await fetch(`${urlObj.origin}/api/v4/snippets/${snippetId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        snippetTitle = data.title;\n        return data.files;\n      });\n\n    const files = await Promise.all(\n      Object.values(snippetFiles).map(async (file: any) => {\n        const filename = file.path;\n        const fileUrlObj = getValidUrl(file.raw_url);\n        const branch = fileUrlObj?.pathname.split('/')[5] || 'main';\n        const content = await fetch(\n          `${urlObj.origin}/api/v4/snippets/${snippetId}/files/${branch}/${encodeURIComponent(\n            filename,\n          )}/raw`,\n        ).then((res) => res.text());\n\n        return {\n          filename,\n          content,\n        };\n      }),\n    );\n\n    return { ...populateConfig(files, params), title: snippetTitle };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch snippet: ' + error);\n    return {};\n  }\n};\n", "export const allowedOrigin = (origin = location.origin) =>\n  Boolean(\n    origin &&\n      (origin.endsWith('livecodes.io') ||\n        origin.endsWith('livecodes.pages.dev') ||\n        origin.endsWith('localpen.io') ||\n        origin.endsWith('localpen.pages.dev') ||\n        origin.startsWith('http://127.0.0.1') ||\n        origin.startsWith('http://localhost')),\n  );\n\nexport const whitelistTarget = (url: string) =>\n  new RegExp(/^(?:(?:http|https):\\/\\/(?:\\w+.)?)(githubusercontent.com|jsbin.com|)\\/(?:.*)/g).test(\n    url,\n  );\n", "import { fetchWithHandler } from '../utils';\nimport { allowedOrigin, whitelistTarget } from './allowed-origin';\n\nconst corsApiUrl = 'https://api.livecodes.io/cors?url=';\nconst proxyUrl = 'https://api.allorigins.win/raw?url=';\n\nexport const corsService = {\n  fetch: async (url: string, options?: RequestInit) => {\n    const corsUrl = (allowedOrigin() ? corsApiUrl : proxyUrl) + encodeURIComponent(url);\n    if (whitelistTarget(url)) {\n      return fetchWithHandler(corsUrl, options);\n    }\n    return fetchWithHandler(url, options).catch(() => fetchWithHandler(corsUrl, options));\n  },\n};\n", "import { Config } from '../models';\nimport { allowedOrigin } from './allowed-origin';\n\nconst dpasteGetUrl = 'https://dpaste.com/';\nconst dpastePostUrl = 'https://dpaste.com/api/v2/';\nconst apiUrl = 'https://api2.livecodes.io/share';\n\ntype ConfigWithResult = Partial<Config & { result: string }>;\ninterface ShareService {\n  getProject: (id: string) => Promise<ConfigWithResult>;\n  shareProject: (config: ConfigWithResult) => Promise<string>;\n}\n\nconst dpasteService = {\n  getProject: async (id: string): Promise<ConfigWithResult> => {\n    try {\n      const res = await fetch(dpasteGetUrl + id + '.txt');\n      if (!res.ok) return {};\n      return JSON.parse(await res.text());\n    } catch (error) {\n      return {};\n    }\n  },\n  shareProject: async (config: ConfigWithResult): Promise<string> => {\n    try {\n      const res = await fetch(dpastePostUrl, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'User-Agent': 'LiveCodes / https://livecodes.io/',\n        },\n        body: `content=${encodeURIComponent(JSON.stringify(config))}&title=${encodeURIComponent(\n          config.title || '',\n        )}&syntax=json&expiry_days=365`,\n      });\n      if (!res.ok) return '';\n      const url = await res.text();\n      return url.replace(dpasteGetUrl, '');\n    } catch (error) {\n      return '';\n    }\n  },\n};\n\nconst apiService = {\n  getProject: async (id: string): Promise<ConfigWithResult> => {\n    // for backward compatibility\n    if (id.length < 11) return dpasteService.getProject(id);\n\n    if (!allowedOrigin()) return {};\n    try {\n      const res = await fetch(apiUrl + '?id=' + id);\n      if (!res.ok) return {};\n      return JSON.parse(await res.text());\n    } catch (error) {\n      return {};\n    }\n  },\n  shareProject: async (config: ConfigWithResult): Promise<string> => {\n    if (!allowedOrigin()) return '';\n    try {\n      const res = await fetch(apiUrl, {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify(config),\n      });\n      if (!res.ok) return '';\n      return res.text();\n    } catch (error) {\n      return '';\n    }\n  },\n};\n\nexport const shareService: ShareService = allowedOrigin() ? apiService : dpasteService;\n", "import { getLanguageByAlias } from '../languages';\nimport { Config } from '../models';\nimport { corsService } from '../services';\nimport { hostPatterns } from './utils';\n\nexport const isJsbin = (url: string, pattern = new RegExp(hostPatterns.jsbin)) => pattern.test(url);\n\nexport const importFromJsbin = async (url: string): Promise<Partial<Config>> => {\n  const binId = new RegExp(hostPatterns.jsbin).exec(url)?.[1];\n  if (!binId) return {};\n  const binUrl = `https://jsbin.com/api/${binId}`;\n\n  try {\n    const bin = await corsService.fetch(binUrl).then((res) => res.json());\n    return {\n      markup: {\n        language: getLanguageByAlias(bin.settings?.processors?.html) || 'html',\n        content: bin.html || '',\n      },\n      style: {\n        language: getLanguageByAlias(bin.settings?.processors?.css) || 'css',\n        content: bin.css || '',\n      },\n      script: {\n        language: getLanguageByAlias(bin.settings?.processors?.javascript) || 'javascript',\n        content: bin.javascript || '',\n      },\n    };\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Cannot fetch: ' + binUrl);\n    // eslint-disable-next-line no-console\n    console.error(error);\n    return {};\n  }\n};\n", "import { shareService } from '../services';\n\nexport const isProjectId = (url: string) => url.startsWith('id/');\n\nexport const importProject = (url: string) => {\n  const id = url.slice(3);\n  return shareService.getProject(id);\n};\n", "import { ContentConfig } from '../models';\nimport { jsZipUrl } from '../vendors';\nimport { populateConfig, SourceFile } from './utils';\n\nexport const importFromZip = async (blob: Blob) =>\n  new Promise<Partial<ContentConfig>>(async (resolve, reject) => {\n    if (!(window as any).JSZip) {\n      (window as any).JSZip = (await import(jsZipUrl)).default;\n    }\n\n    (window as any).JSZip.loadAsync(blob)\n      .then(async (zip: any) => {\n        const projectJson: any[] = zip.file(/livecodes\\.json/);\n        if (projectJson.length > 0) {\n          projectJson[0]\n            .async('string')\n            .then((str: string) => {\n              resolve(JSON.parse(str));\n            })\n            .catch(reject);\n          return;\n        }\n\n        const filesInSrcDir: any[] = zip.file(/((^src\\/)|(\\/src\\/))/);\n        const allFiles: any[] = zip.file(/.*/);\n        const rootFiles = allFiles.filter((file) => !file.name.includes('/'));\n        const selectedFiles =\n          filesInSrcDir.length > 0 ? filesInSrcDir : rootFiles.length > 0 ? rootFiles : allFiles;\n\n        if (selectedFiles.length > 0) {\n          const sourceFiles: SourceFile[] = await Promise.all(\n            selectedFiles.map(async (file) => ({\n              filename: file.name,\n              content: await file.async('string'),\n            })),\n          );\n          resolve(populateConfig(sourceFiles, {}));\n          return;\n        }\n\n        resolve({});\n      })\n      .catch(reject);\n  });\n", "import { getLanguageByAlias, getLanguageEditorId } from '../languages';\nimport { Config } from '../models';\nimport { corsService } from '../services';\nimport { importFromDom } from './dom';\nimport { importFromZip } from './zip';\n\nconst getRawCode = (content: string, lang: string): Partial<Config> => {\n  const language = getLanguageByAlias(lang) || 'html';\n  const editorId = getLanguageEditorId(language) || 'markup';\n  return {\n    [editorId]: {\n      language,\n      content,\n    },\n    activeEditor: editorId,\n  };\n};\n\nexport const importFromUrl = async (\n  url: string,\n  params: { [key: string]: string },\n  config: Config,\n): Promise<Partial<Config>> => {\n  let res: Response;\n  try {\n    res = await corsService.fetch(url);\n  } catch (error) {\n    // eslint-disable-next-line no-console\n    console.error('Error fetching ' + url);\n    return {};\n  }\n\n  // zip file\n  if (\n    url.endsWith('.zip') ||\n    ['application/zip', 'application/octet-stream'].includes(\n      res.headers.get('Content-Type') || '',\n    ) ||\n    url.startsWith('data:application/zip') ||\n    url.startsWith('data:application/octet-stream')\n  ) {\n    const zip = await res.blob();\n    return importFromZip(zip);\n  }\n\n  const fetchedContent = await res.text();\n\n  if (params.raw) {\n    return getRawCode(fetchedContent, params.raw);\n  }\n\n  const importedFromDom = await importFromDom(fetchedContent, params, config);\n\n  if (Object.keys(importedFromDom).length > 0) {\n    return importedFromDom;\n  } else {\n    // if no code was extracted, assume it is raw code\n    // if there is a file extension use it else assume it is html\n    const extension = url.slice(url.lastIndexOf('.') + 1);\n    const language = getLanguageByAlias(extension) || 'html';\n    const editorId = getLanguageEditorId(language) || 'markup';\n    return {\n      [editorId]: {\n        language,\n        content: fetchedContent || '',\n      },\n      activeEditor: editorId,\n    };\n  }\n};\n", "import { Config, User } from '../models';\nimport { importCompressedCode, isCompressedCode } from './code';\nimport { importFromCodepen, isCodepen } from './codepen';\nimport { importFromDom, isDom } from './dom';\nimport { importFromGithub, isGithubUrl } from './github';\nimport { importFromGithubDir, isGithubDir } from './github-dir';\nimport { importFromGithubGist, isGithubGist } from './github-gist';\nimport { importFromGitlab, isGitlabUrl } from './gitlab';\nimport { importFromGitlabDir, isGitlabDir } from './gitlab-dir';\nimport { importFromGitlabSnippet, isGitlabSnippet } from './gitlab-snippet';\nimport { importFromJsbin, isJsbin } from './jsbin';\nimport { importProject, isProjectId } from './project-id';\nimport { importFromUrl } from './url';\n\nexport const importCode = async (\n  url: string,\n  params: { [key: string]: any },\n  config: Config,\n  user: User | null | void,\n): Promise<Partial<Config>> => {\n  if (isCompressedCode(url)) {\n    return importCompressedCode(url);\n  }\n  if (isProjectId(url)) {\n    return importProject(url);\n  }\n  if (isDom(url)) {\n    return importFromDom(url, params, config);\n  }\n  if (isGithubGist(url)) {\n    return importFromGithubGist(url, params);\n  }\n  if (isGithubDir(url)) {\n    return importFromGithubDir(url, params, user);\n  }\n  if (isGithubUrl(url)) {\n    return importFromGithub(url, user);\n  }\n  if (isGitlabSnippet(url)) {\n    return importFromGitlabSnippet(url, params);\n  }\n  if (isGitlabDir(url)) {\n    return importFromGitlabDir(url, params);\n  }\n  if (isGitlabUrl(url)) {\n    return importFromGitlab(url);\n  }\n  if (isCodepen(url)) {\n    return importFromCodepen(url);\n  }\n  if (isJsbin(url)) {\n    return importFromJsbin(url);\n  }\n  if (url) {\n    return importFromUrl(url, params, config);\n  }\n  return Promise.resolve({});\n};\n", "export const getToolbarElement = () => document.querySelector('#toolbar') as HTMLElement;\nexport const getProjectTitleElement = () => document.querySelector('#project-title') as HTMLElement;\nexport const getEditorContainerElement = () =>\n  document.querySelector('#editor-container') as HTMLElement;\nexport const getEditorsElement = () => document.querySelector('#editors') as HTMLElement;\nexport const getMarkupElement = () => document.querySelector('#markup') as HTMLElement;\nexport const getStyleElement = () => document.querySelector('#style') as HTMLElement;\nexport const getScriptElement = () => document.querySelector('#script') as HTMLElement;\nexport const getOutputElement = () => document.querySelector('#output') as HTMLElement;\nexport const getResultElement = () => document.querySelector('#result') as HTMLElement;\nexport const getResultIFrameElement = () =>\n  document.querySelector('#result > iframe') as HTMLIFrameElement;\nexport const getGutterElement = () =>\n  document.querySelector('#editor-container .gutter') as HTMLElement;\nexport const getLogoLink = () => document.querySelector('#logo a') as HTMLAnchorElement;\nexport const getRunButton = () => document.querySelector('#run-button') as HTMLElement;\nexport const getCodeRunButton = () => document.querySelector('#code-run-button') as HTMLElement;\nexport const getEditorToolbar = () => document.querySelector('#editor-tools') as HTMLElement;\nexport const getCopyButton = () => document.querySelector('#editor-tools #copy-btn') as HTMLElement;\nexport const getUndoButton = () => document.querySelector('#editor-tools #undo-btn') as HTMLElement;\nexport const getRedoButton = () => document.querySelector('#editor-tools #redo-btn') as HTMLElement;\nexport const getFormatButton = () =>\n  document.querySelector('#editor-tools #format-btn') as HTMLElement;\nexport const getEditorModeNode = () => document.querySelector<HTMLElement>('#editor-mode');\nexport const getEditorStatus = () =>\n  document.querySelector('#editor-tools #editor-status') as HTMLElement;\nexport const getExternalResourcesBtn = () =>\n  document.querySelector('#editor-tools #external-resources-btn') as HTMLElement;\nexport const getExternalResourcesMark = () =>\n  document.querySelector('#editor-tools #external-resources-mark') as HTMLElement;\nexport const getResultButton = () => document.querySelector('#result-button') as HTMLElement;\nexport const getFullscreenButton = () =>\n  document.querySelector('#fullscreen-button') as HTMLElement;\nexport const getEditorTitles = () =>\n  document.querySelectorAll<HTMLElement>('.editor-title:not(.hidden)');\nexport const getEditorDivs = () => document.querySelectorAll<HTMLElement>('#editors > .editor');\nexport const getToolspaneElement = () =>\n  document.querySelector('#output #tools-pane') as HTMLElement;\nexport const getToolspaneBar = () =>\n  document.querySelector('#output #tools-pane-bar') as HTMLElement;\nexport const getToolspaneButtons = () =>\n  document.querySelector('#tools-pane-buttons') as HTMLElement;\nexport const getToolspaneTitles = () => document.querySelector<HTMLElement>('#tools-pane-titles');\nexport const getToolspaneLoader = () => document.querySelector<HTMLElement>('#tools-pane-loading');\nexport const getZoomButtonValue = () =>\n  document.querySelector<HTMLElement>('#zoom-button #zoom-value');\nexport const getModalSaveButton = () =>\n  document.querySelector('#modal #prompt-save-btn') as HTMLElement;\nexport const getModalDoNotSaveButton = () =>\n  document.querySelector('#modal #prompt-donot-save-btn') as HTMLElement;\nexport const getModalCancelButton = () =>\n  document.querySelector('#modal #prompt-cancel-btn') as HTMLElement;\n\nexport const getModalRecoverButton = () =>\n  document.querySelector('#modal #prompt-recover-btn') as HTMLElement;\nexport const getModalSavePreviousButton = () =>\n  document.querySelector('#modal #prompt-save-previous-btn') as HTMLElement;\nexport const getModalCancelRecoverButton = () =>\n  document.querySelector('#modal #prompt-cancel-recover-btn') as HTMLElement;\nexport const getModalUnsavedName = () =>\n  document.querySelector('#modal #unsaved-project-name') as HTMLElement;\nexport const getModalUnsavedLastModified = () =>\n  document.querySelector('#modal #unsaved-project-last-modified') as HTMLElement;\nexport const getModalDisableRecoverCheckbox = () =>\n  document.querySelector('#modal #disable-recover-checkbox') as HTMLInputElement;\n\nexport const getLanguageMenuLinks = () =>\n  document.querySelectorAll<HTMLElement>('#select-editor .language-item a');\n\nexport const getLanguageMenuButtons = () =>\n  document.querySelectorAll<HTMLElement>('#select-editor .language-menu-button');\n\nexport const getstyleMenu = () =>\n  document.querySelector<HTMLElement>('#style-selector .dropdown-menu');\n\nexport const getSettingToggles = () =>\n  document.querySelectorAll<HTMLInputElement>('#settings-menu input');\n\nexport const getCssPresetLinks = () =>\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\n\nexport const getSettingsMenuScroller = () =>\n  document.querySelector<HTMLElement>('#settings-menu-container');\nexport const getSettingsButton = () => document.querySelector<HTMLElement>('#settings-button');\n\nexport const getExportJSONLink = () =>\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-json');\n\nexport const getExportResultLink = () =>\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-result');\n\nexport const getExportSourceLink = () =>\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-src');\n\nexport const getExportGithubGistLink = () =>\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-githubGist');\n\nexport const getExportCodepenLink = () =>\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-codepen');\n\nexport const getExportJsfiddleLink = () =>\n  document.querySelector<HTMLAnchorElement>('#export-menu #export-jsfiddle');\n\nexport const getLoginLink = () => document.querySelector<HTMLAnchorElement>('#login-link');\n\nexport const getLogoutLink = () => document.querySelector<HTMLAnchorElement>('#logout-link');\n\nexport const getNewLink = () => document.querySelector<HTMLAnchorElement>('#new-link');\n\nexport const getOpenLink = () => document.querySelector<HTMLAnchorElement>('#open-link');\n\nexport const getSaveLink = () => document.querySelector<HTMLAnchorElement>('#save-link');\n\nexport const getForkLink = () => document.querySelector<HTMLAnchorElement>('#fork-link');\n\nexport const getSaveAsTemplateLink = () =>\n  document.querySelector<HTMLAnchorElement>('#template-link');\n\nexport const getExternalResourcesLink = () =>\n  document.querySelector<HTMLAnchorElement>('#external-resources-link');\n\nexport const getCustomSettingsLink = () =>\n  document.querySelector<HTMLAnchorElement>('#custom-settings-link');\n\nexport const getShareLink = () => document.querySelector<HTMLAnchorElement>('#share-link');\n\nexport const getEmbedLink = () => document.querySelector<HTMLAnchorElement>('#embed-link');\n\nexport const getEditorSettingsLink = () =>\n  document.querySelector<HTMLAnchorElement>('#editor-settings-link');\n\nexport const getDeployLink = () => document.querySelector<HTMLAnchorElement>('#deploy-link');\n\nexport const getSyncLink = () => document.querySelector<HTMLAnchorElement>('#sync-link');\n\nexport const getImportLink = () => document.querySelector<HTMLAnchorElement>('#import-link');\n\nexport const getBackupLink = () => document.querySelector<HTMLAnchorElement>('#backup-link');\n\nexport const getBroadcastLink = () => document.querySelector<HTMLAnchorElement>('#broadcast-link');\n\nexport const getAutoupdateToggle = () =>\n  document.querySelector('#settings-menu input#autoupdate') as HTMLInputElement;\n\nexport const getDelayValue = () =>\n  document.querySelector('#settings-menu #delay-value') as HTMLElement;\n\nexport const getDelayRange = () =>\n  document.querySelector('#settings-menu input#delay-range') as HTMLInputElement;\n\nexport const getAutosaveToggle = () =>\n  document.querySelector('#settings-menu input#autosave') as HTMLInputElement;\n\nexport const getAutosyncToggle = () =>\n  document.querySelector('#settings-menu input#autosync') as HTMLInputElement;\n\nexport const getFormatOnsaveToggle = () =>\n  document.querySelector('#settings-menu input#formatOnsave') as HTMLInputElement;\n\nexport const getProcessorToggles = () =>\n  document.querySelectorAll<HTMLInputElement>('#style-selector input');\n\nexport const getEmmetToggle = () =>\n  document.querySelector('#settings-menu input#emmet') as HTMLInputElement;\n\nexport const getThemeToggle = () =>\n  document.querySelector('#settings-menu input#theme') as HTMLInputElement;\n\nexport const getRecoverToggle = () =>\n  document.querySelector('#settings-menu input#recover-unsaved') as HTMLInputElement;\n\nexport const getSpacingToggle = () =>\n  document.querySelector('#settings-menu input#show-spacing') as HTMLInputElement;\n\nexport const getCSSPresetLinks = () =>\n  document.querySelectorAll<HTMLAnchorElement>('#css-preset-menu a');\n\nexport const getProjectInfoLink = () =>\n  document.querySelector('#settings-menu #info-link') as HTMLInputElement;\n\nexport const getAssetsLink = () =>\n  document.querySelector('#settings-menu #assets-link') as HTMLInputElement;\n\nexport const getSnippetsLink = () =>\n  document.querySelector('#settings-menu #snippets-link') as HTMLInputElement;\n\nexport const getInfoTitleInput = () =>\n  document.querySelector('#info-container input#title-input') as HTMLInputElement;\n\nexport const getInfoDescription = () =>\n  document.querySelector('#info-container #description-textarea') as HTMLTextAreaElement;\n\nexport const getInfoTagsInput = () =>\n  document.querySelector('#info-container input#tags-input') as HTMLInputElement;\n\nexport const getSaveInfoButton = () =>\n  document.querySelector<HTMLElement>('#info-container #info-save-btn');\n\nexport const getExternalResourcesTextareas = () =>\n  document.querySelectorAll<HTMLTextAreaElement>('#resources-container textarea');\n\nexport const getLoadResourcesButton = () =>\n  document.querySelector<HTMLElement>('#resources-container #resources-load-btn');\n\nexport const getCustomSettingsEditor = () =>\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-editor');\n\nexport const getLoadCustomSettingsButton = () =>\n  document.querySelector<HTMLElement>('#custom-settings-container #custom-settings-load-btn');\n\nexport const getTestEditor = () =>\n  document.querySelector<HTMLElement>('#test-editor-container #test-editor');\n\nexport const getLoadTestsButton = () =>\n  document.querySelector<HTMLElement>('#test-editor-container #test-load-btn');\n\nexport const getEditTestsButton = () =>\n  document.querySelector<HTMLElement>('#test-container #edit-tests-btn');\n\nexport const getRunTestsButton = () =>\n  document.querySelector<HTMLElement>('#test-container #run-tests-btn');\n\nexport const getWatchTestsButton = () =>\n  document.querySelector<HTMLElement>('#test-container #watch-tests-btn');\n\nexport const getUrlImportForm = (importContainer: HTMLElement) =>\n  importContainer.querySelector<HTMLFormElement>('#url-import-form');\nexport const getUrlImportButton = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#url-import-btn') as HTMLButtonElement;\nexport const getUrlImportInput = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#code-url') as HTMLInputElement;\nexport const getCodeImportInput = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#local-code-input') as HTMLInputElement;\n\nexport const getImportJsonUrlForm = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#json-url-import-form') as HTMLInputElement;\nexport const getImportJsonUrlButton = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#json-url-import-btn') as HTMLInputElement;\nexport const getImportJsonUrlInput = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#json-url') as HTMLInputElement;\n\nexport const getBulkImportJsonUrlForm = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#bulk-json-url-import-form') as HTMLInputElement;\nexport const getBulkImportJsonUrlButton = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#bulk-json-url-import-btn') as HTMLInputElement;\nexport const getBulkImportJsonUrlInput = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#bulk-json-url') as HTMLInputElement;\nexport const getLinkToSavedProjects = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#link-to-saved-projects') as HTMLAnchorElement;\n\nexport const getImportFileInput = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#file-input') as HTMLInputElement;\n\nexport const getBulkImportFileInput = (importContainer: HTMLElement) =>\n  importContainer.querySelector('#bulk-file-input') as HTMLInputElement;\n\nexport const getNewRepoForm = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector<HTMLFormElement>('#new-repo-form');\nexport const getNewRepoButton = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#new-repo-btn') as HTMLButtonElement;\nexport const getNewRepoNameInput = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#new-repo-name') as HTMLInputElement;\nexport const getNewRepoNameError = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#new-repo-name-error') as HTMLElement;\nexport const getNewRepoMessageInput = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#new-repo-message') as HTMLInputElement;\nexport const getNewRepoCommitSource = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#new-repo-source') as HTMLInputElement;\nexport const getNewRepoAutoSync = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#new-repo-autosync') as HTMLInputElement;\n\nexport const getExistingRepoForm = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector<HTMLFormElement>('#existing-repo-form');\nexport const getExistingRepoButton = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#existing-repo-btn') as HTMLButtonElement;\nexport const getExistingRepoNameInput = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#existing-repo-name') as HTMLInputElement;\nexport const getExistingRepoMessageInput = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#existing-repo-message') as HTMLInputElement;\nexport const getExistingRepoCommitSource = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#existing-repo-source') as HTMLInputElement;\nexport const getExistingRepoAutoSync = (deployContainer: HTMLElement) =>\n  deployContainer.querySelector('#existing-repo-autosync') as HTMLInputElement;\n\nexport const getStarterTemplatesTab = (templatesContainer: HTMLElement) =>\n  templatesContainer.querySelector<HTMLElement>(\n    '#templates-tabs [data-target=\"templates-starter\"]',\n  );\nexport const getStarterTemplatesList = (templatesContainer: HTMLElement) =>\n  templatesContainer.querySelector<HTMLElement>('#starter-templates-list');\nexport const getUserTemplatesScreen = (templatesContainer: HTMLElement) =>\n  templatesContainer.querySelector('#templates-user .modal-screen') as HTMLElement;\n\nexport const getBulkImportButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#bulk-import-button') as HTMLElement;\n\nexport const getExportAllButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#export-all-button') as HTMLElement;\n\nexport const getDeleteAllButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#delete-all-button') as HTMLElement;\n\nexport const getAddAssetButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#assets-add-asset-button') as HTMLElement;\n\nexport const getAssetsDeleteAllButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#assets-delete-all-button') as HTMLElement;\n\nexport const getAssetsButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#assets-button') as HTMLElement;\n\nexport const getAssetDataUrlFileInput = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#asset-data-url-file-input') as HTMLInputElement;\n\nexport const getAssetDataUrlOutput = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#data-url-output') as HTMLElement;\n\nexport const getAssetGHPagesFileInput = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#asset-gh-pages-file-input') as HTMLInputElement;\n\nexport const getAssetGHPagesFileInputLabel = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#asset-gh-pages-file-input-label') as HTMLElement;\n\nexport const getAssetGHPagesFileInputButton = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#asset-gh-pages-file-input-button') as HTMLElement;\n\nexport const getAssetGHPagesOutput = (listContainer: HTMLElement) =>\n  listContainer.querySelector('#gh-pages-output') as HTMLElement;\n\nexport const getSyncStatus = (syncContainer: HTMLElement | undefined) =>\n  (syncContainer || document).querySelector<HTMLElement>('#sync-status');\n\nexport const getStartSyncBtns = (syncContainer: HTMLElement | undefined) =>\n  (syncContainer || document).querySelectorAll<HTMLButtonElement>('.start-sync-btn');\n\nexport const getBackupForm = (backupContainer: HTMLElement) =>\n  backupContainer.querySelector('#backup-form') as HTMLFormElement;\n\nexport const getBackupBtn = (backupContainer: HTMLElement) =>\n  backupContainer.querySelector('#backup-btn') as HTMLButtonElement;\n\nexport const getBackupCheckedInputs = (backupContainer: HTMLElement) =>\n  backupContainer.querySelectorAll<HTMLInputElement>('#backup input[type=\"checkbox\"]:checked');\n\nexport const getAddSnippetButton = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#snippets-add-snippet-button') as HTMLElement;\n\nexport const getSnippetsDeleteAllButton = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#snippets-delete-all-button') as HTMLElement;\n\nexport const getSnippetLanguageSelect = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#language-select') as HTMLSelectElement;\n\nexport const getAddSnippetEditor = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#add-snippet-editor') as HTMLElement;\n\nexport const getSnippetTitleInput = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#add-snippet-title-input') as HTMLInputElement;\n\nexport const getSnippetDescriptionArea = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#add-snippet-description-textarea') as HTMLTextAreaElement;\n\nexport const getSaveSnippetBtn = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#add-snippet-save-btn') as HTMLButtonElement;\n\nexport const getSnippetsBtn = (snippetsContainer: HTMLElement) =>\n  snippetsContainer.querySelector('#snippets-button') as HTMLButtonElement;\n\nexport const getBroadcastStatusLabel = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-status') as HTMLElement;\n\nexport const getBroadcastForm = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-form') as HTMLFormElement;\n\nexport const getBroadcastServerUrlInput = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-server-url') as HTMLInputElement;\n\nexport const getBroadcastSourceCheckbox = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-source') as HTMLInputElement;\n\nexport const getBroadcastBtn = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-btn') as HTMLButtonElement;\n\nexport const getBroadcastChannelUrlSection = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-channel-url-section') as HTMLElement;\n\nexport const getBroadcastChannelUrl = (broadcastContainer: HTMLElement) =>\n  broadcastContainer.querySelector('#broadcast-channel-url') as HTMLAnchorElement;\n\nexport const getBroadcastStatusBtn = () =>\n  document.querySelector('#broadcast-status-btn') as HTMLElement | null;\n\nexport const getQrCodeContainer = () => document.querySelector('#qrcode-container') as HTMLElement;\n\nexport const getEditorSettingsFormatLink = (editorSettingsContainer: HTMLElement) =>\n  editorSettingsContainer.querySelector('#editor-settings-format-link') as HTMLAnchorElement;\n", "/* eslint-disable import/no-internal-modules */\nimport type { SourceFile, populateConfig as populateConfigFn } from '../import/utils';\nimport type { createModal } from '../modal';\nimport type { Config, ContentConfig, User, Screen } from '../models';\nimport type { createNotifications } from '../notifications';\nimport type { ProjectStorage, StorageItem } from '../storage';\nimport type { createEventsManager } from '../events';\nimport { defaultConfig } from '../config/default-config';\nimport { importScreen } from '../html';\nimport { fetchWithHandler } from '../utils/utils';\nimport { importCode } from '../import/import';\nimport { importFromZip } from '../import/zip';\nimport {\n  getBulkImportFileInput,\n  getBulkImportJsonUrlButton,\n  getBulkImportJsonUrlForm,\n  getBulkImportJsonUrlInput,\n  getCodeImportInput,\n  getImportFileInput,\n  getImportJsonUrlButton,\n  getImportJsonUrlForm,\n  getImportJsonUrlInput,\n  getLinkToSavedProjects,\n  getUrlImportButton,\n  getUrlImportForm,\n  getUrlImportInput,\n} from './selectors';\nexport { importCode };\n\nconst createImportContainer = (eventsManager: ReturnType<typeof createEventsManager>) => {\n  const div = document.createElement('div');\n  div.innerHTML = importScreen;\n  const importContainer = div.firstChild as HTMLElement;\n\n  const tabs = importContainer.querySelectorAll<HTMLElement>('#import-tabs li');\n  tabs.forEach((tab) => {\n    eventsManager.addEventListener(tab, 'click', () => {\n      tabs.forEach((t) => t.classList.remove('active'));\n      tab.classList.add('active');\n\n      document.querySelectorAll('#import-screens > div').forEach((screen) => {\n        screen.classList.remove('active');\n      });\n      const target = importContainer.querySelector('#' + tab.dataset.target);\n      target?.classList.add('active');\n      target?.querySelector('input')?.focus();\n    });\n  });\n\n  return importContainer;\n};\n\nexport const createImportUI = ({\n  modal,\n  notifications,\n  eventsManager,\n  getUser,\n  loadConfig,\n  populateConfig,\n  projectStorage,\n  showScreen,\n}: {\n  baseUrl: string;\n  modal: ReturnType<typeof createModal>;\n  notifications: ReturnType<typeof createNotifications>;\n  eventsManager: ReturnType<typeof createEventsManager>;\n  getUser: (() => Promise<void | User>) | undefined;\n  loadConfig: (newConfig: Partial<ContentConfig>, url?: string) => Promise<void>;\n  populateConfig: typeof populateConfigFn;\n  projectStorage: ProjectStorage | undefined;\n  showScreen: (screen: Screen['screen'], options?: any) => Promise<void>;\n}) => {\n  const importContainer = createImportContainer(eventsManager);\n  const importForm = getUrlImportForm(importContainer);\n  const importButton = getUrlImportButton(importContainer);\n  eventsManager.addEventListener(importForm, 'submit', async (e) => {\n    e.preventDefault();\n    const buttonText = importButton.innerHTML;\n    importButton.innerHTML = 'Loading...';\n    importButton.disabled = true;\n    const importInput = getUrlImportInput(importContainer);\n    const url = importInput.value;\n\n    const imported = await importCode(url, {}, defaultConfig, await getUser?.());\n    if (imported && Object.keys(imported).length > 0) {\n      await loadConfig(\n        {\n          ...defaultConfig,\n          ...imported,\n        },\n        location.origin + location.pathname + '?x=' + encodeURIComponent(url),\n      );\n      modal.close();\n    } else {\n      importButton.innerHTML = buttonText;\n      importButton.disabled = false;\n      notifications.error('failed to load URL');\n      importInput.focus();\n    }\n  });\n\n  const loadFiles = (input: HTMLInputElement) =>\n    new Promise<Partial<ContentConfig>>((resolve, reject) => {\n      const files = Array.from(input.files as FileList);\n      const sourceFiles: SourceFile[] = [];\n\n      for (const file of files) {\n        // Max 2 MB allowed\n        const maxSizeAllowed = 2 * 1024 * 1024;\n        if (file.size > maxSizeAllowed) {\n          reject('Error: Exceeded size 2MB');\n          return;\n        }\n\n        const reader = new FileReader();\n        eventsManager.addEventListener(reader, 'load', async (event: any) => {\n          const text = (event.target?.result as string) || '';\n          sourceFiles.push({\n            filename: file.name,\n            content: text,\n          });\n\n          if (sourceFiles.length === files.length) {\n            resolve(populateConfig(sourceFiles, {}));\n          }\n        });\n\n        eventsManager.addEventListener(reader, 'error', () => {\n          reject('Error: Failed to read file');\n        });\n\n        reader.readAsText(file);\n      }\n    });\n\n  const loadZipFile = (input: HTMLInputElement) => importFromZip(input.files![0]);\n\n  const codeImportInput = getCodeImportInput(importContainer);\n  eventsManager.addEventListener(codeImportInput, 'change', () => {\n    if (codeImportInput.files?.length === 0) return;\n\n    const getConfigFromFiles =\n      codeImportInput.files?.length === 1 && codeImportInput.files[0].name.endsWith('.zip')\n        ? loadZipFile\n        : loadFiles;\n\n    getConfigFromFiles(codeImportInput)\n      .then(loadConfig)\n      .then(modal.close)\n      .catch((message) => {\n        notifications.error(message);\n      });\n  });\n\n  const importJsonUrlForm = getImportJsonUrlForm(importContainer);\n  const importJsonUrlButton = getImportJsonUrlButton(importContainer);\n  eventsManager.addEventListener(importJsonUrlForm, 'submit', async (e) => {\n    e.preventDefault();\n    const buttonText = importJsonUrlButton.innerHTML;\n    importJsonUrlButton.innerHTML = 'Loading...';\n    importJsonUrlButton.disabled = true;\n    const importInput = getImportJsonUrlInput(importContainer);\n    const url = importInput.value;\n    fetchWithHandler(url)\n      .then((res) => res.json())\n      .then((fileConfig) =>\n        loadConfig(fileConfig, location.origin + location.pathname + '?config=' + url),\n      )\n      .then(() => modal.close())\n      .catch(() => {\n        importJsonUrlButton.innerHTML = buttonText;\n        importJsonUrlButton.disabled = false;\n        notifications.error('Error: failed to load URL');\n        importInput.focus();\n      });\n  });\n\n  const bulkImportJsonUrlForm = getBulkImportJsonUrlForm(importContainer);\n  const bulkimportJsonUrlButton = getBulkImportJsonUrlButton(importContainer);\n  eventsManager.addEventListener(bulkImportJsonUrlForm, 'submit', async (e) => {\n    e.preventDefault();\n    const buttonText = bulkimportJsonUrlButton.innerHTML;\n    bulkimportJsonUrlButton.innerHTML = 'Loading...';\n    bulkimportJsonUrlButton.disabled = true;\n    const importInput = getBulkImportJsonUrlInput(importContainer);\n    const url = importInput.value;\n    fetchWithHandler(url)\n      .then((res) => res.json())\n      .then(insertItems)\n      .catch(() => {\n        bulkimportJsonUrlButton.innerHTML = buttonText;\n        bulkimportJsonUrlButton.disabled = false;\n        notifications.error('Error: failed to load URL');\n        importInput.focus();\n      });\n  });\n\n  const loadFile = <T>(input: HTMLInputElement) =>\n    new Promise<T>((resolve, reject) => {\n      if (input.files?.length === 0) return;\n\n      const file = (input.files as FileList)[0];\n\n      const allowedTypes = ['application/json', 'text/plain'];\n      if (allowedTypes.indexOf(file.type) === -1) {\n        reject('Error: Incorrect file type');\n        return;\n      }\n\n      // Max 2 MB allowed\n      const maxSizeAllowed = 2 * 1024 * 1024;\n      if (file.size > maxSizeAllowed) {\n        reject('Error: Exceeded size 2MB');\n        return;\n      }\n\n      const reader = new FileReader();\n      eventsManager.addEventListener(reader, 'load', async (event: any) => {\n        const text = (event.target?.result as string) || '';\n        try {\n          resolve(JSON.parse(text));\n        } catch (error) {\n          reject('Invalid configuration file');\n        }\n      });\n\n      eventsManager.addEventListener(reader, 'error', () => {\n        reject('Error: Failed to read file');\n      });\n\n      reader.readAsText(file);\n    });\n\n  const insertItems = async (items: StorageItem[]) => {\n    const getItemConfig = (item: StorageItem) => item.config || (item as any).pen; // for backward compatibility\n    if (Array.isArray(items) && items.every(getItemConfig) && projectStorage) {\n      await projectStorage.bulkInsert(items.map(getItemConfig));\n      notifications.success('Import Successful!');\n      showScreen('open');\n      return;\n    }\n    return Promise.reject('Error: Invalid file');\n  };\n\n  const fileInput = getImportFileInput(importContainer);\n  eventsManager.addEventListener(fileInput, 'change', () => {\n    loadFile<Config>(fileInput)\n      .then(loadConfig)\n      .then(modal.close)\n      .catch((message) => {\n        notifications.error(message);\n      });\n  });\n\n  const bulkFileInput = getBulkImportFileInput(importContainer);\n  eventsManager.addEventListener(bulkFileInput, 'change', () => {\n    loadFile<StorageItem[]>(bulkFileInput)\n      .then(insertItems)\n      .catch((message) => {\n        notifications.error(message);\n      });\n  });\n\n  const linkToSavedProjects = getLinkToSavedProjects(importContainer);\n  eventsManager.addEventListener(linkToSavedProjects, 'click', (e) => {\n    e.preventDefault();\n    showScreen('open');\n  });\n\n  modal.show(importContainer, { isAsync: true });\n  getUrlImportInput(importContainer).focus();\n};\n"],
  "mappings": "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C,EAC9D,KAAa,mBAAmB,GAE1C,QAAS,CACP,KAAMF,GAAc,UACtB,CACF,EACA,WAAY,CAAC,MAAM,EACnB,OAAQ,QACV,ECdO,IAAMG,GAA0B,CACrC,KAAM,WACN,MAAO,WACP,OAAQ,CACN,KAAM,UACN,WAAY,CAACC,EAAc,OAAO,CACpC,EACA,SAAU,CACR,IAAKC,GACL,QAAS,CAACC,EAASC,KAChB,KAAa,cAAcA,EAAU,oCAAoC,EAClE,KAAa,uBAAuB,EAEhD,EACA,WAAY,CAAC,UAAU,EACvB,OAAQ,SACR,eAAgB,MAClB,ECjBO,IAAMC,GAA6B,CACxC,KAAM,eACN,MAAO,MACP,UAAW,eACX,OAAQ,CACN,KAAM,OACN,WAAY,CAACC,EAAc,IAAI,CACjC,EACA,SAAU,CACR,IAAKC,GACL,QAAS,CAACC,EAASC,KAChB,KAAa,cAAcA,EAAU,wCAAwC,EACtE,KAAa,0BAA0B,EAEnD,EACA,WAAY,CAAC,MAAO,cAAc,EAClC,OAAQ,SACR,eAAgB,MAClB,ECqCO,IAAMC,EAA6B,CACxCC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EACF,ECvHO,IAAMC,GAA0B,CACrC,CACE,GAAI,gBACJ,KAAM,gBACN,IAAKC,EACP,EACA,CACE,GAAI,YACJ,KAAM,YACN,IAAKC,EACP,EACA,CACE,GAAI,sBACJ,KAAM,sBACN,IAAKC,EACP,EACA,CACE,GAAI,kBACJ,KAAM,kBACN,IAAKC,EAAiB,iCACxB,CACF,ECPO,IAAMC,EAAeC,GAAgB,C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",
  "names": ["require_lz_string", "__commonJSMin", "exports", "module", "LZString", "f", "keyStrBase64", "keyStrUriSafe", "baseReverseDic", "getBaseValue", "alphabet", "character", "i", "input", "res", "a", "index", "compressed", "uncompressed", "buf", "TotalLen", "current_value", "result", "c", "bitsPerChar", "getCharFromInt", "value", "context_dictionary", "context_dictionaryToCreate", "context_c", "context_wc", "context_w", "context_enlargeIn", "context_dictSize", "context_numBits", "context_data", "context_data_val", "context_data_position", "ii", "length", "resetValue", "getNextValue", "dictionary", "next", "enlargeIn", "dictSize", "numBits", "entry", "w", "bits", "resb", "maxpower", "power", "data", "defaultConfig", "decodeHTML", "html", "txt", "escapeCode", "code", "slash", "pipe", "fns", "f", "g", "args", "handleFetchError", "res", "fetchWithHandler", "input", "init", "getLanguageCustomSettings", "language", "config", "import_lz_string", "decompress", "compressed", "isJSON", "decoded", "isCompressedCode", "url", "importCompressedCode", "code", "config", "decompress", "vendorsBaseUrl", "artTemplateUrl", "asciidocUrl", "assemblyscriptLoaderUrl", "astroBaseUrl", "babelUrl", "biwaschemeUrl", "brythonBaseUrl", "clioBaseUrl", "coffeeScriptUrl", "dotUrl", "ejsUrl", "githubMarkdownCss", "go2jsBaseUrl", "handlebarsBaseUrl", "highlightjsUrl", "imbaBaseUrl", "jsclUrl", "jsZipUrl", "liquidJsUrl", "luaUrl", "markedUrl", "mustacheUrl", "normalizeCssUrl", "nunjucksBaseUrl", "opalBaseUrl", "parinferUrl", "prettierBaseUrl", "prettierPhpUrl", "requireUrl", "resetCssUrl", "riotBaseUrl", "sqlFormatterUrl", "sqljsBaseUrl", "stencilUrl", "tauPrologBaseUrl", "twigUrl", "typescriptUrl", "uniterUrl", "vueSfcLoaderCdnBaseUrl", "wabtjsUrl", "lightningcss", "vendorsBaseUrl", "_config", "baseUrl", "postcss", "vendorsBaseUrl", "_config", "baseUrl", "autoprefixer", "vendorsBaseUrl", "config", "getLanguageCustomSettings", "cssnano", "nanoPlugins", "postcssPlugins", "plugin", "processor", "opts", "postcssPresetEnv", "vendorsBaseUrl", "config", "getLanguageCustomSettings", "purgecss", "_baseUrl", "options", "tokencss", "vendorsBaseUrl", "config", "customSettings", "getLanguageCustomSettings", "extendTokens", "base", "tokens", "result", "key", "tokensConfig", "unocss", "vendorsBaseUrl", "_config", "baseUrl", "windicss", "vendorsBaseUrl", "_config", "baseUrl", "getLanguageByAlias", "alias", "aliasLowerCase", "languages", "language", "ext", "getLanguageEditorId", "alias", "languages", "lang", "getLanguageByAlias", "detectLanguage", "code", "languages", "highlightjsUrl", "result", "asciidoc", "asciidocUrl", "asciidoctor", "code", "config", "getLanguageCustomSettings", "prettierUrl", "prettierBaseUrl", "parserPlugins", "prettierPhpUrl", "vendorsBaseUrl", "babel", "parserPlugins", "babelUrl", "code", "config", "getLanguageCustomSettings", "css", "parserPlugins", "code", "haml", "vendorsBaseUrl", "_config", "baseUrl", "html", "parserPlugins", "code", "javascript", "parserPlugins", "code", "jsx", "parserPlugins", "tsx", "parserPlugins", "less", "parserPlugins", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "markdown", "parserPlugins", "markedUrl", "code", "config", "getLanguageCustomSettings", "compileInCompiler", "content", "language", "config", "options", "worker", "resolve", "handler", "ev", "message", "runOutsideWorker", "code", "config", "worker", "resolve", "mdx", "remarkGfm", "vendorsBaseUrl", "compiled", "getLanguageCustomSettings", "jsx", "str", "result", "escapeCode", "js", "compileInCompiler", "parserPlugins", "pug", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "scss", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "sass", "svelte", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "stylus", "vendorsBaseUrl", "code", "typescriptOptions", "typescript", "parserPlugins", "typescriptUrl", "code", "config", "language", "getLanguageCustomSettings", "loaderCdnUrl", "vueSfcLoaderCdnBaseUrl", "vueCdnUrl", "vue", "parserPlugins", "_config", "baseUrl", "loaderCdnUrl", "vueSfcLoaderCdnBaseUrl", "vueCdnUrl", "vue2", "parserPlugins", "_config", "baseUrl", "stencil", "parserPlugins", "stencilUrl", "code", "config", "getLanguageCustomSettings", "vendorsBaseUrl", "coffeescript", "coffeeScriptUrl", "code", "config", "getLanguageCustomSettings", "livescript", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "assemblyscript", "parserPlugins", "_config", "baseUrl", "assemblyscriptLoaderUrl", "vendorsBaseUrl", "brythonUrl", "brythonBaseUrl", "stdlibUrl", "python", "code", "compiled", "config", "autoloadStdlib", "options", "getLanguageCustomSettings", "importsPattern", "stdlib", "loader", "loaderUrl", "compiledCode", "escapeCode", "compiledCodeUrl", "getImports", "code", "requireMap", "arr", "mod", "opalBaseUrl", "ruby", "config", "autoloadStdlib", "options", "getLanguageCustomSettings", "compiled", "imports", "stdlib", "php", "parserPlugins", "code", "uniterUrl", "perl", "code", "baseUrl", "vendorsBaseUrl", "luaFmtUrl", "vendorsBaseUrl", "lua", "code", "cursorOffset", "luaUrl", "parenFormatter", "url", "parinferUrl", "value", "commonlisp", "code", "baseUrl", "jsclUrl", "scheme", "parenFormatter", "code", "biwaschemeUrl", "solid", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "solidTsx", "parserPlugins", "pyodide", "code", "baseUrl", "liquid", "parserPlugins", "liquidJsUrl", "_config", "baseUrl", "ejs", "parserPlugins", "ejsUrl", "_config", "baseUrl", "url", "handlebarsBaseUrl", "runtimeUrl", "handlebars", "parserPlugins", "_config", "baseUrl", "dot", "parserPlugins", "dotUrl", "_config", "baseUrl", "url", "nunjucksBaseUrl", "runtimeUrl", "nunjucks", "parserPlugins", "_config", "baseUrl", "go", "url", "go2jsBaseUrl", "value", "code", "err", "runOutsideWorker", "code", "baseUrl", "language", "rescriptCompiler", "formatterFactory", "rescript", "reason", "formatterFactory", "ocaml", "formatterUrl", "vendorsBaseUrl", "scriptType", "wat", "value", "formatted", "error", "wabtjsUrl", "_config", "baseUrl", "compilerCdnUrl", "riotBaseUrl", "cdnUrl", "riot", "parserPlugins", "_config", "baseUrl", "scriptType", "sql", "sqlFormatterUrl", "value", "sqljsBaseUrl", "_config", "baseUrl", "reactNativeWebUrl", "vendorsBaseUrl", "reactNative", "parserPlugins", "code", "config", "language", "typescriptOptions", "getLanguageCustomSettings", "reactNativeTsx", "parserPlugins", "code", "config", "language", "typescriptOptions", "getLanguageCustomSettings", "reactNativeWebUrl", "blockly", "_code", "options", "twig", "parserPlugins", "twigUrl", "_config", "baseUrl", "compilerURL", "astroBaseUrl", "astro", "parserPlugins", "_config", "baseUrl", "malina", "parserPlugins", "_config", "baseUrl", "cdnUrl", "vendorsBaseUrl", "cpp", "code", "baseUrl", "julia", "code", "baseUrl", "clang", "code", "baseUrl", "tcl", "code", "baseUrl", "requireUrl", "prolog", "code", "baseUrl", "tauPrologBaseUrl", "clio", "clioBaseUrl", "_config", "baseUrl", "richtext", "_code", "config", "runOutsideWorker", "code", "baseUrl", "config", "diagramsCompiler", "diagrams", "parserPlugins", "imba", "imbaBaseUrl", "_config", "baseUrl", "mustache", "parserPlugins", "mustacheUrl", "_config", "baseUrl", "artTemplate", "parserPlugins", "artTemplateUrl", "_config", "baseUrl", "languages", "html", "markdown", "mdx", "astro", "pug", "asciidoc", "haml", "mustache", "handlebars", "ejs", "nunjucks", "liquid", "dot", "twig", "artTemplate", "diagrams", "richtext", "css", "scss", "sass", "less", "stylus", "javascript", "babel", "typescript", "jsx", "tsx", "reactNative", "reactNativeTsx", "vue", "vue2", "svelte", "stencil", "solid", "solidTsx", "riot", "malina", "coffeescript", "livescript", "clio", "imba", "rescript", "reason", "ocaml", "python", "pyodide", "ruby", "go", "php", "cpp", "clang", "perl", "lua", "julia", "scheme", "commonlisp", "tcl", "assemblyscript", "wat", "sql", "prolog", "blockly", "cssPresets", "normalizeCssUrl", "resetCssUrl", "githubMarkdownCss", "vendorsBaseUrl", "getValidUrl", "url", "populateConfig", "files", "params", "getLanguageByAlias", "output", "param", "language", "file", "editorId", "getLanguageEditorId", "code", "extension", "a", "b", "languages", "stylesheets", "stylesFile", "urls", "stylesheet", "line", "scripts", "scriptsFile", "script", "hostPatterns", "isCodepen", "url", "pattern", "hostPatterns", "languages", "getCode", "editor", "_", "penUser", "penId", "penUrl", "srcExtension", "compiledExtension", "src", "compiled", "pageUrl", "res", "result", "detectLanguage", "importFromCodepen", "editorIds", "markup", "style", "script", "getLanguageByAlias", "error", "isDom", "url", "getLanguageSelectors", "params", "selectors", "key", "language", "getLanguageByAlias", "editorId", "getLanguageEditorId", "extractCodeFromHTML", "dom", "selector", "codeContainer", "decodeHTML", "importFromDom", "html", "config", "activeEditor", "defaultParams", "languages", "lang", "acc", "langName", "selectorParams", "configSelectors", "defaultSelectors", "paramSelectors", "languageSelectors", "selectedCode", "selectedCodeConfig", "code", "selectedWithDefaults", "defaultsConfig", "getGithubHeaders", "user", "mediaType", "isGithubDir", "url", "pattern", "hostPatterns", "pathSplit", "getValidUrl", "importFromGithubDir", "params", "loggedInUser", "rootDir", "user", "repository", "branch", "dir", "getGithubHeaders", "res", "data", "apiURL", "dirFiles", "node", "files", "file", "filename", "content", "populateConfig", "error", "isGithubUrl", "url", "pattern", "hostPatterns", "getValidUrl", "getValidUrl", "url", "getfileData", "urlObj", "pathSplit", "user", "repository", "branch", "file", "extension", "lineSplit", "startLine", "endLine", "getContent", "fileData", "loggedInUser", "apiUrl", "fileContent", "getGithubHeaders", "res", "data", "content", "language", "getLanguageByAlias", "editorId", "getLanguageEditorId", "importFromGithub", "validUrl", "isGithubGist", "url", "pattern", "hostPatterns", "importFromGithubGist", "params", "urlObj", "getValidUrl", "pathSplit", "gistId", "gistTitle", "gistFiles", "res", "data", "files", "file", "lang", "extension", "language", "getLanguageByAlias", "populateConfig", "error", "isGitlabUrl", "url", "pattern", "hostPatterns", "urlObj", "getValidUrl", "getfileData", "pathSplit", "user", "repository", "branch", "file", "extension", "lineSplit", "startLine", "endLine", "projectId", "res", "data", "getContent", "fileData", "rawURL", "fileContent", "content", "language", "getLanguageByAlias", "editorId", "getLanguageEditorId", "error", "importFromGitlab", "pipe", "isGitlabDir", "url", "pattern", "hostPatterns", "urlObj", "getValidUrl", "pathSplit", "importFromGitlabDir", "params", "user", "repository", "repoInfo", "res", "branch", "projectId", "dir", "apiURL", "dirFiles", "data", "node", "files", "file", "filename", "rawURL", "content", "populateConfig", "error", "isGitlabSnippet", "url", "pattern", "hostPatterns", "urlObj", "getValidUrl", "pathSplit", "importFromGitlabSnippet", "params", "snippetId", "snippetTitle", "snippetFiles", "res", "data", "files", "file", "filename", "branch", "content", "populateConfig", "error", "allowedOrigin", "origin", "whitelistTarget", "url", "corsApiUrl", "proxyUrl", "corsService", "url", "options", "corsUrl", "allowedOrigin", "whitelistTarget", "fetchWithHandler", "dpasteGetUrl", "dpastePostUrl", "apiUrl", "dpasteService", "id", "res", "config", "apiService", "allowedOrigin", "shareService", "isJsbin", "url", "pattern", "hostPatterns", "importFromJsbin", "binId", "binUrl", "bin", "corsService", "res", "getLanguageByAlias", "error", "isProjectId", "url", "importProject", "id", "shareService", "importFromZip", "blob", "resolve", "reject", "jsZipUrl", "zip", "projectJson", "str", "filesInSrcDir", "allFiles", "rootFiles", "file", "selectedFiles", "sourceFiles", "populateConfig", "getRawCode", "content", "lang", "language", "getLanguageByAlias", "editorId", "getLanguageEditorId", "importFromUrl", "url", "params", "config", "res", "corsService", "zip", "importFromZip", "fetchedContent", "importedFromDom", "importFromDom", "extension", "importCode", "url", "params", "config", "user", "isCompressedCode", "importCompressedCode", "isProjectId", "importProject", "isDom", "importFromDom", "isGithubGist", "importFromGithubGist", "isGithubDir", "importFromGithubDir", "isGithubUrl", "importFromGithub", "isGitlabSnippet", "importFromGitlabSnippet", "isGitlabDir", "importFromGitlabDir", "isGitlabUrl", "importFromGitlab", "isCodepen", "importFromCodepen", "isJsbin", "importFromJsbin", "importFromUrl", "getUrlImportForm", "importContainer", "getUrlImportButton", "getUrlImportInput", "getCodeImportInput", "getImportJsonUrlForm", "getImportJsonUrlButton", "getImportJsonUrlInput", "getBulkImportJsonUrlForm", "getBulkImportJsonUrlButton", "getBulkImportJsonUrlInput", "getLinkToSavedProjects", "getImportFileInput", "getBulkImportFileInput", "createImportContainer", "eventsManager", "div", "import_default", "importContainer", "tabs", "tab", "t", "screen", "target", "createImportUI", "modal", "notifications", "getUser", "loadConfig", "populateConfig", "projectStorage", "showScreen", "importForm", "getUrlImportForm", "importButton", "getUrlImportButton", "e", "buttonText", "importInput", "getUrlImportInput", "url", "imported", "importCode", "defaultConfig", "loadFiles", "input", "resolve", "reject", "files", "sourceFiles", "file", "reader", "event", "text", "loadZipFile", "importFromZip", "codeImportInput", "getCodeImportInput", "message", "importJsonUrlForm", "getImportJsonUrlForm", "importJsonUrlButton", "getImportJsonUrlButton", "getImportJsonUrlInput", "fetchWithHandler", "res", "fileConfig", "bulkImportJsonUrlForm", "getBulkImportJsonUrlForm", "bulkimportJsonUrlButton", "getBulkImportJsonUrlButton", "getBulkImportJsonUrlInput", "insertItems", "loadFile", "maxSizeAllowed", "items", "getItemConfig", "item", "fileInput", "getImportFileInput", "bulkFileInput", "getBulkImportFileInput", "linkToSavedProjects", "getLinkToSavedProjects"]
}
