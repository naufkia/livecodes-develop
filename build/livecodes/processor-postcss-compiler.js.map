{
  "version": 3,
  "sources": ["../../node_modules/lz-string/libs/lz-string.js", "../../src/livecodes/vendors.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/languages/lightningcss/processor-lightningcss.ts", "../../src/livecodes/languages/postcss/processor-postcss.ts", "../../src/livecodes/languages/postcss/postcss-plugins.ts", "../../src/livecodes/languages/unocss/processor-unocss.ts", "../../src/livecodes/languages/windicss/processor-windicss.ts", "../../src/livecodes/languages/processors.ts", "../../src/livecodes/languages/utils.ts", "../../src/livecodes/languages/prettier.ts", "../../src/livecodes/languages/babel/lang-babel.ts", "../../src/livecodes/languages/css/lang-css.ts", "../../src/livecodes/languages/haml/lang-haml.ts", "../../src/livecodes/languages/html/lang-html.ts", "../../src/livecodes/languages/javascript/lang-javascript.ts", "../../src/livecodes/languages/jsx/lang-jsx.ts", "../../src/livecodes/languages/jsx/lang-tsx.ts", "../../src/livecodes/languages/less/lang-less.ts", "../../src/livecodes/languages/markdown/lang-markdown.ts", "../../src/livecodes/compiler/compile-in-compiler.ts", "../../src/livecodes/languages/mdx/lang-mdx.ts", "../../src/livecodes/languages/pug/lang-pug.ts", "../../src/livecodes/languages/scss/lang-scss.ts", "../../src/livecodes/languages/svelte/lang-svelte.ts", "../../src/livecodes/languages/stylus/lang-stylus.ts", "../../src/livecodes/languages/typescript/lang-typescript.ts", "../../src/livecodes/languages/vue/lang-vue.ts", "../../src/livecodes/languages/vue/lang-vue2.ts", "../../src/livecodes/languages/stencil/lang-stencil.ts", "../../src/livecodes/languages/livescript/lang-livescript.ts", "../../src/livecodes/languages/assemblyscript/lang-assemblyscript.ts", "../../src/livecodes/languages/python/lang-python.ts", "../../src/livecodes/languages/ruby/lang-ruby.ts", "../../src/livecodes/languages/php/lang-php.ts", "../../src/livecodes/languages/lua/lang-lua.ts", "../../src/livecodes/languages/solid/lang-solid.ts", "../../src/livecodes/languages/solid/lang-solid-tsx.ts", "../../src/livecodes/languages/liquid/lang-liquid.ts", "../../src/livecodes/languages/ejs/lang-ejs.ts", "../../src/livecodes/languages/handlebars/lang-handlebars.ts", "../../src/livecodes/languages/dot/lang-dot.ts", "../../src/livecodes/languages/nunjucks/lang-nunjucks.ts", "../../src/livecodes/languages/go/lang-go.ts", "../../src/livecodes/languages/wat/lang-wat.ts", "../../src/livecodes/languages/riot/lang-riot.ts", "../../src/livecodes/languages/sql/lang-sql.ts", "../../src/livecodes/languages/react-native/lang-react-native.ts", "../../src/livecodes/languages/react-native/lang-react-native-tsx.ts", "../../src/livecodes/languages/twig/lang-twig.ts", "../../src/livecodes/languages/astro/lang-astro.ts", "../../src/livecodes/languages/malina/lang-malina.ts", "../../src/livecodes/languages/cpp/lang-cpp.ts", "../../src/livecodes/languages/clio/lang-clio.ts", "../../src/livecodes/languages/diagrams/lang-diagrams.ts", "../../src/livecodes/languages/imba/lang-imba.ts", "../../src/livecodes/languages/mustache/lang-mustache.ts", "../../src/livecodes/languages/art-template/lang-art-template.ts", "../../src/livecodes/languages/css-presets.ts", "../../src/livecodes/services/allowed-origin.ts", "../../src/livecodes/utils/compression.ts", "../../src/livecodes/services/modules.ts", "../../src/livecodes/services/share.ts", "../../src/livecodes/compiler/import-map.ts", "../../src/livecodes/languages/postcss/processor-postcss-compiler.ts"],
  "sourcesContent": ["// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\nvar LZString = (function() {\n\n// private property\nvar f = String.fromCharCode;\nvar keyStrBase64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nvar keyStrUriSafe = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$\";\nvar baseReverseDic = {};\n\nfunction getBaseValue(alphabet, character) {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {};\n    for (var i=0 ; i<alphabet.length ; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i;\n    }\n  }\n  return baseReverseDic[alphabet][character];\n}\n\nvar LZString = {\n  compressToBase64 : function (input) {\n    if (input == null) return \"\";\n    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});\n    switch (res.length % 4) { // To produce valid Base64\n    default: // When could this happen ?\n    case 0 : return res;\n    case 1 : return res+\"===\";\n    case 2 : return res+\"==\";\n    case 3 : return res+\"=\";\n    }\n  },\n\n  decompressFromBase64 : function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });\n  },\n\n  compressToUTF16 : function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 15, function(a){return f(a+32);}) + \" \";\n  },\n\n  decompressFromUTF16: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });\n  },\n\n  //compress into uint8array (UCS-2 big endian format)\n  compressToUint8Array: function (uncompressed) {\n    var compressed = LZString.compress(uncompressed);\n    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character\n\n    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {\n      var current_value = compressed.charCodeAt(i);\n      buf[i*2] = current_value >>> 8;\n      buf[i*2+1] = current_value % 256;\n    }\n    return buf;\n  },\n\n  //decompress from uint8array (UCS-2 big endian format)\n  decompressFromUint8Array:function (compressed) {\n    if (compressed===null || compressed===undefined){\n        return LZString.decompress(compressed);\n    } else {\n        var buf=new Array(compressed.length/2); // 2 bytes per character\n        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {\n          buf[i]=compressed[i*2]*256+compressed[i*2+1];\n        }\n\n        var result = [];\n        buf.forEach(function (c) {\n          result.push(f(c));\n        });\n        return LZString.decompress(result.join(''));\n\n    }\n\n  },\n\n\n  //compress into a string that is already URI encoded\n  compressToEncodedURIComponent: function (input) {\n    if (input == null) return \"\";\n    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});\n  },\n\n  //decompress from an output of compressToEncodedURIComponent\n  decompressFromEncodedURIComponent:function (input) {\n    if (input == null) return \"\";\n    if (input == \"\") return null;\n    input = input.replace(/ /g, \"+\");\n    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });\n  },\n\n  compress: function (uncompressed) {\n    return LZString._compress(uncompressed, 16, function(a){return f(a);});\n  },\n  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {\n    if (uncompressed == null) return \"\";\n    var i, value,\n        context_dictionary= {},\n        context_dictionaryToCreate= {},\n        context_c=\"\",\n        context_wc=\"\",\n        context_w=\"\",\n        context_enlargeIn= 2, // Compensate for the first entry which should not count\n        context_dictSize= 3,\n        context_numBits= 2,\n        context_data=[],\n        context_data_val=0,\n        context_data_position=0,\n        ii;\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii);\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {\n        context_dictionary[context_c] = context_dictSize++;\n        context_dictionaryToCreate[context_c] = true;\n      }\n\n      context_wc = context_w + context_c;\n      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {\n        context_w = context_wc;\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n          if (context_w.charCodeAt(0)<256) {\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<8 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          } else {\n            value = 1;\n            for (i=0 ; i<context_numBits ; i++) {\n              context_data_val = (context_data_val << 1) | value;\n              if (context_data_position ==bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = 0;\n            }\n            value = context_w.charCodeAt(0);\n            for (i=0 ; i<16 ; i++) {\n              context_data_val = (context_data_val << 1) | (value&1);\n              if (context_data_position == bitsPerChar-1) {\n                context_data_position = 0;\n                context_data.push(getCharFromInt(context_data_val));\n                context_data_val = 0;\n              } else {\n                context_data_position++;\n              }\n              value = value >> 1;\n            }\n          }\n          context_enlargeIn--;\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n          }\n          delete context_dictionaryToCreate[context_w];\n        } else {\n          value = context_dictionary[context_w];\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n\n\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++;\n        context_w = String(context_c);\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== \"\") {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {\n        if (context_w.charCodeAt(0)<256) {\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<8 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        } else {\n          value = 1;\n          for (i=0 ; i<context_numBits ; i++) {\n            context_data_val = (context_data_val << 1) | value;\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = 0;\n          }\n          value = context_w.charCodeAt(0);\n          for (i=0 ; i<16 ; i++) {\n            context_data_val = (context_data_val << 1) | (value&1);\n            if (context_data_position == bitsPerChar-1) {\n              context_data_position = 0;\n              context_data.push(getCharFromInt(context_data_val));\n              context_data_val = 0;\n            } else {\n              context_data_position++;\n            }\n            value = value >> 1;\n          }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits);\n          context_numBits++;\n        }\n        delete context_dictionaryToCreate[context_w];\n      } else {\n        value = context_dictionary[context_w];\n        for (i=0 ; i<context_numBits ; i++) {\n          context_data_val = (context_data_val << 1) | (value&1);\n          if (context_data_position == bitsPerChar-1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n          } else {\n            context_data_position++;\n          }\n          value = value >> 1;\n        }\n\n\n      }\n      context_enlargeIn--;\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits);\n        context_numBits++;\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i=0 ; i<context_numBits ; i++) {\n      context_data_val = (context_data_val << 1) | (value&1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data_position = 0;\n        context_data.push(getCharFromInt(context_data_val));\n        context_data_val = 0;\n      } else {\n        context_data_position++;\n      }\n      value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = (context_data_val << 1);\n      if (context_data_position == bitsPerChar-1) {\n        context_data.push(getCharFromInt(context_data_val));\n        break;\n      }\n      else context_data_position++;\n    }\n    return context_data.join('');\n  },\n\n  decompress: function (compressed) {\n    if (compressed == null) return \"\";\n    if (compressed == \"\") return null;\n    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });\n  },\n\n  _decompress: function (length, resetValue, getNextValue) {\n    var dictionary = [],\n        next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        entry = \"\",\n        result = [],\n        i,\n        w,\n        bits, resb, maxpower, power,\n        c,\n        data = {val:getNextValue(0), position:resetValue, index:1};\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2,2);\n    power=1;\n    while (power!=maxpower) {\n      resb = data.val & data.position;\n      data.position >>= 1;\n      if (data.position == 0) {\n        data.position = resetValue;\n        data.val = getNextValue(data.index++);\n      }\n      bits |= (resb>0 ? 1 : 0) * power;\n      power <<= 1;\n    }\n\n    switch (next = bits) {\n      case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n        c = f(bits);\n        break;\n      case 2:\n        return \"\";\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n      if (data.index > length) {\n        return \"\";\n      }\n\n      bits = 0;\n      maxpower = Math.pow(2,numBits);\n      power=1;\n      while (power!=maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n          data.position = resetValue;\n          data.val = getNextValue(data.index++);\n        }\n        bits |= (resb>0 ? 1 : 0) * power;\n        power <<= 1;\n      }\n\n      switch (c = bits) {\n        case 0:\n          bits = 0;\n          maxpower = Math.pow(2,8);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 1:\n          bits = 0;\n          maxpower = Math.pow(2,16);\n          power=1;\n          while (power!=maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n              data.position = resetValue;\n              data.val = getNextValue(data.index++);\n            }\n            bits |= (resb>0 ? 1 : 0) * power;\n            power <<= 1;\n          }\n          dictionary[dictSize++] = f(bits);\n          c = dictSize-1;\n          enlargeIn--;\n          break;\n        case 2:\n          return result.join('');\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c];\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0);\n        } else {\n          return null;\n        }\n      }\n      result.push(entry);\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0);\n      enlargeIn--;\n\n      w = entry;\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits);\n        numBits++;\n      }\n\n    }\n  }\n};\n  return LZString;\n})();\n\nif (typeof define === 'function' && define.amd) {\n  define(function () { return LZString; });\n} else if( typeof module !== 'undefined' && module != null ) {\n  module.exports = LZString\n}\n", "export const vendorsBaseUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/browser-compilers@0.5.13/dist/';\n\nexport const acornUrl = 'https://cdn.jsdelivr.net/npm/acorn@8.6.0/dist/acorn.min.js';\n\nexport const artTemplateUrl =\n  'https://cdn.jsdelivr.net/npm/art-template@4.13.2/lib/template-web.js';\n\nexport const asciidocUrl =\n  'https://cdn.jsdelivr.net/npm/@asciidoctor/core@2.2.5/dist/browser/asciidoctor.min.js';\n\nexport const assemblyscriptSdkUrl =\n  'https://cdn.jsdelivr.net/npm/assemblyscript@0.19.22/dist/sdk.js';\n\nexport const assemblyscriptLoaderUrl =\n  'https://cdn.jsdelivr.net/npm/@assemblyscript/loader@0.19.22/umd/index.js';\n\nexport const astringUrl = 'https://cdn.jsdelivr.net/npm/astring@1.7.5/dist/astring.min.js';\n\nexport const astroBaseUrl = 'https://cdn.jsdelivr.net/npm/@hatemhosny/astro-internal@0.0.4/';\n\nexport const astroWasmURL = 'https://cdn.jsdelivr.net/npm/@astrojs/compiler@0.9.2/astro.wasm';\n\nexport const autoCompleteUrl =\n  'https://cdn.jsdelivr.net/npm/@tarekraafat/autocomplete.js@10.2.6/dist/autoComplete.min.js';\n\nexport const babelUrl = 'https://cdn.jsdelivr.net/npm/@babel/standalone@7.17.2/babel.min.js';\n\nexport const biwaschemeUrl =\n  'https://cdn.jsdelivr.net/npm/biwascheme@0.7.4/release/biwascheme-min.js';\n\nexport const blocklyCdnBaseUrl = 'https://cdn.jsdelivr.net/npm/blockly@7.20211209.2/';\n\nexport const brythonBaseUrl = 'https://cdn.jsdelivr.net/npm/brython@3.10.4/';\n\nexport const chaiUrl = 'https://cdn.jsdelivr.net/npm/chai@4.3.6/+esm';\n\nexport const chaiTypesUrl = 'https://cdn.jsdelivr.net/npm/@types/chai@4.2.22/index.d.ts';\n\nexport const cjs2esUrl = 'https://cdn.jsdelivr.net/npm/cjs2es@1.1.1/dist/cjs2es.browser.min.js';\n\nexport const clioBaseUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/clio-browser-compiler@0.0.3/public/build/';\n\nexport const coffeeScriptUrl =\n  'https://cdn.jsdelivr.net/npm/coffeescript@2.6.1/lib/coffeescript-browser-compiler-legacy/coffeescript.js';\n\nexport const cppWasmBaseUrl = 'https://cdn.jsdelivr.net/npm/@chriskoch/cpp-wasm@1.0.2';\n\nexport const csstreeUrl = 'https://cdn.jsdelivr.net/npm/css-tree@1.1.3/dist/csstree.min.js';\n\nexport const cytoscapeSvgUrl =\n  'https://cdn.jsdelivr.net/npm/cytoscape-svg@0.4.0/cytoscape-svg.min.js';\n\nexport const cytoscapeUrl = 'https://cdn.jsdelivr.net/npm/cytoscape@3.22.0/dist/cytoscape.min.js';\n\nexport const dotUrl = 'https://cdn.jsdelivr.net/npm/dot@1.1.3/doT.min.js';\n\nexport const ejsUrl = 'https://cdn.jsdelivr.net/npm/ejs@3.1.6/ejs.min.js';\n\nexport const elkjsBaseUrl = 'https://cdn.jsdelivr.net/npm/elkjs@0.7.1/lib/';\n\nexport const emmetMonacoUrl =\n  'https://cdn.jsdelivr.net/npm/emmet-monaco-es@5.0.0/dist/emmet-monaco.min.js';\n\nexport const esModuleShimsUrl =\n  'https://cdn.jsdelivr.net/npm/es-module-shims@1.4.4/dist/es-module-shims.min.js';\n\nexport const flexSearchUrl =\n  'https://cdn.jsdelivr.net/npm/flexsearch@0.7.21/dist/flexsearch.bundle.min.js';\n\nexport const fontAnonymousProUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/anonymous-pro@4.5.9/index.min.css';\n\nexport const fontCascadiaCodeUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/cascadia-code@4.2.1/index.min.css';\n\nexport const fontCodeNewRomanUrl = 'https://fonts.cdnfonts.com/css/code-new-roman-2';\n\nexport const fontComicMonoUrl = 'https://cdn.jsdelivr.net/npm/comic-mono@0.0.1/index.min.css';\n\nexport const fontCourierPrimeUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/courier-prime@4.5.9/index.min.css';\n\nexport const fontDECTerminalModernUrl = 'https://fonts.cdnfonts.com/css/dec-terminal-modern';\n\nexport const fontDejaVuMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/dejavu-mono@4.5.4/index.min.css';\n\nexport const fontFantasqueUrl =\n  'https://cdn.jsdelivr.net/npm/@typopro/web-fantasque-sans-mono@3.7.5/TypoPRO-FantasqueSansMono.css';\n\nexport const fontFiraCodeUrl = 'https://cdn.jsdelivr.net/npm/firacode@6.2.0/distr/fira_code.css';\n\nexport const fontFixedsysUrl = 'https://fonts.cdnfonts.com/css/fixedsys-62';\n\nexport const fontHackUrl = 'https://cdn.jsdelivr.net/npm/hack-font@3.3.0/build/web/hack.css';\n\nexport const fontHermitUrl = 'https://cdn.jsdelivr.net/npm/typeface-hermit@0.0.44/index.min.css';\n\nexport const fontIBMPlexMonoUrl =\n  'https://fonts.googleapis.com/css2?family=IBM+Plex+Mono&display=swap';\n\nexport const fontInconsolataUrl =\n  'https://fonts.googleapis.com/css2?family=Inconsolata&display=swap';\n\nexport const fontIosevkaUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/iosevka@4.5.4/index.min.css';\n\nexport const fontJetbrainsMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/jetbrains-mono@4.5.11/index.min.css';\n\nexport const fontMenloUrl = 'https://fonts.cdnfonts.com/css/menlo';\n\nexport const fontMonofurUrl = 'https://fonts.cdnfonts.com/css/monofur';\n\nexport const fontMonoidUrl =\n  'https://cdn.jsdelivr.net/npm/@typopro/web-monoid@3.7.5/TypoPRO-Monoid.css';\n\nexport const fontNotoUrl = 'https://fonts.googleapis.com/css2?family=Noto+Sans+Mono&display=swap';\n\nexport const fontNovaMonoUrl = 'https://fonts.googleapis.com/css2?family=Nova+Mono&display=swap';\n\nexport const fontOpenDyslexicUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/opendyslexic@4.5.4/index.min.css';\n\nexport const fontProFontWindowsUrl = 'https://fonts.cdnfonts.com/css/profontwindows';\n\nexport const fontRobotoMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/roboto-mono@4.5.8/index.min.css';\n\nexport const fontSFMonoUrl = 'https://fonts.cdnfonts.com/css/sf-mono';\n\nexport const fontSourceCodeProUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/source-code-pro@4.5.12/index.min.css';\n\nexport const fontSpaceMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/space-mono@4.5.10/index.min.css';\n\nexport const fontSudoVarUrl = 'https://fonts.cdnfonts.com/css/sudo-var';\n\nexport const fontUbuntuMonoUrl =\n  'https://cdn.jsdelivr.net/npm/@fontsource/ubuntu-mono@4.5.11/index.min.css';\n\nexport const fontVictorMonoUrl = 'https://cdn.jsdelivr.net/npm/victormono@1.5.4/dist/index.min.css';\n\nexport const fscreenUrl = 'https://cdn.jsdelivr.net/npm/fscreen@1.2.0/dist/fscreen.esm.js';\n\nexport const githubMarkdownCss =\n  'https://cdn.jsdelivr.net/npm/github-markdown-css@5.1.0/github-markdown.min.css';\n\nexport const go2jsBaseUrl = 'https://cdn.jsdelivr.net/npm/@live-codes/go2js@0.3.0/build';\n\nexport const graphreCdnUrl = 'https://cdn.jsdelivr.net/npm/graphre@0.1.3/dist/graphre.js';\n\nexport const handlebarsBaseUrl = 'https://cdn.jsdelivr.net/npm/handlebars@4.7.7/dist/';\n\nexport const highlightjsUrl =\n  'https://cdn.skypack.dev/pin/highlight.js@v11.5.1-ByzFRPBe5lvvwKChRHdq/mode=imports,min/optimized/highlightjs.js';\n\nexport const hintCssUrl = 'https://cdn.jsdelivr.net/npm/hint.css@2.7.0/hint.min.css';\n\nexport const hpccJsCdnUrl = 'https://cdn.jsdelivr.net/npm/@hpcc-js/wasm@1.12.9/dist/index.min.js';\n\nexport const imbaBaseUrl = 'https://cdn.jsdelivr.net/npm/imba@2.0.0-alpha.201/dist/';\n\nexport const jestLiteUrl = 'https://cdn.jsdelivr.net/npm/jest-lite@1.0.0-alpha.4/dist/core.js';\n\nexport const jestTypesUrl = 'https://cdn.jsdelivr.net/npm/@types/jest@27.4.1/index.d.ts';\n\nexport const jsclUrl = 'https://cdn.jsdelivr.net/npm/jscl@0.8.2/jscl.min.js';\n\nexport const jsZipUrl =\n  'https://cdn.skypack.dev/-/jszip@v3.7.1-quihaZrSeNyrwABoIb7Z/dist=es2020,mode=imports,min/optimized/jszip.js';\n\nexport const juliaWasmBaseUrl = 'https://cdn.jsdelivr.net/npm/@chriskoch/julia-wasm@1.0.4';\n\nexport const liquidJsUrl =\n  'https://cdn.jsdelivr.net/npm/liquidjs@9.34.0/dist/liquid.browser.min.js';\n\nexport const localforageUrl =\n  'https://cdn.jsdelivr.net/npm/localforage@1.10.0/dist/localforage.min.js';\n\nexport const luaUrl = 'https://cdn.jsdelivr.net/npm/fengari-web@0.1.4/dist/fengari-web.min.js';\n\nexport const lunaObjViewerStylesUrl =\n  'https://cdn.jsdelivr.net/npm/luna-object-viewer@0.2.0/luna-object-viewer.css';\n\nexport const lunaConsoleStylesUrl =\n  'https://cdn.jsdelivr.net/npm/luna-console@0.2.1/luna-console.css';\n\nexport const malinaUrl = 'https://cdn.jsdelivr.net/npm/malinajs@0.6.52/malina.js';\n\nexport const markedUrl = 'https://cdn.jsdelivr.net/npm/marked@4.0.12/marked.min.js';\n\nexport const mermaidCdnUrl = 'https://cdn.jsdelivr.net/npm/mermaid@9.1.3/dist/mermaid.min.js';\n\nexport const monacoEmacsUrl = 'https://unpkg.com/monaco-emacs@0.3.0/dist/monaco-emacs.js';\n\nexport const monacoVimUrl = 'https://unpkg.com/monaco-vim@0.3.5/dist/monaco-vim.js';\n\nexport const mustacheUrl = 'https://cdn.jsdelivr.net/npm/mustache@4.2.0/mustache.min.js';\n\nexport const nomnomlCdnUrl = 'https://cdn.jsdelivr.net/npm/nomnoml@1.4.0/dist/nomnoml.min.js';\n\nexport const normalizeCssUrl = 'https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css';\n\nexport const nunjucksBaseUrl = 'https://cdn.jsdelivr.net/npm/nunjucks@3.2.3/browser/';\n\nexport const opalBaseUrl = 'https://cdn.opalrb.com/opal/1.4.1/';\n\nexport const parinferUrl =\n  'https://cdn.jsdelivr.net/npm/@chrisoakman/parinfer@3.13.1/parinfer.min.js';\n\nexport const pintoraUrl =\n  'https://cdn.jsdelivr.net/npm/@pintora/standalone@0.1.0/lib/pintora-standalone.umd.min.js';\n\nexport const plotlyCdnUrl = 'https://cdn.jsdelivr.net/npm/plotly.js@2.9.0/dist/plotly.min.js';\n\nexport const postcssImportUrlUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/postcss-import-url@0.1.2/dist/postcss-import-url.js';\n\nexport const prettierBaseUrl = 'https://cdn.jsdelivr.net/npm/prettier@2.5.1/';\n\nexport const prettierPhpUrl =\n  'https://cdn.jsdelivr.net/npm/@prettier/plugin-php@0.18.0/standalone.js';\n\nexport const prismBaseUrl = 'https://cdn.jsdelivr.net/npm/prismjs@1.26.0/components/';\n\nexport const pyodideBaseUrl = 'https://cdn.jsdelivr.net/pyodide/v0.18.1/full/';\n\nexport const qrcodeUrl = 'https://cdn.jsdelivr.net/npm/qrcode-generator@1.4.4/qrcode.min.js';\n\nexport const quillEditorCdnBaseUrl = 'https://cdn.jsdelivr.net/npm/quill@2.0.0-dev.4/dist';\n\nexport const quillHtmlEditUrl =\n  'https://cdn.jsdelivr.net/npm/quill-html-edit-button@2.2.7/dist/quill.htmlEditButton.min.js';\n\nexport const quillBlotFormaterUrl =\n  'https://cdn.jsdelivr.net/npm/quill-blot-formatter@1.0.5/dist/quill-blot-formatter.min.js';\n\nexport const quillBetterTableBaseUrl =\n  'https://cdn.jsdelivr.net/npm/quill-better-table@1.2.10/dist';\n\nexport const requireUrl = 'https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js';\n\nexport const rescriptCompilerUrl = 'https://cdn.rescript-lang.org/v9.1.2/compiler.js';\n\nexport const rescriptReactUrl = 'https://cdn.rescript-lang.org/v9.1.2/%40rescript/react/cmij.js';\n\nexport const rescriptStdLibBaseUrl = 'https://cdn.jsdelivr.net/npm/@rescript/std@9.1.3/lib/es6/';\n\nexport const resetCssUrl = 'https://cdn.jsdelivr.net/npm/reset-css@5.0.1/reset.min.css';\n\nexport const riotBaseUrl = 'https://cdn.jsdelivr.net/npm/riot@6.1.2/';\n\nexport const snackbarUrl =\n  'https://cdn.jsdelivr.net/npm/@snackbar/core@1.7.0/dist/snackbar.min.css';\n\nexport const spacingJsUrl = 'https://cdn.jsdelivr.net/npm/spacingjs@1.0.7/dist/bundle.min.js';\n\nexport const sqlFormatterUrl =\n  'https://cdn.jsdelivr.net/npm/sql-formatter@4.0.2/dist/sql-formatter.min.js';\n\nexport const sqljsBaseUrl = 'https://cdn.jsdelivr.net/npm/sql.js@1.6.2/dist/';\n\nexport const stencilUrl =\n  'https://cdn.jsdelivr.net/npm/@stencil/core@2.13.0/compiler/stencil.min.js';\n\nexport const svgbobWasmCdnUrl =\n  'https://cdn.jsdelivr.net/npm/svgbob-wasm@0.4.1-a0/svgbob_wasm_bg.wasm';\n\nexport const tagifyBaseUrl = 'https://cdn.jsdelivr.net/npm/@yaireo/tagify@4.9.6/dist/';\n\nexport const tailwindcssUrl =\n  'https://cdn.jsdelivr.net/npm/@live-codes/tailwindcss-browser-plugin@0.3.2/dist/tailwindcss.umd.min.js';\n\nexport const tauPrologBaseUrl = 'https://cdn.jsdelivr.net/npm/tau-prolog@0.3.2/modules/';\n\nexport const twigUrl = 'https://cdn.jsdelivr.net/npm/twig@1.15.4/twig.min.js';\n\nexport const typescriptUrl = 'https://cdn.jsdelivr.net/npm/typescript@4.5.5/lib/typescript.min.js';\n\nexport const uniterUrl = 'https://cdn.jsdelivr.net/npm/uniter@2.17.0/dist/uniter.js';\n\nexport const vegaCdnUrl = 'https://cdn.jsdelivr.net/npm/vega@5.21.0/build/vega.min.js';\n\nexport const vegaLiteCdnUrl = 'https://cdn.jsdelivr.net/npm/vega-lite@5.2.0/build/vega-lite.min.js';\n\nexport const vueSfcLoaderCdnBaseUrl = 'https://cdn.jsdelivr.net/npm/vue3-sfc-loader@0.8.4/dist/';\n\nexport const wabtjsUrl = 'https://cdn.jsdelivr.net/npm/wabt@1.0.26/index.js';\n\nexport const waveDromBaseUrl = 'https://cdn.jsdelivr.net/npm/wavedrom@2.9.0/';\n", "import { Config, Language, Processor } from '../models';\n\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\n  let timeout: any;\n\n  return (...args: unknown[]) => {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\n  };\n};\n\nexport const decodeHTML = (html: string) => {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\n\nexport const encodeHTML = (html: string) =>\n  html\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&#39;')\n    .replace(/\"/g, '&#34;');\n\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\n\nexport const escapeCode = (code: string, slash = true) =>\n  code\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\n    .replace(/`/g, '\\\\`')\n    .replace(/<\\/script>/g, '<\\\\/script>');\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const pipe = (...fns: Function[]) =>\n  fns.reduce(\n    (f, g) =>\n      (...args: any) =>\n        g(f(...args)),\n  );\n\n// replace non-alphanumeric with underscore\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\n\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n// added safari (on mac & ios): monaco editor is broken on safari\nexport const isMobile = () => {\n  let mobile = false;\n  const userAgent = navigator.userAgent.toLowerCase();\n  (function (a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4),\n      )\n    ) {\n      mobile = true;\n    }\n  })(userAgent || navigator.vendor || (window as any).opera);\n\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\n\n  return mobile || safari;\n};\n\nexport const isRelativeUrl = (url?: string) =>\n  !url?.startsWith('http') && !url?.startsWith('data:');\n\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\n\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\n\nexport const objectMap = (\n  obj: Record<string, any>,\n  fn: (value: any, key: string, index: number) => any,\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\n\nexport const objectFilter = (\n  obj: Record<string, any>,\n  predicate: (value: any, key: string, index: number) => any,\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\n\nexport const copyToClipboard = (text: string) => {\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      // eslint-disable-next-line no-console\n      console.warn('Copy to clipboard failed.', ex);\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const stringToValidJson = (str: string) =>\n  str\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\n    })\n    .replace(\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\n      function quoteNonQuoted(matchedStr) {\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\n      },\n    )\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\n\nexport const stringify = (obj: any, pretty = false) => {\n  try {\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\n  } catch {\n    return '';\n  }\n};\n\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\n\nexport const downloadFile = (filename: string, extension: string, content: string) => {\n  const a = document.createElement('a');\n  a.style.display = 'none';\n  a.href = content;\n  a.download = safeName(filename) + '.' + extension;\n  a.click();\n  a.remove();\n};\n\nexport const loadScript = (url: string, name?: string) =>\n  new Promise((resolve, reject) => {\n    if (name && (window as any)[name]) {\n      return resolve((window as any)[name]);\n    }\n\n    const script = document.createElement('script');\n    script.src = url;\n    script.async = true;\n    const removeEventListeners = () => {\n      script.removeEventListener('load', onLoad);\n      script.removeEventListener('error', onError);\n    };\n    const onLoad = () => {\n      removeEventListeners();\n      if (!name) {\n        return resolve('loaded: ' + url);\n      }\n      const i = setInterval(() => {\n        if ((window as any)[name]) {\n          clearInterval(i);\n          return resolve((window as any)[name]);\n        }\n      }, 5);\n    };\n    const onError = () => {\n      removeEventListeners();\n      reject('failed to load: ' + url);\n    };\n    script.addEventListener('load', onLoad);\n    script.addEventListener('error', onError);\n    document.head.appendChild(script);\n  });\n\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\n  if (id && document.getElementById(id)) return;\n  const stylesheet = document.createElement('link');\n  stylesheet.rel = 'stylesheet';\n  stylesheet.href = url;\n  stylesheet.id = id || 'styles-' + getRandomString();\n  document.head.insertBefore(\n    stylesheet,\n    insertBefore ? document.querySelector(insertBefore) : null,\n  );\n};\n\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\n\nexport const getDate = () => {\n  let date = new Date();\n  const offset = date.getTimezoneOffset();\n  date = new Date(date.getTime() - offset * 60 * 1000);\n  return date.toISOString().split('T')[0];\n};\n\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\n  fetch(input, init).then(handleFetchError);\n\nexport const blobToBase64 = (file: Blob): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\n  const CHUNK_SZ = 0x8000;\n  const c = [];\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\n  }\n  return btoa(c.join(''));\n};\n\nexport const base64ToUint8Array = (str: string) =>\n  new Uint8Array(\n    atob(str)\n      .split('')\n      .map((c) => c.charCodeAt(0)),\n  );\n\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const getWorkerDataURL = (url: string) => {\n  const content = `importScripts(\"${url}\");`;\n  return 'data:text/javascript;base64,' + btoa(content);\n};\n\nexport const removeComments = (src: string) =>\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\n\nexport const removeStrings = (src: string) =>\n  src\n    .replace(/'[^\\n']*'/gm, \"''\")\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\n    .replace(/`[^`]*`/gm, '``');\n\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\n\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\n  ...(config.customSettings as any)[language],\n});\n\nexport const getValidUrl = (url?: string) => {\n  if (!url) return null;\n  let validUrl = null;\n  if (url.startsWith('http') || url.startsWith('data:')) {\n    try {\n      validUrl = new URL(url).href;\n    } catch {\n      try {\n        validUrl = new URL(decodeURIComponent(url)).href;\n      } catch {\n        //\n      }\n    }\n  }\n  return validUrl;\n};\n\nexport const runOrContinue =\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\n  async (x: T): Promise<T> => {\n    try {\n      const result = await fn(x);\n      return result;\n    } catch (error) {\n      if (typeof catchFn === 'function') {\n        catchFn(error);\n      }\n      return x;\n    }\n  };\n\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\n\nexport const isInIframe = () => {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return true;\n  }\n};\n\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const lightningcss: ProcessorSpecs = {\n  name: 'lightningcss',\n  title: 'Lightning CSS',\n  isPostcssPlugin: false,\n  compiler: {\n    url: vendorsBaseUrl + 'lightningcss/lightningcss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-lightningcss-compiler.js}}');\n      return (self as any).createLightningcssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const postcss: ProcessorSpecs = {\n  name: 'postcss',\n  title: 'Processors:',\n  isPostcssPlugin: false,\n  compiler: {\n    url: vendorsBaseUrl + 'postcss/postcss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-postcss-compiler.js}}');\n      return (self as any).createPostcssCompiler();\n    },\n  },\n  editor: 'style',\n  hidden: true,\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { postcssImportUrlUrl, tailwindcssUrl, vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\nexport const autoprefixer: ProcessorSpecs = {\n  name: 'autoprefixer',\n  title: 'Autoprefixer',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'autoprefixer/autoprefixer.js',\n    factory: (config) =>\n      (self as any).autoprefixer.autoprefixer({\n        ...getLanguageCustomSettings('autoprefixer', config),\n      }),\n  },\n  editor: 'style',\n};\n\nexport const cssnano: ProcessorSpecs = {\n  name: 'cssnano',\n  title: 'cssnano',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'cssnano/cssnano.js',\n    factory: () => {\n      const nanoPlugins = (self as any).cssnano.cssnanoPresetDefault().plugins;\n      const postcssPlugins = [];\n      for (const plugin of nanoPlugins) {\n        const [processor, opts] = plugin;\n        if (\n          typeof opts === 'undefined' ||\n          (typeof opts === 'object' && !opts.exclude) ||\n          (typeof opts === 'boolean' && opts === true)\n        ) {\n          postcssPlugins.push(processor(opts));\n        }\n      }\n      return postcssPlugins;\n    },\n  },\n  editor: 'style',\n};\n\nexport const postcssImportUrl: ProcessorSpecs = {\n  name: 'postcssImportUrl',\n  title: 'Import Url',\n  isPostcssPlugin: true,\n  compiler: {\n    url: postcssImportUrlUrl,\n    factory: (config) =>\n      (self as any).postcssImportUrl({\n        ...getLanguageCustomSettings('postcssImportUrl', config),\n      }),\n  },\n  editor: 'style',\n  hidden: true,\n};\n\nexport const postcssPresetEnv: ProcessorSpecs = {\n  name: 'postcssPresetEnv',\n  title: 'Preset Env',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'postcss-preset-env/postcss-preset-env.js',\n    factory: (config) =>\n      (self as any).postcssPresetEnv.postcssPresetEnv({\n        autoprefixer: false,\n        ...getLanguageCustomSettings('postcssPresetEnv', config),\n      }),\n  },\n  editor: 'style',\n};\n\nexport const purgecss: ProcessorSpecs = {\n  name: 'purgecss',\n  title: 'PurgeCSS',\n  isPostcssPlugin: true,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'purgecss/purgecss.js',\n    factory: (config, _baseUrl, options) =>\n      (self as any).purgecss.purgecss({\n        ...getLanguageCustomSettings('purgecss', config),\n        content: [\n          {\n            raw: `<template>${options.html}\\n<script>${config.script.content}</script></template>`,\n            extension: 'html',\n          },\n        ],\n      }),\n  },\n  editor: 'style',\n};\n\nexport const tailwindcss: ProcessorSpecs = {\n  name: 'tailwindcss',\n  title: 'Tailwind CSS',\n  isPostcssPlugin: true,\n  needsHTML: true,\n  compiler: {\n    url: tailwindcssUrl,\n    factory: (config, _baseUrl, options) =>\n      (self as any).tailwindcss.tailwindcss({\n        ...(self as any).tailwindcss.defaultConfig,\n        ...getLanguageCustomSettings('tailwindcss', config),\n        content: [\n          {\n            raw: `<template>${options.html}\\n<script>${config.script.content}</script></template>`,\n            extension: 'html',\n          },\n        ],\n      }),\n  },\n  editor: 'style',\n};\n\nexport const tokencss: ProcessorSpecs = {\n  name: 'tokencss',\n  title: 'Token CSS',\n  isPostcssPlugin: true,\n  compiler: {\n    url: vendorsBaseUrl + 'tokencss/tokencss.js',\n    factory: (config) => {\n      const customSettings = getLanguageCustomSettings('tokencss', config);\n      if (Object.keys(customSettings).length === 0) {\n        customSettings.$schema = 'https://tokencss.com/schema@0.0.1';\n        customSettings.extends = '@tokencss/core/preset';\n      }\n      const extendTokens = (base: any, tokens: any) => {\n        const result = JSON.parse(JSON.stringify(base));\n        Object.keys(tokens).forEach((key) => {\n          result[key] =\n            typeof tokens[key] !== 'object' || Array.isArray(tokens[key])\n              ? tokens[key]\n              : {\n                  ...result[key],\n                  ...tokens[key],\n                };\n        });\n        return result;\n      };\n      const tokensConfig = customSettings.extends?.includes('@tokencss/core/preset')\n        ? extendTokens((self as any).tokencss.preset, customSettings)\n        : customSettings;\n\n      return (self as any).tokencss.tokencss({ config: tokensConfig });\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const unocss: ProcessorSpecs = {\n  name: 'unocss',\n  title: 'UnoCSS',\n  isPostcssPlugin: false,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'unocss/unocss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-unocss-compiler.js}}');\n      return (self as any).createUnocssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import type { ProcessorSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const windicss: ProcessorSpecs = {\n  name: 'windicss',\n  title: 'Windi CSS',\n  isPostcssPlugin: false,\n  needsHTML: true,\n  compiler: {\n    url: vendorsBaseUrl + 'windicss/windicss.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:processor-windicss-compiler.js}}');\n      return (self as any).createWindicssCompiler();\n    },\n  },\n  editor: 'style',\n};\n", "import { ProcessorSpecs } from '../models';\nimport { lightningcss } from './lightningcss';\nimport {\n  postcss,\n  autoprefixer,\n  postcssPresetEnv,\n  tailwindcss,\n  postcssImportUrl,\n  tokencss,\n  purgecss,\n  cssnano,\n} from './postcss';\nimport { unocss } from './unocss';\nimport { windicss } from './windicss';\n\nexport const processors: ProcessorSpecs[] = [\n  ...[\n    tailwindcss,\n    windicss,\n    unocss,\n    tokencss,\n    purgecss,\n    postcssImportUrl,\n    autoprefixer,\n    postcssPresetEnv,\n    lightningcss,\n    cssnano,\n  ],\n  // keep postcss as last processor\n  postcss,\n];\n", "import { Compiler, Language, CustomSettings, Config, Processor } from '../models';\nimport { getLanguageCustomSettings } from '../utils';\nimport { highlightjsUrl } from '../vendors';\nimport { languages } from './languages';\nimport { processors } from './processors';\n\nexport const getLanguageByAlias = (alias: string = ''): Language | undefined => {\n  if (!alias) return;\n  const aliasLowerCase = alias?.toLowerCase();\n  return languages.find(\n    (language) =>\n      language.name === aliasLowerCase ||\n      language.title.toLowerCase() === aliasLowerCase ||\n      language.extensions.map((ext) => ext.toLowerCase()).includes(aliasLowerCase),\n  )?.name;\n};\n\nexport const getLanguageTitle = (language: Language) => {\n  const languageSpecs = languages.find((lang) => lang.name === language);\n  return languageSpecs?.longTitle || languageSpecs?.title || language.toUpperCase();\n};\n\nexport const getLanguageEditorId = (alias: string = '') =>\n  languages.find((lang) => lang.name === getLanguageByAlias(alias))?.editor;\n\nexport const getLanguageExtension = (alias: string = '') =>\n  languages.find((lang) => lang.name === getLanguageByAlias(alias))?.extensions[0];\n\nexport const getLanguageSpecs = (alias: string = '') =>\n  languages.find((lang) => lang.name === getLanguageByAlias(alias));\n\nexport const getLanguageCompiler = (alias: string = ''): Compiler | undefined => {\n  const languageSpecs = getLanguageSpecs(alias);\n  let compiler = languageSpecs?.compiler;\n  if (typeof compiler === 'string') {\n    compiler = getLanguageCompiler(compiler);\n  }\n  return compiler;\n};\n\nexport const mapLanguage = (language: Language): Language =>\n  getLanguageSpecs(language)?.editorLanguage || language;\n\nexport const languageIsEnabled = (language: Language, config: Config) => {\n  const lang = getLanguageByAlias(language);\n  if (!lang) return false;\n  if (!config.languages) return true;\n  return config.languages?.map(getLanguageByAlias).filter(Boolean).includes(lang);\n};\n\nexport const processorIsEnabled = (processor: Processor, config: Config) => {\n  if (!processors.map((p) => p.name).includes(processor)) return false;\n  if (!config.languages) return true;\n  return config.languages.includes(processor);\n};\n\nexport const processorIsActivated = (processor: Processor, config: Config) =>\n  config.processors.includes(processor);\n\n/**\n * returns a string with names of enabled processors/postcss plugins\n * for the supplied language (separated by hyphens)\n */\nexport const getActivatedProcessors = (language: Language, config: Config) => {\n  const editorId = getLanguageEditorId(language);\n  if (!editorId) return '';\n  return processors\n    .filter((p) => p.editor === editorId)\n    .map((p) => p.name)\n    .filter((p) => processorIsEnabled(p, config))\n    .filter((p) => processorIsActivated(p, config))\n    .join('-');\n};\n\nexport const escapeCode = (code: string, slash = true) =>\n  code\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\n    .replace(/`/g, '\\\\`')\n    .replace(/<\\/script>/g, '<\\\\/script>');\n\nexport const getCustomSettings = (\n  language: Language | Processor,\n  config: Config,\n): CustomSettings => {\n  const settings: CustomSettings = {\n    ...getLanguageCustomSettings(language, config),\n  };\n  if (getLanguageEditorId(language) === 'markup') {\n    settings.template = config.customSettings.template;\n  }\n  return settings;\n};\n\nexport const detectLanguage = async (code: string, languages: Language[]) => {\n  (window as any).HighlightJS =\n    (window as any).HighlightJS || (await import(highlightjsUrl)).default;\n  const result = (window as any).HighlightJS.highlightAuto(code, languages);\n  return {\n    language: result.language as Language,\n    secondBest: result.secondBest.language as Language,\n  };\n};\n\nexport { getLanguageCustomSettings };\n", "import { prettierBaseUrl, prettierPhpUrl, vendorsBaseUrl } from '../vendors';\n\nexport const prettierUrl = prettierBaseUrl + 'standalone.min.js';\nexport const parserPlugins = {\n  babel: prettierBaseUrl + 'parser-babel.js',\n  glimmer: prettierBaseUrl + 'parser-glimmer.js',\n  html: prettierBaseUrl + 'parser-html.js',\n  markdown: prettierBaseUrl + 'parser-markdown.js',\n  postcss: prettierBaseUrl + 'parser-postcss.js',\n  php: prettierPhpUrl,\n  pug: vendorsBaseUrl + 'prettier/parser-pug.js',\n};\n", "import { LanguageSpecs } from '../../models';\nimport { babelUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const babel: LanguageSpecs = {\n  name: 'babel',\n  title: 'Babel',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: babelUrl,\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).Babel.transform(code, {\n          filename: 'script.tsx',\n          presets: [['env', { modules: false }], 'typescript', 'react'],\n          ...getLanguageCustomSettings('babel', config),\n        }).code,\n  },\n  extensions: ['es', 'babel'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const css: LanguageSpecs = {\n  name: 'css',\n  title: 'CSS',\n  info: false,\n  parser: {\n    name: 'css',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['css'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const haml: LanguageSpecs = {\n  name: 'haml',\n  title: 'Haml',\n  compiler: {\n    url: vendorsBaseUrl + 'clientside-haml-js/haml.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-haml-compiler.js}}');\n      return (self as any).createHamlCompiler();\n    },\n  },\n  extensions: ['haml'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const html: LanguageSpecs = {\n  name: 'html',\n  title: 'HTML',\n  info: false,\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['html', 'htm'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const javascript: LanguageSpecs = {\n  name: 'javascript',\n  title: 'JS',\n  longTitle: 'JavaScript',\n  info: false,\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n  },\n  extensions: ['js'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const jsx: LanguageSpecs = {\n  name: 'jsx',\n  title: 'JSX',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'typescript',\n  extensions: ['jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const tsx: LanguageSpecs = {\n  name: 'tsx',\n  title: 'TSX',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'typescript',\n  extensions: ['tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const less: LanguageSpecs = {\n  name: 'less',\n  title: 'Less',\n  parser: {\n    name: 'less',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'less/less.js',\n    factory:\n      () =>\n      async (code, { config }) =>\n        (\n          await (window as any).less.render(code, {\n            ...getLanguageCustomSettings('less', config),\n          })\n        ).css,\n  },\n  extensions: ['less'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { markedUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const markdown: LanguageSpecs = {\n  name: 'markdown',\n  title: 'Markdown',\n  parser: {\n    name: 'markdown',\n    pluginUrls: [parserPlugins.markdown, parserPlugins.html],\n  },\n  compiler: {\n    url: markedUrl,\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).marked.parse(code, {\n          ...getLanguageCustomSettings('markdown', config),\n        }),\n  },\n  extensions: ['md', 'markdown', 'mdown', 'mkdn'],\n  editor: 'markup',\n  preset: 'github-markdown-css',\n};\n", "import { Config, Language, CompileOptions } from '../models';\n\nexport const compileInCompiler = async (\n  content: string,\n  language: Language | undefined,\n  config: Config,\n  options: CompileOptions = {},\n  worker: Worker = self as unknown as Worker,\n): Promise<string> =>\n  new Promise((resolve) => {\n    if (!content || !language || !config) {\n      return resolve(content || '');\n    }\n    const handler = async function (ev: MessageEvent) {\n      const message = ev.data.payload;\n      if (\n        ev.data.trigger === 'compileInCompiler' &&\n        message?.content === content &&\n        message?.language === language\n      ) {\n        worker.removeEventListener('message', handler);\n        resolve(message.compiled);\n      }\n    };\n    worker.addEventListener('message', handler);\n    worker.postMessage({\n      type: 'compileInCompiler',\n      payload: { content, language, config, options },\n    });\n  });\n", "import type { CompilerFunction, LanguageSpecs } from '../../models';\n// eslint-disable-next-line import/no-internal-modules\nimport { compileInCompiler } from '../../compiler/compile-in-compiler';\nimport { escapeCode, getLanguageCustomSettings } from '../../utils';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const runOutsideWorker: CompilerFunction = async (code: string, { config, worker }) =>\n  new Promise(async (resolve) => {\n    if (!code) return resolve('');\n    const [mdx, { default: remarkGfm }] = await Promise.all([\n      import(vendorsBaseUrl + 'mdx/mdx.js'),\n      import(vendorsBaseUrl + 'remark-gfm/remark-gfm.js'),\n    ]);\n\n    const compiled = (\n      await mdx.compile(code, {\n        remarkPlugins: [remarkGfm],\n        ...getLanguageCustomSettings('mdx', config),\n      })\n    ).value;\n\n    // TODO: improve this\n    const removeComponentDeclaration = (str: string) =>\n      str\n        .replace(/, {[^}]*} = _components/g, '')\n        .replace(/const {[^:]*} = props.components[^;]*;/g, '');\n\n    const jsx = removeComponentDeclaration(compiled);\n    const result = `import React from \"react\";\nimport ReactDOM from \"react-dom\";\n${escapeCode(jsx, false)}\nReactDOM.render(<MDXContent />, document.body);\n`;\n    const js = await compileInCompiler(result, 'jsx', config, {}, worker);\n    resolve(`<script type=\"module\">${js}</script>`);\n  });\n\nexport const mdx: LanguageSpecs = {\n  name: 'mdx',\n  title: 'MDX',\n  parser: {\n    name: 'markdown',\n    pluginUrls: [parserPlugins.markdown, parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    runOutsideWorker,\n    compiledCodeLanguage: 'javascript',\n    imports: {\n      'react/jsx-runtime': 'https://esm.sh/react/jsx-runtime',\n    },\n  },\n  extensions: ['mdx'],\n  editor: 'markup',\n  editorLanguage: 'markdown',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const pug: LanguageSpecs = {\n  name: 'pug',\n  title: 'Pug',\n  parser: {\n    name: 'pug',\n    pluginUrls: [parserPlugins.pug],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'pug/pug.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-pug-compiler.js}}');\n      return (self as any).createPugCompiler();\n    },\n  },\n  extensions: ['pug', 'jade'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const scss: LanguageSpecs = {\n  name: 'scss',\n  title: 'SCSS',\n  parser: {\n    name: 'scss',\n    pluginUrls: [parserPlugins.postcss],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'sass/sass.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-scss-compiler.js}}');\n      return (self as any).createScssCompiler();\n    },\n  },\n  extensions: ['scss'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const svelte: LanguageSpecs = {\n  name: 'svelte',\n  title: 'Svelte',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: vendorsBaseUrl + 'svelte/svelte-compiler.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-svelte-compiler.js}}');\n      return (self as any).createSvelteCompiler();\n    },\n  },\n  extensions: ['svelte'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const stylus: LanguageSpecs = {\n  name: 'stylus',\n  title: 'Stylus',\n  compiler: {\n    url: vendorsBaseUrl + 'stylus/stylus.min.js',\n    factory: () => async (code) => (window as any).stylus.render(code),\n  },\n  extensions: ['styl'],\n  editor: 'style',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { typescriptUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const typescriptOptions = {\n  target: 'es2015',\n  jsx: 'react',\n  allowUmdGlobalAccess: true,\n  esModuleInterop: true,\n};\n\nexport const typescript: LanguageSpecs = {\n  name: 'typescript',\n  title: 'TS',\n  longTitle: 'TypeScript',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: typescriptUrl,\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n  },\n  extensions: ['ts', 'typescript'],\n  editor: 'script',\n};\n", "import { LanguageSpecs } from '../../models';\nimport { vueSfcLoaderCdnBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst loaderCdnUrl = vueSfcLoaderCdnBaseUrl + 'vue3-sfc-loader.min.js';\nconst vueCdnUrl = 'https://cdn.jsdelivr.net/npm/vue@3';\n\nexport const vue: LanguageSpecs = {\n  name: 'vue',\n  title: 'Vue 3',\n  longTitle: 'Vue 3 SFC',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-vue-compiler.js}}');\n      return (self as any).createVueCompiler();\n    },\n    scripts: [vueCdnUrl, loaderCdnUrl],\n    imports: {\n      vue: vueCdnUrl + '/dist/vue.runtime.esm-browser.prod.js',\n    },\n  },\n  extensions: ['vue', 'vue3'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vueSfcLoaderCdnBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst loaderCdnUrl = vueSfcLoaderCdnBaseUrl + 'vue2-sfc-loader.js';\nconst vueCdnUrl = 'https://cdn.jsdelivr.net/npm/vue@2';\n\nexport const vue2: LanguageSpecs = {\n  name: 'vue2',\n  title: 'Vue 2',\n  longTitle: 'Vue 2 SFC',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-vue-compiler.js}}');\n      return (self as any).createVue2Compiler();\n    },\n    scripts: [vueCdnUrl, loaderCdnUrl],\n    imports: {\n      vue: vueCdnUrl + '/dist/vue.runtime.esm-browser.prod.js',\n    },\n  },\n  extensions: ['vue2'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { stencilUrl, vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const stencil: LanguageSpecs = {\n  name: 'stencil',\n  title: 'Stencil',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    url: stencilUrl,\n    factory:\n      () =>\n      async (code, { config }) => {\n        const result = await (window as any).stencil.transpile(code, {\n          // TranspileOptions interface\n          // https://github.com/ionic-team/stencil/blob/1b8b7ec21f2622d05c9aafa417b2abdd4f2597a4/src/declarations/stencil-public-compiler.ts#L2311\n          sourceMap: false,\n          target: 'es2019',\n          ...getLanguageCustomSettings('stencil', config),\n        });\n        return result.code;\n      },\n    types: {\n      '@stencil/core': {\n        url: vendorsBaseUrl + 'types/stencil-core.d.ts',\n        declareAsModule: false,\n      },\n    },\n  },\n  extensions: ['stencil.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\nexport const livescript: LanguageSpecs = {\n  name: 'livescript',\n  title: 'LiveScript',\n  compiler: {\n    url: vendorsBaseUrl + 'livescript/livescript-min.js',\n    factory:\n      () =>\n      async (code, { config }) =>\n        (window as any).require('livescript').compile(code, {\n          bare: true,\n          ...getLanguageCustomSettings('livescript', config),\n        }),\n    scripts: [vendorsBaseUrl + 'livescript/prelude-browser-min.js'],\n  },\n  extensions: ['ls'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { assemblyscriptLoaderUrl, vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const assemblyscript: LanguageSpecs = {\n  name: 'assemblyscript',\n  title: 'AS',\n  longTitle: 'AssemblyScript',\n  parser: {\n    name: 'babel-ts',\n    pluginUrls: [parserPlugins.babel],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-assemblyscript-compiler.js}}');\n      return (self as any).createAssemblyscriptCompiler();\n    },\n    scripts: ({ baseUrl }) => [\n      assemblyscriptLoaderUrl,\n      baseUrl + '{{hash:lang-assemblyscript-script.js}}',\n    ],\n    scriptType: 'application/wasm-uint8',\n    compiledCodeLanguage: 'wat',\n    types: {\n      assemblyscript: {\n        url: vendorsBaseUrl + 'types/assemblyscript.d.ts',\n        declareAsModule: false,\n        autoload: true,\n      },\n    },\n  },\n  extensions: ['as', 'ts'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { brythonBaseUrl } from '../../vendors';\nimport { escapeCode, getLanguageCustomSettings } from '../../utils';\n\nconst brythonUrl = brythonBaseUrl + 'brython.min.js';\nconst stdlibUrl = brythonBaseUrl + 'brython_stdlib.js';\n\nexport const python: LanguageSpecs = {\n  name: 'python',\n  title: 'Python',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ compiled, config }) => {\n      const { autoloadStdlib, ...options } = getLanguageCustomSettings('python', config);\n      const importsPattern = /^(?:from[ ]+(\\S+)[ ]+)?import[ ]+(\\S+)(?:[ ]+as[ ]+\\S+)?[ ]*$/gm;\n      const stdlib = autoloadStdlib !== false && compiled.match(importsPattern) ? [stdlibUrl] : [];\n      const loader = `window.addEventListener(\"load\", () => {brython(${JSON.stringify(options)})})`;\n      const loaderUrl = 'data:text/plain;base64,' + btoa(loader);\n      const compiledCode = `window.addEventListener(\"load\", () => {\n        const content = __BRYTHON__.python_to_js(\\`${escapeCode(compiled)}\\`);\n        parent.postMessage({type: \"compiled\", payload: {language: \"python\", content}}, \"*\");\n      });`;\n      const compiledCodeUrl = 'data:text/plain;base64,' + btoa(compiledCode);\n      return [brythonUrl, ...stdlib, loaderUrl, compiledCodeUrl];\n    },\n    scriptType: 'text/python',\n  },\n  extensions: ['py'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { opalBaseUrl } from '../../vendors';\nimport { getLanguageCustomSettings } from '../../utils';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nconst getImports = (code: string, requireMap: { [mod: string]: string } = {}) =>\n  Array.from(\n    new Set(\n      [...code.matchAll(new RegExp(/^\\s*self\\.\\$require\\(\"(\\S+)\"\\);/gm))]\n        .map((arr) => arr[1])\n        .map((mod) => mod.split('/')[0])\n        .filter((mod) => requireMap.hasOwnProperty(mod) || mod !== 'opal') // already loaded\n        .map((mod) => requireMap[mod] || `${opalBaseUrl + mod}.min.js`),\n    ),\n  );\n\nexport const ruby: LanguageSpecs = {\n  name: 'ruby',\n  title: 'Ruby',\n  compiler: {\n    url: opalBaseUrl + 'opal.min.js',\n    factory: () => {\n      importScripts(opalBaseUrl + 'opal-parser.min.js');\n      // eslint-disable-next-line camelcase\n      (self as any).Opal.config.unsupported_features_severity = 'ignore';\n      (self as any).Opal.load('opal-parser');\n      return async (code, { config }) => {\n        const { autoloadStdlib, requireMap, ...options } = getLanguageCustomSettings(\n          'ruby',\n          config,\n        );\n        return (self as any).Opal.compile(code, options);\n      };\n    },\n    scripts: ({ compiled, config }) => {\n      const { autoloadStdlib, requireMap } = getLanguageCustomSettings('ruby', config);\n      const imports = getImports(compiled, requireMap);\n      const stdlib = autoloadStdlib !== false ? imports : [];\n      return [opalBaseUrl + 'opal.min.js', ...stdlib];\n    },\n  },\n  extensions: ['rb'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { uniterUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const php: LanguageSpecs = {\n  name: 'php',\n  title: 'PHP',\n  parser: {\n    name: 'php',\n    pluginUrls: [parserPlugins.php],\n  },\n  compiler: {\n    factory: () => async (code) => {\n      code = code.trim();\n      if (code.startsWith('<?php')) {\n        code = code.replace('<?php', '/* <?php */');\n        if (code.endsWith('?>')) {\n          code = code.replace('?>', '/* ?> */');\n        }\n      }\n      return code;\n    },\n    scripts: [uniterUrl],\n    deferScripts: true,\n    scriptType: 'text/x-uniter-php',\n    compiledCodeLanguage: 'php',\n  },\n  extensions: ['php'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { luaUrl, vendorsBaseUrl } from '../../vendors';\n\nconst luaFmtUrl = vendorsBaseUrl + 'lua-fmt/lua-fmt.js';\n\nexport const lua: LanguageSpecs = {\n  name: 'lua',\n  title: 'Lua',\n  formatter: {\n    factory: () => {\n      (self as any).importScripts(luaFmtUrl);\n      return async (code, cursorOffset) => ({\n        formatted: (self as any).luaFmt.formatText(code),\n        cursorOffset,\n      });\n    },\n  },\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: [luaUrl],\n    scriptType: 'application/lua',\n    compiledCodeLanguage: 'lua',\n  },\n  extensions: ['lua'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const solid: LanguageSpecs = {\n  name: 'solid',\n  title: 'Solid',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['babel'],\n    url: vendorsBaseUrl + 'babel-preset-solid/babel-preset-solid.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-solid-compiler.js}}');\n      return (self as any).createSolidCompiler();\n    },\n    types: {\n      'solid-js': {\n        url: vendorsBaseUrl + 'types/solid-js.d.ts',\n        declareAsModule: false,\n      },\n    },\n  },\n  extensions: ['solid.jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const solidTsx: LanguageSpecs = {\n  name: 'solid.tsx',\n  title: 'Solid (TS)',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: 'solid',\n  extensions: ['solid.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { liquidJsUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const liquid: LanguageSpecs = {\n  name: 'liquid',\n  title: 'Liquid',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: liquidJsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-liquid-compiler.js}}');\n      return (self as any).createLiquidCompiler();\n    },\n  },\n  extensions: ['liquid', 'liquidjs'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { ejsUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const ejs: LanguageSpecs = {\n  name: 'ejs',\n  title: 'EJS',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: ejsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-ejs-compiler.js}}');\n      return (self as any).createEjsCompiler();\n    },\n  },\n  extensions: ['ejs'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { handlebarsBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst url = handlebarsBaseUrl + 'handlebars.min.js';\nexport const runtimeUrl = handlebarsBaseUrl + 'handlebars.runtime.min.js';\n\nexport const handlebars: LanguageSpecs = {\n  name: 'handlebars',\n  title: 'Handlebars',\n  parser: {\n    name: 'glimmer',\n    pluginUrls: [parserPlugins.glimmer],\n  },\n  compiler: {\n    url,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-handlebars-compiler.js}}');\n      return (self as any).createHandlebarsCompiler();\n    },\n  },\n  extensions: ['hbs', 'handlebars'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { dotUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const dot: LanguageSpecs = {\n  name: 'dot',\n  title: 'doT',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: dotUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-dot-compiler.js}}');\n      return (self as any).createDotCompiler();\n    },\n  },\n  extensions: ['dot'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { nunjucksBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst url = nunjucksBaseUrl + 'nunjucks.min.js';\nexport const runtimeUrl = nunjucksBaseUrl + 'nunjucks-slim.min.js';\n\nexport const nunjucks: LanguageSpecs = {\n  name: 'nunjucks',\n  title: 'Nunjucks',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-nunjucks-compiler.js}}');\n      return (self as any).createNunjucksCompiler();\n    },\n  },\n  extensions: ['njk'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { go2jsBaseUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nexport const go: LanguageSpecs = {\n  name: 'go',\n  title: 'Go',\n  formatter: {\n    factory: () => {\n      const url = go2jsBaseUrl + '/index.js';\n      importScripts(url);\n      return async (value: string) => ({\n        formatted: await (window as any).go2js.format(value, go2jsBaseUrl),\n        cursorOffset: 0,\n      });\n    },\n  },\n  compiler: {\n    url: go2jsBaseUrl + '/index.js',\n    factory: () => async (code) => {\n      if (!code) return '';\n      try {\n        const jsCode = await (window as any).go2js.compile(code, go2jsBaseUrl);\n        return jsCode;\n      } catch (err) {\n        // eslint-disable-next-line no-console\n        console.error(err);\n        return '';\n      }\n    },\n  },\n  extensions: ['go', 'golang'],\n  editor: 'script',\n};\n", "/* eslint-disable camelcase */\nimport type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl, wabtjsUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nconst formatterUrl = vendorsBaseUrl + 'wast-refmt/wast-refmt.js';\nexport const scriptType = 'application/wasm-uint8';\n\nexport const wat: LanguageSpecs = {\n  name: 'wat',\n  title: 'WAT',\n  longTitle: 'WebAssembly Text',\n  formatter: {\n    factory: () => {\n      importScripts(formatterUrl);\n      return async (value: string) => {\n        let formatted = value;\n        try {\n          formatted = (self as any).wastRefmt.format(value);\n        } catch (error) {\n          // eslint-disable-next-line no-console\n          console.warn('failed parsing WAT', error);\n        }\n        return {\n          formatted,\n          cursorOffset: 0,\n        };\n      };\n    },\n  },\n  compiler: {\n    url: wabtjsUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-wat-compiler.js}}');\n      return (self as any).createWatCompiler();\n    },\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-wat-script.js}}'],\n    scriptType,\n    compiledCodeLanguage: 'Binary',\n  },\n  extensions: ['wat', 'wast', 'webassembly', 'wasm'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { riotBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst compilerCdnUrl = riotBaseUrl + 'riot+compiler.min.js';\nconst cdnUrl = riotBaseUrl + 'riot.min.js';\n\nexport const riot: LanguageSpecs = {\n  name: 'riot',\n  title: 'Riot.js',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: compilerCdnUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-riot-compiler.js}}');\n      return (self as any).createRiotCompiler();\n    },\n    scripts: [cdnUrl],\n    scriptType: 'module',\n  },\n  extensions: ['riot', 'riotjs'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { sqlFormatterUrl, sqljsBaseUrl } from '../../vendors';\n\ndeclare const importScripts: (...args: string[]) => void;\n\nexport const scriptType = 'application/json';\n\nexport const sql: LanguageSpecs = {\n  name: 'sql',\n  title: 'SQL',\n  formatter: {\n    factory: () => {\n      importScripts(sqlFormatterUrl);\n      return async (value: string) => ({\n        formatted: await (self as any).sqlFormatter.format(value, { linesBetweenQueries: 2 }),\n        cursorOffset: 0,\n      });\n    },\n  },\n  compiler: {\n    url: sqljsBaseUrl + 'sql-wasm.min.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-sql-compiler.js}}');\n      return (self as any).createSqlCompiler();\n    },\n    scripts: ({ baseUrl }) => [baseUrl + '{{hash:lang-sql-script.js}}'],\n    scriptType,\n    compiledCodeLanguage: 'json',\n  },\n  extensions: ['sql', 'sqlite', 'sqlite3'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\nimport { typescriptOptions } from '../typescript';\nimport { getLanguageCustomSettings } from '../utils';\nimport { parserPlugins } from '../prettier';\n\nexport const reactNativeWebUrl = vendorsBaseUrl + 'react-native-web/react-native-web.js';\n\nexport const reactNative: LanguageSpecs = {\n  name: 'react-native',\n  title: 'RN',\n  longTitle: 'React Native',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['typescript'],\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n    imports: {\n      react: reactNativeWebUrl,\n      'react-native': reactNativeWebUrl,\n    },\n  },\n  extensions: ['react-native.jsx'],\n  editor: 'script',\n  editorLanguage: 'javascript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { typescriptOptions } from '../typescript';\nimport { getLanguageCustomSettings } from '../utils';\nimport { parserPlugins } from '../prettier';\nimport { reactNativeWebUrl } from './lang-react-native';\n\nexport const reactNativeTsx: LanguageSpecs = {\n  name: 'react-native-tsx',\n  title: 'RN (TSX)',\n  longTitle: 'React Native (TSX)',\n  parser: {\n    name: 'babel',\n    pluginUrls: [parserPlugins.babel, parserPlugins.html],\n  },\n  compiler: {\n    dependencies: ['typescript'],\n    factory:\n      () =>\n      async (code, { config, language }) =>\n        (window as any).ts.transpile(code, {\n          ...typescriptOptions,\n          ...getLanguageCustomSettings('typescript', config),\n          ...getLanguageCustomSettings(language, config),\n        }),\n    imports: {\n      react: reactNativeWebUrl,\n      'react-native': reactNativeWebUrl,\n    },\n  },\n  extensions: ['react-native.tsx'],\n  editor: 'script',\n  editorLanguage: 'typescript',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { twigUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const twig: LanguageSpecs = {\n  name: 'twig',\n  title: 'Twig',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: twigUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-twig-compiler.js}}');\n      return (self as any).createTwigCompiler();\n    },\n  },\n  extensions: ['twig'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { astroBaseUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nconst compilerURL = astroBaseUrl + 'compiler.min.js';\n\nexport const astro: LanguageSpecs = {\n  name: 'astro',\n  title: 'Astro',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    url: compilerURL,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-astro-compiler.js}}');\n      return (self as any).createAstroCompiler();\n    },\n  },\n  extensions: ['astro'],\n  editor: 'markup',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const malina: LanguageSpecs = {\n  name: 'malina',\n  title: 'Malina.js',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html, parserPlugins.babel],\n  },\n  compiler: {\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-malina-compiler.js}}');\n      return (self as any).createMalinaCompiler();\n    },\n  },\n  extensions: ['xht'],\n  editor: 'script',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { vendorsBaseUrl } from '../../vendors';\n\nexport const cdnUrl = vendorsBaseUrl + 'jscpp/JSCPP.es5.min.js';\n\nexport const cpp: LanguageSpecs = {\n  name: 'cpp',\n  title: 'C++',\n  compiler: {\n    factory: () => async (code) => code,\n    scripts: ({ baseUrl }) => [cdnUrl, baseUrl + '{{hash:lang-cpp-script.js}}'],\n    scriptType: 'text/cpp',\n    compiledCodeLanguage: 'cpp',\n  },\n  extensions: ['cpp', 'c', 'C', 'cp', 'cxx', 'c++', 'cppm', 'ixx', 'ii', 'hpp', 'h'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { clioBaseUrl } from '../../vendors';\n\nexport const clio: LanguageSpecs = {\n  name: 'clio',\n  title: 'Clio',\n  compiler: {\n    url: clioBaseUrl + 'compile.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-clio-compiler.js}}');\n      return (self as any).createClioCompiler();\n    },\n    scripts: [clioBaseUrl + 'exec.js'],\n  },\n  extensions: ['clio'],\n  editor: 'script',\n  editorLanguage: 'coffeescript',\n};\n", "import { CompilerFunction, LanguageSpecs } from '../../models';\nimport { parserPlugins } from '../prettier';\n\nexport const runOutsideWorker: CompilerFunction = async (code: string, { baseUrl, config }) => {\n  const { diagramsCompiler } = await import(baseUrl + '{{hash:lang-diagrams-compiler-esm.js}}');\n  return diagramsCompiler(code, { config });\n};\n\nexport const diagrams: LanguageSpecs = {\n  name: 'diagrams',\n  title: 'Diagrams',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    factory: () => async (code) => code || '',\n    runOutsideWorker,\n  },\n  extensions: ['diagrams', 'diagram', 'graph', 'plt'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { imbaBaseUrl } from '../../vendors';\n\nexport const imba: LanguageSpecs = {\n  name: 'imba',\n  title: 'Imba',\n  compiler: {\n    url: imbaBaseUrl + 'compiler.js',\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-imba-compiler.js}}');\n      return (self as any).createImbaCompiler();\n    },\n    imports: {\n      imba: imbaBaseUrl + 'imba.mjs',\n    },\n  },\n  extensions: ['imba'],\n  editor: 'script',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { mustacheUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const mustache: LanguageSpecs = {\n  name: 'mustache',\n  title: 'Mustache',\n  parser: {\n    name: 'glimmer',\n    pluginUrls: [parserPlugins.glimmer],\n  },\n  compiler: {\n    url: mustacheUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-mustache-compiler.js}}');\n      return (self as any).createMustacheCompiler();\n    },\n  },\n  extensions: ['mustache'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import type { LanguageSpecs } from '../../models';\nimport { artTemplateUrl } from '../../vendors';\nimport { parserPlugins } from '../prettier';\n\nexport const artTemplate: LanguageSpecs = {\n  name: 'art-template',\n  title: 'art',\n  longTitle: 'art-template',\n  parser: {\n    name: 'html',\n    pluginUrls: [parserPlugins.html],\n  },\n  compiler: {\n    url: artTemplateUrl,\n    factory: (_config, baseUrl) => {\n      (self as any).importScripts(baseUrl + '{{hash:lang-art-template-compiler.js}}');\n      return (self as any).createArtTemplateCompiler();\n    },\n  },\n  extensions: ['art', 'art-template'],\n  editor: 'markup',\n  editorLanguage: 'html',\n};\n", "import { CssPreset } from '../models';\nimport { githubMarkdownCss, normalizeCssUrl, resetCssUrl, vendorsBaseUrl } from '../vendors';\n\nexport const cssPresets: CssPreset[] = [\n  {\n    id: 'normalize.css',\n    name: 'Normalize.css',\n    url: normalizeCssUrl,\n  },\n  {\n    id: 'reset-css',\n    name: 'CSS reset',\n    url: resetCssUrl,\n  },\n  {\n    id: 'github-markdown-css',\n    name: 'github-markdown-css',\n    url: githubMarkdownCss,\n  },\n  {\n    id: 'asciidoctor.css',\n    name: 'Asciidoctor CSS',\n    url: vendorsBaseUrl + 'asciidoctor.css/asciidoctor.css',\n  },\n];\n", "export const allowedOrigin = (origin = location.origin) =>\n  Boolean(\n    origin &&\n      (origin.endsWith('livecodes.io') ||\n        origin.endsWith('livecodes.pages.dev') ||\n        origin.endsWith('localpen.io') ||\n        origin.endsWith('localpen.pages.dev') ||\n        origin.startsWith('http://127.0.0.1') ||\n        origin.startsWith('http://localhost')),\n  );\n\nexport const whitelistTarget = (url: string) =>\n  new RegExp(/^(?:(?:http|https):\\/\\/(?:\\w+.)?)(githubusercontent.com|jsbin.com|)\\/(?:.*)/g).test(\n    url,\n  );\n", "import {\n  compressToEncodedURIComponent,\n  decompressFromEncodedURIComponent,\n  decompressFromBase64,\n} from 'lz-string';\n\nexport const compress = compressToEncodedURIComponent;\nexport const decompress = (compressed: string, isJSON = true) => {\n  const decoded = decompressFromEncodedURIComponent(compressed);\n  if (decoded) {\n    if (!isJSON) return decoded;\n    try {\n      if (JSON.parse(decoded)) {\n        return decoded;\n      }\n    } catch {\n      //\n    }\n  }\n  // for backward compatibility\n  return decompressFromBase64(compressed);\n};\n", "import { CDN } from '../models';\n\nexport const modulesService = {\n  getModuleUrl: (\n    moduleName: string,\n    { isModule = true, defaultCDN = 'jspm' }: { isModule?: boolean; defaultCDN?: CDN } = {},\n  ) => {\n    const getCdnUrl = (modName: string) => {\n      const post = isModule && modName.startsWith('unpkg:') ? '?module' : '';\n      for (const i of TEMPLATES) {\n        const [pattern, template] = i;\n        if (pattern.test(modName)) {\n          return modName.replace(pattern, template) + post;\n        }\n      }\n      return null;\n    };\n\n    const moduleUrl = getCdnUrl(moduleName) || getCdnUrl(defaultCDN + ':' + moduleName);\n    if (moduleUrl) {\n      return moduleUrl;\n    }\n\n    return isModule\n      ? 'https://jspm.dev/' + moduleName\n      : 'https://cdn.jsdelivr.net/npm/' + moduleName;\n  },\n\n  getModuleInfoUrl: (moduleName: string) => `https://api.npms.io/v2/search?q=${moduleName}&size=1`,\n};\n\n// based on https://github.com/neoascetic/rawgithack/blob/master/web/rawgithack.js\nconst TEMPLATES: Array<[RegExp, string]> = [\n  [/^(jspm:)(.+)/i, 'https://jspm.dev/$2'],\n\n  [/^(skypack:)(.+)/i, 'https://cdn.skypack.dev/$2'],\n\n  [/^(jsdelivr:)(.+)/i, 'https://cdn.jsdelivr.net/npm/$2'],\n\n  [/^(jsdelivr.gh:)(.+)/i, 'https://cdn.jsdelivr.net/gh/$2'],\n\n  [/^(esm.run:)(.+)/i, 'https://esm.run/$2'],\n\n  [/^(esm.sh:)(.+)/i, 'https://esm.sh/$2'],\n\n  [/^(esbuild:)(.+)/i, 'https://esbuild.vercel.app/$2'],\n\n  [/^(bundle.run:)(.+)/i, 'https://bundle.run/$2'],\n\n  [/^(unpkg:)(.+)/i, 'https://unpkg.com/$2'],\n\n  [\n    /^(github:)(.[^\\/]+?)\\/(.[^\\/]+?)\\/(?!releases\\/)(?:(?:blob|raw)\\/)?(.+?\\/.+)/i,\n    'https://raw.githack.com/$2/$3/$4',\n  ],\n  [\n    /^(github:)([^\\/]+\\/[^\\/]+\\/[^\\/]+|[0-9A-Za-z-]+\\/[0-9a-f]+\\/raw)\\/(.+)/i,\n    'https://raw.githack.com/$2/$3',\n  ],\n  [/^(gist\\.github:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\n\n  [\n    /^(gitlab:)([^\\/]+.*\\/[^\\/]+)\\/(?:raw|blob)\\/(.+?)(?:\\?.*)?$/i,\n    'https://gl.githack.com/$2/raw/$3',\n  ],\n  [\n    /^(bitbucket:)([^\\/]+\\/[^\\/]+)\\/(?:raw|src)\\/(.+?)(?:\\?.*)?$/i,\n    'https://bb.githack.com/$2/raw/$3',\n  ],\n\n  // snippet file URL from web interface, with revision\n  [\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/]+)\\/revisions\\/([^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\n    'https://bb.githack.com/!api/2.0/snippets/$2/$3/files/$4',\n  ],\n  // snippet file URL from web interface, no revision\n  [\n    /^(bitbucket:)snippets\\/([^\\/]+\\/[^\\/\\#\\?]+)(?:\\?[^#]*)?(?:\\#file-(.+?))$/i,\n    'https://bb.githack.com/!api/2.0/snippets/$2/HEAD/files/$3',\n  ],\n  // snippet file URLs from REST API\n  [\n    /^(bitbucket:)\\!api\\/2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\n  ],\n  [\n    /^(api\\.bitbucket:)2.0\\/snippets\\/([^\\/]+\\/[^\\/]+\\/[^\\/]+)\\/files\\/(.+?)(?:\\?.*)?$/i,\n    'https://bb.githack.com/!api/2.0/snippets/$2/files/$3',\n  ],\n\n  [/^(rawgit:)(.+?\\/[0-9a-f]+\\/raw\\/(?:[0-9a-f]+\\/)?.+)$/i, 'https://gist.githack.com/$2'],\n  [\n    /^(rawgit:)([^\\/]+\\/[^\\/]+\\/[^\\/]+|[0-9A-Za-z-]+\\/[0-9a-f]+\\/raw)\\/(.+)/i,\n    'https://raw.githack.com/$2/$3',\n  ],\n];\n", "import { Config } from '../models';\nimport { allowedOrigin } from './allowed-origin';\n\nconst dpasteGetUrl = 'https://dpaste.com/';\nconst dpastePostUrl = 'https://dpaste.com/api/v2/';\nconst apiUrl = 'https://api2.livecodes.io/share';\n\ntype ConfigWithResult = Partial<Config & { result: string }>;\ninterface ShareService {\n  getProject: (id: string) => Promise<ConfigWithResult>;\n  shareProject: (config: ConfigWithResult) => Promise<string>;\n}\n\nconst dpasteService = {\n  getProject: async (id: string): Promise<ConfigWithResult> => {\n    try {\n      const res = await fetch(dpasteGetUrl + id + '.txt');\n      if (!res.ok) return {};\n      return JSON.parse(await res.text());\n    } catch (error) {\n      return {};\n    }\n  },\n  shareProject: async (config: ConfigWithResult): Promise<string> => {\n    try {\n      const res = await fetch(dpastePostUrl, {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'User-Agent': 'LiveCodes / https://livecodes.io/',\n        },\n        body: `content=${encodeURIComponent(JSON.stringify(config))}&title=${encodeURIComponent(\n          config.title || '',\n        )}&syntax=json&expiry_days=365`,\n      });\n      if (!res.ok) return '';\n      const url = await res.text();\n      return url.replace(dpasteGetUrl, '');\n    } catch (error) {\n      return '';\n    }\n  },\n};\n\nconst apiService = {\n  getProject: async (id: string): Promise<ConfigWithResult> => {\n    // for backward compatibility\n    if (id.length < 11) return dpasteService.getProject(id);\n\n    if (!allowedOrigin()) return {};\n    try {\n      const res = await fetch(apiUrl + '?id=' + id);\n      if (!res.ok) return {};\n      return JSON.parse(await res.text());\n    } catch (error) {\n      return {};\n    }\n  },\n  shareProject: async (config: ConfigWithResult): Promise<string> => {\n    if (!allowedOrigin()) return '';\n    try {\n      const res = await fetch(apiUrl, {\n        method: 'POST',\n        mode: 'cors',\n        body: JSON.stringify(config),\n      });\n      if (!res.ok) return '';\n      return res.text();\n    } catch (error) {\n      return '';\n    }\n  },\n};\n\nexport const shareService: ShareService = allowedOrigin() ? apiService : dpasteService;\n", "import type { Config } from '../models';\nimport { modulesService } from '../services';\nimport { removeComments, removeCommentsAndStrings } from '../utils';\n\nexport const importsPattern =\n  /(import\\s+?(?:(?:(?:[\\w*\\s{},\\$]*)\\s+from\\s+?)|))((?:\".*?\")|(?:'.*?'))([\\s]*?(?:;|$|))/g;\n\nexport const dynamicImportsPattern = /(import\\s*?\\(\\s*?((?:\".*?\")|(?:'.*?'))\\s*?\\))/g;\n\nexport const getImports = (code: string) =>\n  [\n    ...[...removeComments(code).matchAll(new RegExp(importsPattern))],\n    ...[...removeComments(code).matchAll(new RegExp(dynamicImportsPattern))],\n  ].map((arr) => arr[2].replace(/\"/g, '').replace(/'/g, ''));\n\nconst isBare = (mod: string) =>\n  !mod.startsWith('https://') &&\n  !mod.startsWith('http://') &&\n  !mod.startsWith('.') &&\n  !mod.startsWith('/') &&\n  !mod.startsWith('data:') &&\n  !mod.startsWith('blob:');\n\nexport const createImportMap = (code: string, config: Config) =>\n  getImports(code)\n    .map((libName) => {\n      if (!isBare(libName)) {\n        return {};\n      } else {\n        const key = Object.keys(config.imports).find(\n          (mod) => mod === libName || libName.startsWith(mod + '/'),\n        );\n        if (key) {\n          return { [key]: config.imports[key] };\n        }\n        return {\n          [libName]: modulesService.getModuleUrl(libName, {\n            defaultCDN: config?.customSettings?.defaultCDN,\n          }),\n        };\n      }\n    })\n    .reduce((acc, curr) => ({ ...acc, ...curr }), {} as Record<string, string>);\n\nexport const hasImports = (code: string) => getImports(code).length > 0;\n\nexport const hasExports = (code: string) =>\n  new RegExp(/(^export\\s)|([\\s|;]export\\s)/).test(removeCommentsAndStrings(code));\n\nexport const hasAwait = (code: string) =>\n  new RegExp(/(^await\\s)|([\\s|;]await\\s)/).test(removeCommentsAndStrings(code));\n\nexport const isModuleScript = (code: string) =>\n  hasImports(code) || hasExports(code) || hasAwait(code);\n\nexport const replaceImports = (code: string, config: Config) => {\n  const importMap = createImportMap(code, config);\n  return code.replace(new RegExp(importsPattern), (statement) => {\n    const libName = statement\n      .replace(new RegExp(importsPattern), '$2')\n      .replace(/\"/g, '')\n      .replace(/'/g, '');\n\n    const key = Object.keys(importMap).find(\n      (mod) => mod === libName || libName.startsWith(mod + '/'),\n    );\n    if (!key) {\n      return statement;\n    }\n    return statement.replace(key, importMap[key]);\n  });\n};\n\nexport const styleimportsPattern =\n  /(?:@import\\s+?)((?:\".*?\")|(?:'.*?')|(?:url\\('.*?'\\))|(?:url\\(\".*?\"\\)))(.*)?;/g;\n\nexport const hasStyleImports = (code: string) => new RegExp(styleimportsPattern).test(code);\n\nexport const replaceStyleImports = (code: string) =>\n  code.replace(new RegExp(styleimportsPattern), (statement, match, media) => {\n    const url: string = match\n      .replace(/\"/g, '')\n      .replace(/'/g, '')\n      .replace(/url\\(/g, '')\n      .replace(/\\)/g, '');\n    const modified =\n      '@import \"' +\n      modulesService.getModuleUrl(url, { isModule: false, defaultCDN: 'jsdelivr' }) +\n      '\";';\n    const mediaQuery = media?.trim();\n    return !isBare(url)\n      ? statement\n      : mediaQuery\n      ? `@media ${mediaQuery} {\\n${modified}\\n}`\n      : modified;\n  });\n\n// based on https://github.com/sveltejs/svelte-repl/blob/master/src/workers/bundler/plugins/commonjs.js\nexport const cjs2esm = (code: string) => {\n  const strippedCode = removeComments(code);\n  if (!/\\b(require|module|exports)\\b/.test(strippedCode)) return code;\n  const requirePattern = /(?:^|\\s)require(?:\\s*)\\((?:\\s*)('(.*?)'|\"(.*?)\")(?:\\s*)\\)/g;\n\n  const getRequires = (str: string) =>\n    [...str.matchAll(new RegExp(requirePattern))].map((arr) =>\n      arr[1].replace(/\"/g, '').replace(/'/g, ''),\n    );\n\n  const requires = getRequires(strippedCode);\n\n  if (requires.length === 0) return code;\n\n  const imports = requires\n    .map((id, i) =>\n      [\n        `import __requires_${i}_default from '${id}';`,\n        `import * as __requires_${i} from '${id}';`,\n      ].join('\\n'),\n    )\n    .join('\\n');\n  const lookup = `const __requires_lookup = { ${requires\n    .map((id, i) => `'${id}': __requires_${i}_default || __requires_${i}`)\n    .join(', ')} };`;\n\n  const require = `window.require = window.require || ((id) => {\n\tif (id in __requires_lookup) return __requires_lookup[id];\n\tthrow new Error(\\`Cannot require modules dynamically (\\${id})\\`);\n});`;\n\n  return [\n    imports,\n    lookup,\n    require,\n    `const exports = {}; const module = { exports };`,\n    code,\n    `export default module.exports;`,\n  ].join('\\n\\n');\n};\n", "import { hasStyleImports, replaceStyleImports } from '../../compiler';\nimport { CompileOptions, CompilerFunction, Config, Processor, ProcessorSpecs } from '../../models';\nimport { escapeCode, getAbsoluteUrl } from '../../utils';\nimport { processors } from '../processors';\nimport { processorIsEnabled } from '../utils';\n\nconst getSpecs = (pluginName: Processor) => processors.find((specs) => specs.name === pluginName);\n\n(self as any).createPostcssCompiler = (): CompilerFunction => {\n  const postCssOptions = { from: undefined };\n\n  const loadedPlugins: { [key in Processor]?: ProcessorSpecs['compiler']['factory'] } = {};\n\n  const loadPlugin = (pluginName: Processor, baseUrl: string) => {\n    const specs = getSpecs(pluginName);\n    if (!specs || loadedPlugins[pluginName] != null) return;\n    try {\n      if (specs.compiler.url) {\n        (self as any).importScripts(getAbsoluteUrl(specs.compiler.url, baseUrl));\n      }\n      loadedPlugins[pluginName] = specs.compiler.factory;\n    } catch (err) {\n      throw new Error('Failed to load PostCSS plugin: ' + pluginName);\n    }\n  };\n\n  const getEnabledPluginNames = (code: string, config: Config) => {\n    const configPlugins = config.processors.filter((p) => getSpecs(p)?.isPostcssPlugin);\n    const isEnabled = (pluginName: Processor) =>\n      (processorIsEnabled(pluginName, config) && configPlugins.includes(pluginName)) ||\n      (pluginName === 'postcssImportUrl' &&\n        hasStyleImports(code) &&\n        config.customSettings.postcssImportUrl !== false);\n    return processors.map((plugin) => plugin.name).filter(isEnabled);\n  };\n\n  const getPlugins = (code: string, config: Config, baseUrl: string, options: CompileOptions) => {\n    const pluginNames = getEnabledPluginNames(code, config);\n    pluginNames.forEach((pluginName) => loadPlugin(pluginName, baseUrl));\n    return processors\n      .filter((specs) => pluginNames.includes(specs.name))\n      .map((specs) => loadedPlugins[specs.name]?.(config, baseUrl, options))\n      .flat(); // allow plugins to have arrays of plugins\n  };\n\n  const prepareCode = (code: string) => escapeCode(replaceStyleImports(code));\n\n  return async function process(code, { config, baseUrl, options }): Promise<string> {\n    if (!config || !baseUrl) return code;\n    const plugins = getPlugins(code, config, baseUrl, options);\n    const pluginNames = getEnabledPluginNames(code, config);\n    if (pluginNames.includes('tokencss')) {\n      code = '@inject \"tokencss:base\";\\n' + code;\n    }\n    return (await (self as any).postcss.postcss(plugins).process(prepareCode(code), postCssOptions))\n      .css;\n  };\n};\n"],
  "mappings": "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",
  "names": ["require_lz_string", "__commonJSMin", "exports", "module", "LZString", "f", "keyStrBase64", "keyStrUriSafe", "baseReverseDic", "getBaseValue", "alphabet", "character", "input", "res", "a", "index", "compressed", "uncompressed", "buf", "i", "TotalLen", "current_value", "result", "c", "bitsPerChar", "getCharFromInt", "value", "context_dictionary", "context_dictionaryToCreate", "context_c", "context_wc", "context_w", "context_enlargeIn", "context_dictSize", "context_numBits", "context_data", "context_data_val", "context_data_position", "ii", "length", "resetValue", "getNextValue", "dictionary", "next", "enlargeIn", "dictSize", "numBits", "entry", "w", "bits", "resb", "maxpower", "power", "data", "vendorsBaseUrl", "artTemplateUrl", "assemblyscriptLoaderUrl", "astroBaseUrl", "babelUrl", "brythonBaseUrl", "clioBaseUrl", "dotUrl", "ejsUrl", "githubMarkdownCss", "go2jsBaseUrl", "handlebarsBaseUrl", "imbaBaseUrl", "liquidJsUrl", "markedUrl", "mustacheUrl", "normalizeCssUrl", "nunjucksBaseUrl", "opalBaseUrl", "postcssImportUrlUrl", "prettierBaseUrl", "prettierPhpUrl", "resetCssUrl", "riotBaseUrl", "sqlFormatterUrl", "sqljsBaseUrl", "stencilUrl", "tailwindcssUrl", "twigUrl", "typescriptUrl", "uniterUrl", "vueSfcLoaderCdnBaseUrl", "escapeCode", "code", "slash", "isRelativeUrl", "url", "getAbsoluteUrl", "baseUrl", "getLanguageCustomSettings", "language", "config", "lightningcss", "vendorsBaseUrl", "_config", "baseUrl", "postcss", "vendorsBaseUrl", "_config", "baseUrl", "autoprefixer", "vendorsBaseUrl", "config", "getLanguageCustomSettings", "cssnano", "nanoPlugins", "postcssPlugins", "plugin", "processor", "opts", "postcssImportUrl", "postcssImportUrlUrl", "postcssPresetEnv", "purgecss", "_baseUrl", "options", "tailwindcss", "tailwindcssUrl", "tokencss", "customSettings", "extendTokens", "base", "tokens", "result", "key", "tokensConfig", "unocss", "vendorsBaseUrl", "_config", "baseUrl", "windicss", "vendorsBaseUrl", "_config", "baseUrl", "processors", "tailwindcss", "windicss", "unocss", "tokencss", "purgecss", "postcssImportUrl", "autoprefixer", "postcssPresetEnv", "lightningcss", "cssnano", "postcss", "processorIsEnabled", "processor", "config", "processors", "p", "prettierUrl", "prettierBaseUrl", "parserPlugins", "prettierPhpUrl", "vendorsBaseUrl", "babel", "parserPlugins", "babelUrl", "code", "config", "getLanguageCustomSettings", "css", "parserPlugins", "code", "haml", "vendorsBaseUrl", "_config", "baseUrl", "html", "parserPlugins", "code", "javascript", "parserPlugins", "code", "jsx", "parserPlugins", "tsx", "parserPlugins", "less", "parserPlugins", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "markdown", "parserPlugins", "markedUrl", "code", "config", "getLanguageCustomSettings", "compileInCompiler", "content", "language", "config", "options", "worker", "resolve", "handler", "ev", "message", "runOutsideWorker", "code", "config", "worker", "resolve", "mdx", "remarkGfm", "vendorsBaseUrl", "compiled", "getLanguageCustomSettings", "jsx", "str", "result", "escapeCode", "js", "compileInCompiler", "parserPlugins", "pug", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "scss", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "svelte", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "stylus", "vendorsBaseUrl", "code", "typescriptOptions", "typescript", "parserPlugins", "typescriptUrl", "code", "config", "language", "getLanguageCustomSettings", "loaderCdnUrl", "vueSfcLoaderCdnBaseUrl", "vueCdnUrl", "vue", "parserPlugins", "_config", "baseUrl", "loaderCdnUrl", "vueSfcLoaderCdnBaseUrl", "vueCdnUrl", "vue2", "parserPlugins", "_config", "baseUrl", "stencil", "parserPlugins", "stencilUrl", "code", "config", "getLanguageCustomSettings", "vendorsBaseUrl", "livescript", "vendorsBaseUrl", "code", "config", "getLanguageCustomSettings", "assemblyscript", "parserPlugins", "_config", "baseUrl", "assemblyscriptLoaderUrl", "vendorsBaseUrl", "brythonUrl", "brythonBaseUrl", "stdlibUrl", "getImports", "code", "requireMap", "arr", "mod", "opalBaseUrl", "ruby", "config", "autoloadStdlib", "options", "getLanguageCustomSettings", "compiled", "imports", "stdlib", "php", "parserPlugins", "code", "uniterUrl", "luaFmtUrl", "vendorsBaseUrl", "solid", "parserPlugins", "vendorsBaseUrl", "_config", "baseUrl", "solidTsx", "parserPlugins", "liquid", "parserPlugins", "liquidJsUrl", "_config", "baseUrl", "ejs", "parserPlugins", "ejsUrl", "_config", "baseUrl", "url", "handlebarsBaseUrl", "runtimeUrl", "handlebars", "parserPlugins", "_config", "baseUrl", "dot", "parserPlugins", "dotUrl", "_config", "baseUrl", "url", "nunjucksBaseUrl", "runtimeUrl", "nunjucks", "parserPlugins", "_config", "baseUrl", "go", "url", "go2jsBaseUrl", "value", "code", "err", "formatterUrl", "vendorsBaseUrl", "compilerCdnUrl", "riotBaseUrl", "cdnUrl", "riot", "parserPlugins", "_config", "baseUrl", "scriptType", "sql", "sqlFormatterUrl", "value", "sqljsBaseUrl", "_config", "baseUrl", "reactNativeWebUrl", "vendorsBaseUrl", "reactNative", "parserPlugins", "code", "config", "language", "typescriptOptions", "getLanguageCustomSettings", "reactNativeTsx", "parserPlugins", "code", "config", "language", "typescriptOptions", "getLanguageCustomSettings", "reactNativeWebUrl", "twig", "parserPlugins", "twigUrl", "_config", "baseUrl", "compilerURL", "astroBaseUrl", "astro", "parserPlugins", "_config", "baseUrl", "malina", "parserPlugins", "_config", "baseUrl", "cdnUrl", "vendorsBaseUrl", "clio", "clioBaseUrl", "_config", "baseUrl", "runOutsideWorker", "code", "baseUrl", "config", "diagramsCompiler", "diagrams", "parserPlugins", "imba", "imbaBaseUrl", "_config", "baseUrl", "mustache", "parserPlugins", "mustacheUrl", "_config", "baseUrl", "artTemplate", "parserPlugins", "artTemplateUrl", "_config", "baseUrl", "cssPresets", "normalizeCssUrl", "resetCssUrl", "githubMarkdownCss", "vendorsBaseUrl", "allowedOrigin", "origin", "import_lz_string", "modulesService", "moduleName", "isModule", "defaultCDN", "getCdnUrl", "modName", "post", "i", "TEMPLATES", "pattern", "template", "moduleUrl", "dpasteGetUrl", "dpastePostUrl", "apiUrl", "dpasteService", "id", "res", "config", "apiService", "allowedOrigin", "shareService", "isBare", "mod", "styleimportsPattern", "hasStyleImports", "code", "replaceStyleImports", "statement", "match", "media", "url", "modified", "modulesService", "mediaQuery", "isBare", "getSpecs", "pluginName", "processors", "specs", "postCssOptions", "loadedPlugins", "loadPlugin", "baseUrl", "getAbsoluteUrl", "getEnabledPluginNames", "code", "config", "configPlugins", "p", "isEnabled", "processorIsEnabled", "hasStyleImports", "plugin", "getPlugins", "options", "pluginNames", "prepareCode", "escapeCode", "replaceStyleImports", "plugins"]
}
