{
  "version": 3,
  "sources": ["../../src/livecodes/config/default-config.ts", "../../src/livecodes/utils/utils.ts", "../../src/livecodes/UI/embed-ui.ts"],
  "sourcesContent": ["import { Config } from '../models';\n\nexport const defaultConfig: Config = {\n  title: 'Untitled Project',\n  description: '',\n  tags: [],\n  autoupdate: true,\n  autosave: false,\n  delay: 1500,\n  formatOnsave: false,\n  mode: 'full',\n  theme: 'dark',\n  recoverUnsaved: true,\n  showSpacing: false,\n  readonly: false,\n  allowLangChange: true,\n  activeEditor: undefined,\n  languages: undefined,\n  markup: {\n    language: 'html',\n    content: '',\n  },\n  style: {\n    language: 'css',\n    content: '',\n  },\n  script: {\n    language: 'javascript',\n    content: '',\n  },\n  stylesheets: [],\n  scripts: [],\n  cssPreset: '',\n  imports: {},\n  types: {},\n  tests: {\n    language: 'typescript',\n    content: '',\n  },\n  tools: {\n    enabled: 'all',\n    active: '',\n    status: '',\n  },\n  zoom: 1,\n  processors: [],\n  customSettings: {},\n  editor: undefined,\n  fontFamily: undefined,\n  fontSize: undefined,\n  useTabs: false,\n  tabSize: 2,\n  lineNumbers: true,\n  wordWrap: false,\n  closeBrackets: true,\n  semicolons: true,\n  singleQuote: false,\n  trailingComma: true,\n  emmet: true,\n  editorMode: undefined,\n  version: process.env.VERSION as string,\n};\n", "import { Config, Language, Processor } from '../models';\n\nexport const debounce = (fn: (...x: any[]) => any, delay: number | (() => number)) => {\n  let timeout: any;\n\n  return (...args: unknown[]) => {\n    if (timeout) clearTimeout(timeout);\n    timeout = setTimeout(() => fn.apply(null, args), typeof delay === 'function' ? delay() : delay);\n  };\n};\n\nexport const decodeHTML = (html: string) => {\n  const txt = document.createElement('textarea');\n  txt.innerHTML = html;\n  return txt.value;\n};\n\nexport const encodeHTML = (html: string) =>\n  html\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/'/g, '&#39;')\n    .replace(/\"/g, '&#34;');\n\nexport const escapeScript = (code: string) => code.replace(/<\\/script>/g, '<\\\\/script>');\n\nexport const escapeCode = (code: string, slash = true) =>\n  code\n    .replace(/\\\\/g, slash ? '\\\\\\\\' : '\\\\')\n    .replace(/`/g, '\\\\`')\n    .replace(/<\\/script>/g, '<\\\\/script>');\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const pipe = (...fns: Function[]) =>\n  fns.reduce(\n    (f, g) =>\n      (...args: any) =>\n        g(f(...args)),\n  );\n\n// replace non-alphanumeric with underscore\nexport const safeName = (name: string, symbol = '_') => name.replace(/[\\W]+/g, symbol);\n\n// from https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n// added safari (on mac & ios): monaco editor is broken on safari\nexport const isMobile = () => {\n  let mobile = false;\n  const userAgent = navigator.userAgent.toLowerCase();\n  (function (a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(\n        a,\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\n        a.substr(0, 4),\n      )\n    ) {\n      mobile = true;\n    }\n  })(userAgent || navigator.vendor || (window as any).opera);\n\n  const safari = userAgent.indexOf('safari') > -1 && userAgent.indexOf('chrome') === -1; // chrome says it is safari!\n\n  return mobile || safari;\n};\n\nexport const isRelativeUrl = (url?: string) =>\n  !url?.startsWith('http') && !url?.startsWith('data:');\n\nexport const getAbsoluteUrl = (url: string, baseUrl = document.baseURI) =>\n  isRelativeUrl(url) ? new URL(url, baseUrl).href : url;\n\nexport const cloneObject = <T>(x: Record<string, any>): T => JSON.parse(JSON.stringify(x));\n\nexport const objectMap = (\n  obj: Record<string, any>,\n  fn: (value: any, key: string, index: number) => any,\n) => Object.fromEntries(Object.entries(obj).map(([k, v], i) => [k, fn(v, k, i)]));\n\nexport const objectFilter = (\n  obj: Record<string, any>,\n  predicate: (value: any, key: string, index: number) => any,\n) => Object.fromEntries(Object.entries(obj).filter(([k, v], i) => predicate(v, k, i)));\n\nexport const copyToClipboard = (text: string) => {\n  if (document.queryCommandSupported && document.queryCommandSupported('copy')) {\n    const textarea = document.createElement('textarea');\n    textarea.textContent = text;\n    textarea.style.position = 'fixed'; // Prevent scrolling to bottom of page in Microsoft Edge.\n    document.body.appendChild(textarea);\n    textarea.select();\n    try {\n      return document.execCommand('copy'); // Security exception may be thrown by some browsers.\n    } catch (ex) {\n      // eslint-disable-next-line no-console\n      console.warn('Copy to clipboard failed.', ex);\n      return false;\n    } finally {\n      document.body.removeChild(textarea);\n    }\n  }\n  return false;\n};\n\nexport const stringToValidJson = (str: string) =>\n  str\n    .replace(/'[^'\"]*'(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)/g, function replaceSingleQuotes(matchedStr) {\n      return '\"' + matchedStr.substring(1, matchedStr.length - 1) + '\"';\n    })\n    .replace(\n      /(\\w+(?=([^\"\\\\]*(\\\\.|\"([^\"\\\\]*\\\\.)*[^\"\\\\]*\"))*[^\"]*$))(\\s*:)(?!(\\w*)(?:\"))/gm,\n      function quoteNonQuoted(matchedStr) {\n        return '\"' + matchedStr.substring(0, matchedStr.length - 1).trimEnd() + '\":';\n      },\n    )\n    .replace(/,\\s*([\\]}])/g, '$1'); // remove trailing comma\n\nexport const stringify = (obj: any, pretty = false) => {\n  try {\n    return JSON.stringify(obj, undefined, pretty ? 2 : undefined);\n  } catch {\n    return '';\n  }\n};\n\nexport const getRandomString = () => String(Math.random()) + '-' + Date.now().toFixed();\n\nexport const downloadFile = (filename: string, extension: string, content: string) => {\n  const a = document.createElement('a');\n  a.style.display = 'none';\n  a.href = content;\n  a.download = safeName(filename) + '.' + extension;\n  a.click();\n  a.remove();\n};\n\nexport const loadScript = (url: string, name?: string) =>\n  new Promise((resolve, reject) => {\n    if (name && (window as any)[name]) {\n      return resolve((window as any)[name]);\n    }\n\n    const script = document.createElement('script');\n    script.src = url;\n    script.async = true;\n    const removeEventListeners = () => {\n      script.removeEventListener('load', onLoad);\n      script.removeEventListener('error', onError);\n    };\n    const onLoad = () => {\n      removeEventListeners();\n      if (!name) {\n        return resolve('loaded: ' + url);\n      }\n      const i = setInterval(() => {\n        if ((window as any)[name]) {\n          clearInterval(i);\n          return resolve((window as any)[name]);\n        }\n      }, 5);\n    };\n    const onError = () => {\n      removeEventListeners();\n      reject('failed to load: ' + url);\n    };\n    script.addEventListener('load', onLoad);\n    script.addEventListener('error', onError);\n    document.head.appendChild(script);\n  });\n\nexport const loadStylesheet = (url: string, id?: string, insertBefore?: string) => {\n  if (id && document.getElementById(id)) return;\n  const stylesheet = document.createElement('link');\n  stylesheet.rel = 'stylesheet';\n  stylesheet.href = url;\n  stylesheet.id = id || 'styles-' + getRandomString();\n  document.head.insertBefore(\n    stylesheet,\n    insertBefore ? document.querySelector(insertBefore) : null,\n  );\n};\n\nexport const typedArrayToBuffer = (array: Uint8Array): ArrayBuffer =>\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\n\nexport const getDate = () => {\n  let date = new Date();\n  const offset = date.getTimezoneOffset();\n  date = new Date(date.getTime() - offset * 60 * 1000);\n  return date.toISOString().split('T')[0];\n};\n\nexport const handleFetchError = (res: Response) => (res.ok ? res : Promise.reject());\nexport const fetchWithHandler = (input: RequestInfo, init?: RequestInit) =>\n  fetch(input, init).then(handleFetchError);\n\nexport const blobToBase64 = (file: Blob): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => (typeof reader.result === 'string' ? resolve(reader.result) : reject());\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const Uint8ArrayToBase64 = (u8: Uint8Array) => {\n  const CHUNK_SZ = 0x8000;\n  const c = [];\n  for (let i = 0; i < u8.length; i += CHUNK_SZ) {\n    c.push(String.fromCharCode.apply(null, (u8 as any).subarray(i, i + CHUNK_SZ)));\n  }\n  return btoa(c.join(''));\n};\n\nexport const base64ToUint8Array = (str: string) =>\n  new Uint8Array(\n    atob(str)\n      .split('')\n      .map((c) => c.charCodeAt(0)),\n  );\n\nexport const typedArraysAreEqual = (a: Uint8Array, b: Uint8Array) => {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nexport const getWorkerDataURL = (url: string) => {\n  const content = `importScripts(\"${url}\");`;\n  return 'data:text/javascript;base64,' + btoa(content);\n};\n\nexport const removeComments = (src: string) =>\n  src.replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '$1');\n\nexport const removeStrings = (src: string) =>\n  src\n    .replace(/'[^\\n']*'/gm, \"''\")\n    .replace(/\"[^\\n\"]*\"/gm, '\"\"')\n    .replace(/`[^`]*`/gm, '``');\n\nexport const removeCommentsAndStrings = (src: string) => removeStrings(removeComments(src));\n\nexport const getLanguageCustomSettings = (language: Language | Processor, config: Config) => ({\n  ...(config.customSettings as any)[language],\n});\n\nexport const getValidUrl = (url?: string) => {\n  if (!url) return null;\n  let validUrl = null;\n  if (url.startsWith('http') || url.startsWith('data:')) {\n    try {\n      validUrl = new URL(url).href;\n    } catch {\n      try {\n        validUrl = new URL(decodeURIComponent(url)).href;\n      } catch {\n        //\n      }\n    }\n  }\n  return validUrl;\n};\n\nexport const runOrContinue =\n  <T>(fn: (x: T) => Promise<T>, catchFn?: (err: unknown) => void) =>\n  async (x: T): Promise<T> => {\n    try {\n      const result = await fn(x);\n      return result;\n    } catch (error) {\n      if (typeof catchFn === 'function') {\n        catchFn(error);\n      }\n      return x;\n    }\n  };\n\nexport const getFileExtension = (file: string) => file.split('.')[file.split('.').length - 1];\n\nexport const isInIframe = () => {\n  try {\n    return window.self !== window.top;\n  } catch {\n    return true;\n  }\n};\n\nexport const indentCode = (code: string, spaces: number, skipFirstLine = true) =>\n  (skipFirstLine ? '' : ' '.repeat(spaces)) + code.split('\\n').join('\\n' + ' '.repeat(spaces));\n", "/* eslint-disable import/no-internal-modules */\nimport type { createEventsManager } from '../events';\nimport type { createModal } from '../modal';\nimport type { CodeEditor, ContentConfig, EditorId } from '../models';\nimport type { createNotifications } from '../notifications';\nimport { defaultConfig } from '../config/default-config';\nimport { embedScreen } from '../html';\nimport { cloneObject, copyToClipboard, encodeHTML, escapeCode, indentCode } from '../utils/utils';\n\nexport const createEmbedUI = async ({\n  baseUrl,\n  config,\n  editorLanguages,\n  modal,\n  notifications,\n  eventsManager,\n  createEditorFn,\n  getUrlFn,\n}: {\n  baseUrl: string;\n  config: ContentConfig;\n  editorLanguages: { [key in EditorId]: string };\n  modal: ReturnType<typeof createModal>;\n  notifications: ReturnType<typeof createNotifications>;\n  eventsManager: ReturnType<typeof createEventsManager>;\n  createEditorFn: (container: HTMLElement) => Promise<CodeEditor>;\n  getUrlFn: () => Promise<string>;\n}) => {\n  const title = config.title;\n  const activeEditor = config.activeEditor || 'markup';\n\n  const div = document.createElement('div');\n  div.innerHTML = embedScreen;\n  const embedContainer = div.firstChild as HTMLElement;\n  modal.show(embedContainer, { isAsync: true });\n\n  const previewContainer = embedContainer.querySelector<HTMLElement>('#embed-preview-container');\n  const form = embedContainer.querySelector<HTMLFormElement>('#embed-form');\n  const codeArea = embedContainer.querySelector<HTMLFormElement>('#embed-code');\n  const copyBtn = embedContainer.querySelector<HTMLFormElement>('#embed-copy-btn');\n  if (!previewContainer || !form || !codeArea || !copyBtn) return;\n\n  interface FormField {\n    title: string;\n    name:\n      | 'type'\n      | 'theme'\n      | 'loading'\n      | 'preview'\n      | 'lite'\n      | 'readonly'\n      | 'mode'\n      | 'view'\n      | 'activeEditor'\n      | 'tools';\n    options: Array<{ label?: string; value: string; checked?: boolean }>;\n    help?: string;\n  }\n  const formFields: FormField[] = [\n    {\n      title: 'Theme',\n      name: 'theme',\n      options: [\n        { label: 'Dark', value: 'dark', checked: true },\n        { label: 'Light', value: 'light' },\n      ],\n    },\n    {\n      title: 'Loading',\n      name: 'loading',\n      options: [\n        { label: 'Lazy', value: 'lazy', checked: true },\n        { label: 'On-click', value: 'click' },\n        { label: 'Eager', value: 'eager' },\n      ],\n    },\n    {\n      title: 'Show Result Preview',\n      name: 'preview',\n      options: [{ value: 'true' }],\n    },\n    {\n      title: 'Lite Mode',\n      name: 'lite',\n      options: [{ value: 'true', checked: false }],\n      help: '/docs/features/lite',\n    },\n    {\n      title: 'Read only',\n      name: 'readonly',\n      options: [{ value: 'true', checked: false }],\n    },\n    {\n      title: 'Display Mode',\n      name: 'mode',\n      options: [\n        { label: 'Full', value: 'full', checked: true },\n        { label: 'Editor', value: 'editor' },\n        { label: 'Code Block', value: 'codeblock' },\n        { label: 'Result', value: 'result' },\n      ],\n      help: '/docs/features/display-modes',\n    },\n    {\n      title: 'Default View',\n      name: 'view',\n      options: [\n        { label: 'Editor + Result', value: 'split', checked: true },\n        { label: 'Editor', value: 'editor' },\n        { label: 'Result', value: 'result' },\n      ],\n      help: '/docs/features/default-view',\n    },\n    {\n      title: 'Active Editor',\n      name: 'activeEditor',\n      options: [\n        { label: editorLanguages.markup, value: 'markup', checked: activeEditor === 'markup' },\n        { label: editorLanguages.style, value: 'style', checked: activeEditor === 'style' },\n        { label: editorLanguages.script, value: 'script', checked: activeEditor === 'script' },\n      ],\n    },\n    {\n      title: 'Tools',\n      name: 'tools',\n      options: [\n        { label: 'Closed', value: 'closed', checked: true },\n        { label: 'Open', value: 'open' },\n        { label: 'Full', value: 'full' },\n        { label: 'None', value: 'none' },\n      ],\n      help: '/docs/features/tools-pane',\n    },\n    {\n      title: 'Embed Type',\n      name: 'type',\n      options: [\n        { label: 'Script (CDN)', value: 'cdn', checked: true },\n        { label: 'Script (npm)', value: 'npm' },\n        { label: 'React', value: 'react' },\n        { label: 'Vue', value: 'vue' },\n        { label: 'Iframe', value: 'iframe' },\n        { label: 'HTML', value: 'html' },\n      ],\n    },\n  ];\n\n  formFields.forEach((field) => {\n    const title = document.createElement('label');\n    title.innerHTML = field.title;\n    form.appendChild(title);\n\n    if (field.help) {\n      const helpLink: HTMLAnchorElement = document.createElement('a');\n      helpLink.href = field.help;\n      helpLink.target = '_blank';\n      helpLink.classList.add('help-link');\n      helpLink.title = 'Click for info...';\n      title.appendChild(helpLink);\n\n      const helpIcon: HTMLImageElement = document.createElement('img');\n      helpIcon.src = baseUrl + 'assets/icons/info.svg';\n      helpLink.appendChild(helpIcon);\n    }\n\n    const fieldContainer = document.createElement('div');\n    fieldContainer.classList.add('input-container');\n    form.appendChild(fieldContainer);\n\n    field.options.forEach((option) => {\n      const name = `embed-${field.name}`;\n      const id = `${name}-${option.value}`;\n      const isCheckBox = !option.label && option.value === 'true';\n\n      const optionContainer = document.createElement('span');\n      fieldContainer.appendChild(optionContainer);\n\n      const input = document.createElement('input');\n      input.type = isCheckBox ? 'checkbox' : 'radio';\n      input.name = name;\n      input.id = id;\n      input.value = option.value;\n      input.checked = option.checked || false;\n      optionContainer.appendChild(input);\n\n      if (isCheckBox) {\n        input.classList.add('switch');\n      } else {\n        const label = document.createElement('label') as HTMLLabelElement;\n        label.classList.add('radio-label');\n        label.htmlFor = id;\n        label.innerHTML = option.label || '';\n        optionContainer.appendChild(label);\n      }\n    });\n  });\n\n  type FormData = {\n    [key in FormField['name']]?: string | boolean;\n  };\n\n  const editor = await createEditorFn(codeArea);\n  const url = await getUrlFn();\n  const urlObj = new URL(url);\n  const appUrl = urlObj.origin + urlObj.pathname;\n\n  const previewIframe: HTMLIFrameElement = document.createElement('iframe');\n  previewIframe.id = 'embed-preview-iframe';\n  previewContainer.innerHTML = '';\n  previewContainer.appendChild(previewIframe);\n\n  const getContainerId = () => 'livecodes-' + (Math.random() + 1).toString(36).substring(2);\n\n  const getContainerHtml = (id: string) =>\n    `\n<div id=\"${id}\">\n  <span>Open the project <a href=\"${url}\" target=\"_blank\">${title}</a> in <a href=\"${appUrl}\" target=\"_blank\">LiveCodes</a></span>\n</div>\n`.trimStart();\n\n  const getOptions = (data: FormData) => {\n    const config = {\n      ...(data.mode !== defaultConfig.mode ? { mode: data.mode } : {}),\n      ...(data.theme !== defaultConfig.theme ? { theme: data.theme } : {}),\n      ...(data.tools !== 'closed' ? { tools: { status: data.tools } } : {}),\n      ...(data.readonly ? { readonly: data.readonly } : {}),\n      ...(data.mode !== 'result' && data.activeEditor !== activeEditor\n        ? { activeEditor: data.activeEditor }\n        : {}),\n    };\n    const importId = urlObj.searchParams.get('x');\n    return {\n      ...(appUrl !== 'https://livecodes.io/' ? { appUrl } : {}),\n      ...(Object.keys(config).length > 0 ? { config } : {}),\n      ...(importId ? { import: importId } : {}),\n      ...(data.lite ? { lite: data.lite } : {}),\n      ...(data.loading !== 'lazy' ? { loading: data.loading } : {}),\n      ...(data.loading === 'click' && !data.preview ? { preview: false } : {}),\n      ...(data.view && data.view !== 'split' ? { view: data.view } : {}),\n    };\n  };\n\n  const getIframeUrl = (data: FormData) => {\n    const iframeUrl = new URL(url);\n    iframeUrl.searchParams.set(data.lite ? 'lite' : 'embed', 'true');\n\n    if (data.loading && data.loading !== 'lazy') {\n      iframeUrl.searchParams.set('loading', String(data.loading));\n    }\n    if (data.loading === 'click' && !data.preview) {\n      iframeUrl.searchParams.set('preview', 'false');\n    }\n    if (data.view && data.view !== 'split') {\n      iframeUrl.searchParams.set('view', String(data.view));\n    }\n    if (data.mode !== 'result' && data.activeEditor && data.activeEditor !== activeEditor) {\n      iframeUrl.searchParams.set('activeEditor', String(data.activeEditor));\n    }\n    if (data.mode && data.mode !== defaultConfig.mode) {\n      iframeUrl.searchParams.set('mode', String(data.mode));\n    }\n    if (data.theme && data.theme !== defaultConfig.theme) {\n      iframeUrl.searchParams.set('theme', String(data.theme));\n    }\n    if (data.tools && data.tools !== 'closed') {\n      iframeUrl.searchParams.set('tools', String(data.tools));\n    }\n    if (data.readonly !== undefined) {\n      iframeUrl.searchParams.set('readonly', String(data.readonly));\n    }\n    return decodeURIComponent(iframeUrl.href);\n  };\n\n  const codeTemlates = {\n    cdn: (data: FormData) => {\n      const containerId = getContainerId();\n      const containerHtml = getContainerHtml(containerId);\n      const options = getOptions(data);\n      const formatted = JSON.stringify(options, null, 2);\n      const indented = indentCode(formatted, 2);\n      // TODO use jsDelivr url\n      return `\n${containerHtml}\n<script src=\"${appUrl + 'sdk/livecodes.umd.js'}\"></script>\n<script>\n  const options = ${indented};\n  livecodes.createPlayground(\"#${containerId}\", options);\n</script>\n`.trimStart();\n    },\n    npm(data: FormData) {\n      const containerId = getContainerId();\n      const containerHtml = getContainerHtml(containerId);\n      const options = getOptions(data);\n      const formatted = JSON.stringify(options, null, 2);\n      const indented = indentCode(formatted, 2);\n      return `\n${containerHtml}\n<script type=\"module\">\n  import { createPlayground } from \"livecodes\";\n  const options = ${indented};\n  createPlayground(\"#${containerId}\", options);\n</script>\n`.trimStart();\n    },\n    react(data: FormData) {\n      const options = getOptions(data);\n      const formatted = JSON.stringify(options, null, 2);\n      const indented = indentCode(formatted, 2);\n      return `\nimport LiveCodes from \"livecodes/react\";\nexport default function App() {\n  const options = ${indented};\n  return <LiveCodes {...options}></LiveCodes>;\n}\n`.trimStart();\n    },\n    vue(data: FormData) {\n      const options = getOptions(data);\n      const formatted = JSON.stringify(options, null, 2);\n      const indented = indentCode(formatted, 2);\n      return `\n<script setup>\n  import LiveCodes from 'livecodes/vue';\n  const options = ${indented};\n</script>\n\n<template>\n  <LiveCodes v-bind=\"options\" />\n</template>\n`.trimStart();\n    },\n    iframe: (data: FormData) => {\n      const iframeUrl = getIframeUrl(data);\n      const nonEmbeddedUrl = new URL(iframeUrl);\n      nonEmbeddedUrl.searchParams.delete('embed');\n      nonEmbeddedUrl.searchParams.delete('lite');\n      const projectUrl = decodeURIComponent(nonEmbeddedUrl.href);\n      return `\n<iframe title=\"${title}\" scrolling=\"no\" loading=\"lazy\" style=\"height:300px; width: 100%; border:1px solid black; border-radius:5px; margin: 1em 0;\" src=\"${iframeUrl}\">\n  See the project <a href=\"${projectUrl}\" target=\"_blank\">${title}</a> on <a href=\"${appUrl}\" target=\"_blank\">LiveCodes</a>\n</iframe>\n`.trimStart();\n    },\n    html: (data: FormData) => {\n      const { import: _, ...options } = getOptions(data);\n      const projectConfig = {\n        ...cloneObject<ContentConfig>(config),\n        ...options.config,\n      };\n      (Object.keys(projectConfig) as Array<keyof ContentConfig>).forEach((key) => {\n        if (\n          JSON.stringify(projectConfig[key]) === JSON.stringify(defaultConfig[key]) ||\n          (key === 'activeEditor' && projectConfig.activeEditor === 'markup') ||\n          ['markup', 'style', 'script'].includes(key)\n        ) {\n          delete projectConfig[key];\n        }\n      });\n      if (Object.keys(projectConfig).length > 0) {\n        options.config = projectConfig;\n      }\n      const optionsAttr = escapeCode(JSON.stringify(options).replace(/'/g, '&#39;'));\n      return `\n<div class=\"livecodes\" style=\"height: 300px; border: 1px solid black; border-radius: 5px;\" data-options='${optionsAttr}'>\n<pre data-lang=\"${config.markup.language}\">${escapeCode(\n        encodeHTML(config.markup.content || ''),\n      )}</pre>\n<pre data-lang=\"${config.style.language}\">${escapeCode(\n        encodeHTML(config.style.content || ''),\n      )}</pre>\n<pre data-lang=\"${config.script.language}\">${escapeCode(\n        encodeHTML(config.script.content || ''),\n      )}</pre>\n</div>\n<script defer src=\"${appUrl + 'sdk/livecodes.js'}\" data-prefill></script>\n`.trimStart();\n    },\n  };\n\n  const previousSelections: FormData = {\n    view: 'split',\n    tools: 'closed',\n  };\n\n  const generateCode = async () => {\n    const formData = Array.from(new FormData(form)).reduce(\n      (acc, [name, value]) => ({\n        ...acc,\n        [name.replace('embed-', '')]: value === 'true' ? true : value,\n      }),\n      {} as FormData,\n    );\n\n    const previewInput = document.querySelector<HTMLInputElement>('input[name=\"embed-preview\"]')!;\n    if (formData.loading !== 'click') {\n      previewInput.checked = false;\n      previewInput.disabled = true;\n      formData.preview = false;\n    } else {\n      previewInput.disabled = false;\n    }\n\n    const viewInputs = document.querySelectorAll<HTMLInputElement>('input[name=\"embed-view\"]');\n    if (formData.mode !== 'full') {\n      previousSelections.view = formData.view || previousSelections.view;\n      delete formData.view;\n      viewInputs.forEach((input) => {\n        input.checked = false;\n        input.disabled = true;\n      });\n    } else {\n      viewInputs.forEach((input) => {\n        if (input.value === (formData.view || previousSelections.view)) {\n          input.checked = true;\n        }\n        input.disabled = false;\n        if (input.checked) {\n          formData.view = input.value;\n        }\n      });\n    }\n\n    const toolsInputs = document.querySelectorAll<HTMLInputElement>('input[name=\"embed-tools\"]');\n    if (formData.lite) {\n      previousSelections.tools = formData.tools || previousSelections.tools;\n      delete formData.tools;\n      toolsInputs.forEach((input) => {\n        input.checked = false;\n        input.disabled = true;\n      });\n    } else {\n      toolsInputs.forEach((input) => {\n        if (input.value === (formData.tools || previousSelections.tools)) {\n          input.checked = true;\n        }\n        input.disabled = false;\n        if (input.checked) {\n          formData.tools = input.value;\n        }\n      });\n    }\n\n    const activeEditorInputs = document.querySelectorAll<HTMLInputElement>(\n      'input[name=\"embed-activeEditor\"]',\n    );\n    activeEditorInputs.forEach((input) => {\n      if (formData.mode === 'result') {\n        input.checked = input.value === activeEditor;\n        input.disabled = true;\n        delete formData.activeEditor;\n      } else {\n        input.disabled = false;\n      }\n    });\n\n    previewIframe.src = getIframeUrl(formData);\n    const embedType = (formData as any).type;\n    const code = (codeTemlates as any)[embedType]?.(formData);\n    const embedTypeLanguage = embedType === 'react' ? 'jsx' : 'html';\n    if (editor.getLanguage() !== embedTypeLanguage) {\n      editor.setLanguage(embedTypeLanguage, code);\n    } else {\n      editor.setValue(code);\n    }\n  };\n\n  eventsManager.addEventListener(form, 'change', generateCode);\n\n  eventsManager.addEventListener(copyBtn, 'click', async () => {\n    if (copyToClipboard(editor.getValue())) {\n      notifications.success('Code copied to clipboard');\n    } else {\n      notifications.error('Failed to copy to clipboard');\n    }\n  });\n\n  generateCode();\n};\n"],
  "mappings": "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",
  "names": ["defaultConfig", "encodeHTML", "html", "escapeCode", "code", "slash", "cloneObject", "x", "copyToClipboard", "text", "textarea", "ex", "indentCode", "code", "spaces", "skipFirstLine", "createEmbedUI", "baseUrl", "config", "editorLanguages", "modal", "notifications", "eventsManager", "createEditorFn", "getUrlFn", "title", "activeEditor", "div", "embed_default", "embedContainer", "previewContainer", "form", "codeArea", "copyBtn", "field", "helpLink", "helpIcon", "fieldContainer", "option", "name", "id", "isCheckBox", "optionContainer", "input", "label", "editor", "url", "urlObj", "appUrl", "previewIframe", "getContainerId", "getContainerHtml", "getOptions", "data", "defaultConfig", "importId", "getIframeUrl", "iframeUrl", "codeTemlates", "containerId", "containerHtml", "options", "formatted", "indented", "indentCode", "nonEmbeddedUrl", "projectUrl", "_", "projectConfig", "cloneObject", "key", "escapeCode", "encodeHTML", "previousSelections", "generateCode", "formData", "acc", "value", "previewInput", "viewInputs", "toolsInputs", "embedType", "code", "embedTypeLanguage", "copyToClipboard"]
}
