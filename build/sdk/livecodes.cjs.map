{
  "version": 3,
  "sources": ["../../src/sdk/index.ts"],
  "sourcesContent": ["import type {\n  API,\n  Code,\n  Config,\n  ChangeHandler,\n  EmbedOptions,\n  Playground,\n  UrlQueryParams,\n  CustomEvents,\n} from './models';\n\nexport type { Code, Config, EmbedOptions, Playground };\nexport const createPlayground = async (\n  container: string | HTMLElement,\n  options: EmbedOptions = {},\n): Promise<Playground> => {\n  const {\n    appUrl = 'https://livecodes.io/',\n    params = {},\n    config = {},\n    import: importFrom,\n    lite = false,\n    loading = 'lazy',\n    template,\n    view = 'split',\n  } = options;\n\n  let containerElement: HTMLElement | null;\n  if (typeof container === 'string') {\n    containerElement = document.querySelector(container);\n  } else {\n    containerElement = container;\n  }\n  if (!container) {\n    throw new Error('Container element is required.');\n  }\n  if (!containerElement) {\n    throw new Error(`Cannot find element: \"${container}\"`);\n  }\n\n  let url: URL;\n  try {\n    url = new URL(appUrl);\n  } catch {\n    throw new Error(`\"${appUrl}\" is not a valid URL.`);\n  }\n\n  const origin = url.origin;\n\n  if (typeof params === 'object') {\n    (Object.keys(params) as Array<keyof UrlQueryParams>).forEach((param) => {\n      url.searchParams.set(param, String(params[param]));\n    });\n  }\n\n  if (typeof config === 'string') {\n    url.searchParams.set('config', config);\n  } else if (typeof config === 'object' && Object.keys(config).length > 0) {\n    try {\n      const encoded = btoa(JSON.stringify(config));\n      url.searchParams.set('config', 'data:application/json;base64,' + encoded);\n    } catch {\n      throw new Error('Invalid configuration object.');\n    }\n  }\n\n  if (template) {\n    url.searchParams.set('template', template);\n  }\n\n  if (importFrom) {\n    url.searchParams.set('x', importFrom);\n  }\n\n  url.searchParams.set(lite ? 'lite' : 'embed', 'true');\n  url.searchParams.set('loading', loading);\n  url.searchParams.set('view', view);\n\n  let livecodesReady = false;\n  let destroyed = false;\n  const alreadyDestroyedMessage = 'Cannot call API methods after calling `destroy()`.';\n  const createIframe = () =>\n    new Promise<HTMLIFrameElement>((resolve) => {\n      if (!containerElement) return;\n\n      const height = containerElement.dataset.height || containerElement.style.height;\n      if (height) {\n        const cssHeight = isNaN(Number(height)) ? height : height + 'px';\n        containerElement.style.height = cssHeight;\n      }\n      if (containerElement.dataset.defaultStyles !== 'false') {\n        containerElement.style.backgroundColor ||= '#fff';\n        containerElement.style.border ||= '1px solid black';\n        containerElement.style.borderRadius ||= '5px';\n        containerElement.style.boxSizing ||= 'border-box';\n        containerElement.style.padding ||= '0';\n        containerElement.style.width ||= '100%';\n        containerElement.style.height ||= containerElement.style.height || '300px';\n        containerElement.style.minHeight = '200px';\n        containerElement.style.overflow ||= 'hidden';\n        containerElement.style.resize ||= 'vertical';\n      }\n\n      const frame = document.createElement('iframe');\n      frame.setAttribute(\n        'allow',\n        'accelerometer; camera; encrypted-media; display-capture; geolocation; gyroscope; microphone; midi; clipboard-read; clipboard-write; web-share',\n      );\n      frame.setAttribute('allowtransparency', 'true');\n      frame.setAttribute('allowpaymentrequest', 'true');\n      frame.setAttribute('allowfullscreen', 'true');\n      frame.setAttribute(\n        'sandbox',\n        'allow-same-origin allow-downloads allow-forms allow-modals allow-orientation-lock allow-pointer-lock allow-popups allow-presentation allow-scripts',\n      );\n      const iframeLoading = loading === 'eager' ? 'eager' : 'lazy';\n      frame.setAttribute('loading', iframeLoading);\n      frame.classList.add('livecodes');\n      frame.style.height = '100%';\n      frame.style.minHeight = '200px';\n      frame.style.width = '100%';\n      frame.style.margin = '0';\n      frame.style.border = '0';\n      frame.style.borderRadius = containerElement.style.borderRadius;\n      frame.src = url.href;\n      frame.onload = () => {\n        addEventListener(\n          'message',\n          function readyHandler(\n            e: MessageEventInit<{\n              type: CustomEvents['ready'];\n              method: keyof API;\n              payload?: any;\n            }>,\n          ) {\n            if (e.source !== frame.contentWindow || e.origin !== origin) return;\n            if (e.data?.type === 'livecodes-ready') {\n              removeEventListener('message', readyHandler);\n              livecodesReady = true;\n            }\n          },\n        );\n        resolve(frame);\n      };\n      containerElement.innerHTML = '';\n      containerElement.appendChild(frame);\n    });\n\n  const iframe = await createIframe();\n\n  const delay = (duration = 100) =>\n    new Promise((resolve) => {\n      setTimeout(resolve, duration);\n    });\n\n  const loadLivecodes = (): Promise<void> =>\n    destroyed\n      ? Promise.reject(alreadyDestroyedMessage)\n      : new Promise(async (resolve) => {\n          const message: { type: CustomEvents['load'] } = { type: 'livecodes-load' };\n          iframe.contentWindow?.postMessage(message, origin);\n          while (!livecodesReady) {\n            await delay();\n          }\n          resolve();\n        });\n\n  const callAPI = <T>(method: keyof API, args?: any[]) =>\n    new Promise<T>(async (resolve, reject) => {\n      if (destroyed) {\n        return reject(alreadyDestroyedMessage);\n      }\n      if (!livecodesReady) {\n        await loadLivecodes();\n      }\n      addEventListener(\n        'message',\n        function handler(\n          e: MessageEventInit<{\n            type: CustomEvents['apiResponse'];\n            method: keyof API;\n            payload?: any;\n          }>,\n        ) {\n          if (\n            e.source !== iframe.contentWindow ||\n            e.origin !== origin ||\n            e.data?.type !== 'livecodes-api-response'\n          ) {\n            return;\n          }\n\n          if (e.data.method === method) {\n            removeEventListener('message', handler);\n            const payload = e.data.payload;\n            if (payload?.error) {\n              reject(payload.error);\n            } else {\n              resolve(payload);\n            }\n          }\n        },\n      );\n      iframe.contentWindow?.postMessage({ method, args }, origin);\n    });\n\n  let watchers: ChangeHandler[] = [];\n  const onChange = (fn: ChangeHandler) => {\n    if (destroyed) {\n      throw new Error(alreadyDestroyedMessage);\n    }\n    watchers.push(fn);\n    return {\n      remove: () => {\n        watchers = watchers.filter((w) => w !== fn);\n      },\n    };\n  };\n\n  addEventListener(\n    'message',\n    async (\n      e: MessageEventInit<{\n        type: CustomEvents['change'];\n      }>,\n    ) => {\n      if (\n        e.source !== iframe.contentWindow ||\n        e.origin !== origin ||\n        e.data?.type !== 'livecodes-change'\n      ) {\n        return;\n      }\n      const code = await callAPI<Code>('getCode');\n      const config = await callAPI<Config>('getConfig');\n\n      watchers.forEach((fn) => {\n        fn({ code, config });\n      });\n    },\n  );\n\n  const destroy = () => {\n    watchers.length = 0;\n    if (containerElement) {\n      containerElement.innerHTML = '';\n    }\n    destroyed = true;\n  };\n\n  if (loading === 'lazy' && 'IntersectionObserver' in window) {\n    const observer = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach(async (entry) => {\n          if (entry.isIntersecting) {\n            await loadLivecodes();\n            observer.unobserve(containerElement!);\n          }\n        });\n      },\n      { rootMargin: '150px' },\n    );\n    observer.observe(containerElement);\n  }\n\n  return {\n    load: () => loadLivecodes(),\n    run: () => callAPI('run'),\n    format: (allEditors) => callAPI('format', [allEditors]),\n    getShareUrl: (shortUrl) => callAPI('getShareUrl', [shortUrl]),\n    getConfig: (contentOnly) => callAPI('getConfig', [contentOnly]),\n    setConfig: (config) => callAPI('setConfig', [config]),\n    getCode: () => callAPI('getCode'),\n    show: (pane, options) => callAPI('show', [pane, options]),\n    runTests: () => callAPI('runTests'),\n    onChange: (fn) => onChange(fn),\n    exec: (command, ...args) => callAPI('exec', [command, ...args]),\n    destroy: () => {\n      if (!livecodesReady) {\n        if (destroyed) {\n          return Promise.reject(alreadyDestroyedMessage);\n        }\n        destroy();\n        return Promise.resolve();\n      }\n      return callAPI('destroy').then(destroy);\n    },\n  };\n};\n\nif (\n  globalThis.document && // to escape SSG in docusaurus\n  document.currentScript &&\n  'prefill' in document.currentScript?.dataset\n) {\n  window.addEventListener('load', () => {\n    document.querySelectorAll<HTMLElement>('.livecodes').forEach((codeblock) => {\n      let options: EmbedOptions | undefined;\n      const optionsStr = codeblock.dataset.options;\n      if (optionsStr) {\n        try {\n          options = JSON.parse(optionsStr);\n        } catch {\n          //\n        }\n      }\n      let config: Config | undefined;\n      const configStr = codeblock.dataset.config || codeblock.dataset.prefill;\n      if (configStr) {\n        try {\n          config = JSON.parse(configStr);\n        } catch {\n          //\n        }\n      }\n      createPlayground(codeblock, {\n        import: 'dom/' + encodeURIComponent(codeblock.outerHTML),\n        ...options,\n        ...(config ? { config } : {}),\n      });\n    });\n  });\n}\n"],
  "mappings": "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",
  "names": ["sdk_exports", "__export", "createPlayground", "__toCommonJS", "container", "options", "appUrl", "params", "config", "importFrom", "lite", "loading", "template", "view", "containerElement", "url", "origin", "param", "encoded", "livecodesReady", "destroyed", "alreadyDestroyedMessage", "iframe", "resolve", "_a", "_b", "_c", "_d", "_e", "_f", "_g", "_h", "_i", "height", "cssHeight", "frame", "iframeLoading", "readyHandler", "e", "delay", "duration", "loadLivecodes", "message", "callAPI", "method", "args", "reject", "handler", "payload", "watchers", "onChange", "fn", "w", "code", "destroy", "entries", "observer", "entry", "allEditors", "shortUrl", "contentOnly", "pane", "command", "codeblock", "optionsStr", "configStr"]
}
