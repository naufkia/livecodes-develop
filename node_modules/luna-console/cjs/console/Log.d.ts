import Emitter from 'licia/Emitter';
import Console from './index';
export interface IGroup {
    id: string;
    collapsed: boolean;
    parent: IGroup;
    indentLevel: number;
}
export interface IHeader {
    time: string;
    from: string;
}
export interface ILogOptions {
    type: string;
    args: any[];
    id: number;
    group?: IGroup;
    targetGroup?: IGroup;
    header?: IHeader;
    ignoreFilter?: boolean;
    accessGetter: boolean;
    unenumerable: boolean;
    lazyEvaluation: boolean;
}
export default class Log extends Emitter {
    container: HTMLElement;
    id: number;
    type: string;
    group?: IGroup;
    targetGroup?: IGroup;
    args: any[];
    header: IHeader | void;
    count: number;
    ignoreFilter: boolean;
    collapsed: boolean;
    src: any;
    width: number;
    height: number;
    private accessGetter;
    private unenumerable;
    private lazyEvaluation;
    private $container;
    private content;
    private $content;
    private console;
    constructor(console: Console, { type, args, id, group, targetGroup, header, ignoreFilter, accessGetter, unenumerable, lazyEvaluation, }: ILogOptions);
    checkGroup(): boolean;
    updateIcon(icon: string): this;
    addCount(): this;
    groupEnd(): this;
    updateTime(time: string): this;
    isAttached(): boolean;
    updateSize(silent?: boolean): void;
    html(): string;
    text(): string;
    private needSrc;
    private extractObj;
    private _extractObj;
    click(): void;
    private formatMsg;
    private render;
    private formatTable;
    private formatErr;
    private formatCommon;
    private formatDir;
    private formatTableVal;
    private getAbstract;
    private substituteStr;
    private formatJs;
    private formatObj;
    private formatEl;
}
